Search.setIndex({"docnames": ["classes", "control", "conventions", "cruise", "cruise-control", "descfcn", "describing_functions", "era_msd", "examples", "flatsys", "generated/control.ControlPlot", "generated/control.DescribingFunctionNonlinearity", "generated/control.DescribingFunctionResponse", "generated/control.FrequencyResponseData", "generated/control.FrequencyResponseList", "generated/control.InputOutputSystem", "generated/control.InterconnectedSystem", "generated/control.LTI", "generated/control.LinearICSystem", "generated/control.NonlinearIOSystem", "generated/control.NyquistResponseData", "generated/control.PoleZeroData", "generated/control.StateSpace", "generated/control.StateSpace.__call__", "generated/control.TimeResponseData", "generated/control.TimeResponseList", "generated/control.TransferFunction", "generated/control.TransferFunction.__call__", "generated/control.acker", "generated/control.append", "generated/control.augw", "generated/control.balanced_reduction", "generated/control.bdschur", "generated/control.bode_plot", "generated/control.canonical_form", "generated/control.care", "generated/control.combine_time_responses", "generated/control.connect", "generated/control.connection_table", "generated/control.correlation", "generated/control.create_estimator_iosystem", "generated/control.create_statefbk_iosystem", "generated/control.ctrb", "generated/control.damp", "generated/control.dare", "generated/control.db2mag", "generated/control.dcgain", "generated/control.describing_function", "generated/control.describing_function_plot", "generated/control.describing_function_response", "generated/control.dlqe", "generated/control.dlqr", "generated/control.dlyap", "generated/control.drss", "generated/control.eigensys_realization", "generated/control.feedback", "generated/control.find_eqpt", "generated/control.flatsys.BSplineFamily", "generated/control.flatsys.BasisFamily", "generated/control.flatsys.BezierFamily", "generated/control.flatsys.FlatSystem", "generated/control.flatsys.LinearFlatSystem", "generated/control.flatsys.PolyFamily", "generated/control.flatsys.SystemTrajectory", "generated/control.flatsys.flatsys", "generated/control.flatsys.point_to_point", "generated/control.flatsys.solve_flat_ocp", "generated/control.forced_response", "generated/control.frd", "generated/control.frequency_response", "generated/control.friction_backlash_nonlinearity", "generated/control.gangof4_plot", "generated/control.gangof4_response", "generated/control.get_input_ff_index", "generated/control.get_output_fb_index", "generated/control.gram", "generated/control.h2syn", "generated/control.hankel_singular_values", "generated/control.hinfsyn", "generated/control.impulse_response", "generated/control.initial_response", "generated/control.input_output_response", "generated/control.interconnect", "generated/control.isctime", "generated/control.isdtime", "generated/control.ispassive", "generated/control.issiso", "generated/control.issys", "generated/control.linearize", "generated/control.lqe", "generated/control.lqr", "generated/control.lyap", "generated/control.mag2db", "generated/control.margin", "generated/control.markov", "generated/control.matlab.append", "generated/control.matlab.balred", "generated/control.matlab.bode", "generated/control.matlab.c2d", "generated/control.matlab.care", "generated/control.matlab.connect", "generated/control.matlab.ctrb", "generated/control.matlab.damp", "generated/control.matlab.dare", "generated/control.matlab.db2mag", "generated/control.matlab.dcgain", "generated/control.matlab.dlqe", "generated/control.matlab.dlqr", "generated/control.matlab.dlyap", "generated/control.matlab.drss", "generated/control.matlab.era", "generated/control.matlab.evalfr", "generated/control.matlab.feedback", "generated/control.matlab.frd", "generated/control.matlab.freqresp", "generated/control.matlab.gangof4", "generated/control.matlab.gram", "generated/control.matlab.hsvd", "generated/control.matlab.impulse", "generated/control.matlab.initial", "generated/control.matlab.lqe", "generated/control.matlab.lqr", "generated/control.matlab.lsim", "generated/control.matlab.lyap", "generated/control.matlab.mag2db", "generated/control.matlab.margin", "generated/control.matlab.markov", "generated/control.matlab.minreal", "generated/control.matlab.modred", "generated/control.matlab.negate", "generated/control.matlab.nichols", "generated/control.matlab.nyquist", "generated/control.matlab.obsv", "generated/control.matlab.pade", "generated/control.matlab.parallel", "generated/control.matlab.place", "generated/control.matlab.pole", "generated/control.matlab.pzmap", "generated/control.matlab.rlocus", "generated/control.matlab.rss", "generated/control.matlab.series", "generated/control.matlab.sisotool", "generated/control.matlab.ss", "generated/control.matlab.ss2tf", "generated/control.matlab.step", "generated/control.matlab.tf", "generated/control.matlab.tf2ss", "generated/control.matlab.tfdata", "generated/control.matlab.unwrap", "generated/control.matlab.zero", "generated/control.minimal_realization", "generated/control.mixsyn", "generated/control.modal_form", "generated/control.model_reduction", "generated/control.negate", "generated/control.nichols_grid", "generated/control.nichols_plot", "generated/control.nlsys", "generated/control.norm", "generated/control.nyquist_plot", "generated/control.nyquist_response", "generated/control.observable_form", "generated/control.obsv", "generated/control.optimal.OptimalControlProblem", "generated/control.optimal.OptimalControlResult", "generated/control.optimal.OptimalEstimationProblem", "generated/control.optimal.OptimalEstimationResult", "generated/control.optimal.create_mpc_iosystem", "generated/control.optimal.disturbance_range_constraint", "generated/control.optimal.gaussian_likelihood_cost", "generated/control.optimal.input_poly_constraint", "generated/control.optimal.input_range_constraint", "generated/control.optimal.output_poly_constraint", "generated/control.optimal.output_range_constraint", "generated/control.optimal.quadratic_cost", "generated/control.optimal.solve_ocp", "generated/control.optimal.state_poly_constraint", "generated/control.optimal.state_range_constraint", "generated/control.pade", "generated/control.parallel", "generated/control.phase_crossover_frequencies", "generated/control.phase_plane_plot", "generated/control.phase_plot", "generated/control.phaseplot.boxgrid", "generated/control.phaseplot.equilpoints", "generated/control.phaseplot.separatrices", "generated/control.phaseplot.streamlines", "generated/control.phaseplot.vectorfield", "generated/control.place", "generated/control.place_varga", "generated/control.pole_zero_map", "generated/control.pole_zero_plot", "generated/control.pole_zero_subplots", "generated/control.poles", "generated/control.pzmap", "generated/control.reachable_form", "generated/control.relay_hysteresis_nonlinearity", "generated/control.reset_defaults", "generated/control.reset_rcParams", "generated/control.root_locus", "generated/control.root_locus_map", "generated/control.root_locus_plot", "generated/control.rootlocus_pid_designer", "generated/control.rss", "generated/control.sample_system", "generated/control.saturation_nonlinearity", "generated/control.series", "generated/control.set_defaults", "generated/control.similarity_transform", "generated/control.singular_values_plot", "generated/control.singular_values_response", "generated/control.sisotool", "generated/control.ss", "generated/control.ss2tf", "generated/control.ssdata", "generated/control.stability_margins", "generated/control.step_info", "generated/control.step_response", "generated/control.summing_junction", "generated/control.tf", "generated/control.tf2ss", "generated/control.tfdata", "generated/control.time_response_plot", "generated/control.timebase", "generated/control.unwrap", "generated/control.use_fbs_defaults", "generated/control.use_legacy_defaults", "generated/control.use_matlab_defaults", "generated/control.white_noise", "generated/control.zeros", "generated/control.zpk", "index", "interconnect_tutorial", "intro", "iosys", "kincar-flatsys", "kincar-fusion", "markov", "matlab", "mhe-pvtol", "mpc_aircraft", "mrac_siso_lyapunov", "mrac_siso_mit", "myenv/lib/python3.12/site-packages/alabaster-0.7.16.dist-info/LICENSE", "myenv/lib/python3.12/site-packages/bleach/_vendor/README", "myenv/lib/python3.12/site-packages/bleach/_vendor/html5lib-1.1.dist-info/AUTHORS", "myenv/lib/python3.12/site-packages/imagesize-1.4.1.dist-info/LICENSE", "myenv/lib/python3.12/site-packages/numpy/ma/README", "myenv/lib/python3.12/site-packages/numpydoc/templates/numpydoc_docstring", "myenv/lib/python3.12/site-packages/numpydoc/tests/tinybuild/index", "myenv/lib/python3.12/site-packages/prompt_toolkit-3.0.48.dist-info/AUTHORS", "myenv/lib/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/base", "myenv/lib/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/class", "myenv/lib/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/module", "myenv/lib/python3.12/site-packages/webencodings-0.5.1.dist-info/DESCRIPTION", "myenv/lib64/python3.12/site-packages/alabaster-0.7.16.dist-info/LICENSE", "myenv/lib64/python3.12/site-packages/bleach/_vendor/README", "myenv/lib64/python3.12/site-packages/bleach/_vendor/html5lib-1.1.dist-info/AUTHORS", "myenv/lib64/python3.12/site-packages/imagesize-1.4.1.dist-info/LICENSE", "myenv/lib64/python3.12/site-packages/numpy/ma/README", "myenv/lib64/python3.12/site-packages/numpydoc/templates/numpydoc_docstring", "myenv/lib64/python3.12/site-packages/numpydoc/tests/tinybuild/index", "myenv/lib64/python3.12/site-packages/prompt_toolkit-3.0.48.dist-info/AUTHORS", "myenv/lib64/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/base", "myenv/lib64/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/class", "myenv/lib64/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/module", "myenv/lib64/python3.12/site-packages/webencodings-0.5.1.dist-info/DESCRIPTION", "optimal", "phase_plane_plots", "plotting", "pvtol-lqr", "pvtol-lqr-nested", "pvtol-nested", "pvtol-outputfbk", "robust_mimo", "robust_siso", "rss-balred", "scherer_etal_ex7_H2_h2syn", "scherer_etal_ex7_Hinf_hinfsyn", "secord-matlab", "simulating_discrete_nonlinear", "steering", "steering-gainsched", "steering-optimal", "stochresp"], "filenames": ["classes.rst", "control.rst", "conventions.rst", "cruise.ipynb", "cruise-control.rst", "descfcn.rst", "describing_functions.ipynb", "era_msd.rst", "examples.rst", "flatsys.rst", "generated/control.ControlPlot.rst", "generated/control.DescribingFunctionNonlinearity.rst", "generated/control.DescribingFunctionResponse.rst", "generated/control.FrequencyResponseData.rst", "generated/control.FrequencyResponseList.rst", "generated/control.InputOutputSystem.rst", "generated/control.InterconnectedSystem.rst", "generated/control.LTI.rst", "generated/control.LinearICSystem.rst", "generated/control.NonlinearIOSystem.rst", "generated/control.NyquistResponseData.rst", "generated/control.PoleZeroData.rst", "generated/control.StateSpace.rst", "generated/control.StateSpace.__call__.rst", "generated/control.TimeResponseData.rst", "generated/control.TimeResponseList.rst", "generated/control.TransferFunction.rst", "generated/control.TransferFunction.__call__.rst", "generated/control.acker.rst", "generated/control.append.rst", "generated/control.augw.rst", "generated/control.balanced_reduction.rst", "generated/control.bdschur.rst", "generated/control.bode_plot.rst", "generated/control.canonical_form.rst", "generated/control.care.rst", "generated/control.combine_time_responses.rst", "generated/control.connect.rst", "generated/control.connection_table.rst", "generated/control.correlation.rst", "generated/control.create_estimator_iosystem.rst", "generated/control.create_statefbk_iosystem.rst", "generated/control.ctrb.rst", "generated/control.damp.rst", "generated/control.dare.rst", "generated/control.db2mag.rst", "generated/control.dcgain.rst", "generated/control.describing_function.rst", "generated/control.describing_function_plot.rst", "generated/control.describing_function_response.rst", "generated/control.dlqe.rst", "generated/control.dlqr.rst", "generated/control.dlyap.rst", "generated/control.drss.rst", "generated/control.eigensys_realization.rst", "generated/control.feedback.rst", "generated/control.find_eqpt.rst", "generated/control.flatsys.BSplineFamily.rst", "generated/control.flatsys.BasisFamily.rst", "generated/control.flatsys.BezierFamily.rst", "generated/control.flatsys.FlatSystem.rst", "generated/control.flatsys.LinearFlatSystem.rst", "generated/control.flatsys.PolyFamily.rst", "generated/control.flatsys.SystemTrajectory.rst", "generated/control.flatsys.flatsys.rst", "generated/control.flatsys.point_to_point.rst", "generated/control.flatsys.solve_flat_ocp.rst", "generated/control.forced_response.rst", "generated/control.frd.rst", "generated/control.frequency_response.rst", "generated/control.friction_backlash_nonlinearity.rst", "generated/control.gangof4_plot.rst", "generated/control.gangof4_response.rst", "generated/control.get_input_ff_index.rst", "generated/control.get_output_fb_index.rst", "generated/control.gram.rst", "generated/control.h2syn.rst", "generated/control.hankel_singular_values.rst", "generated/control.hinfsyn.rst", "generated/control.impulse_response.rst", "generated/control.initial_response.rst", "generated/control.input_output_response.rst", "generated/control.interconnect.rst", "generated/control.isctime.rst", "generated/control.isdtime.rst", "generated/control.ispassive.rst", "generated/control.issiso.rst", "generated/control.issys.rst", "generated/control.linearize.rst", "generated/control.lqe.rst", "generated/control.lqr.rst", "generated/control.lyap.rst", "generated/control.mag2db.rst", "generated/control.margin.rst", "generated/control.markov.rst", "generated/control.matlab.append.rst", "generated/control.matlab.balred.rst", "generated/control.matlab.bode.rst", "generated/control.matlab.c2d.rst", "generated/control.matlab.care.rst", "generated/control.matlab.connect.rst", "generated/control.matlab.ctrb.rst", "generated/control.matlab.damp.rst", "generated/control.matlab.dare.rst", "generated/control.matlab.db2mag.rst", "generated/control.matlab.dcgain.rst", "generated/control.matlab.dlqe.rst", "generated/control.matlab.dlqr.rst", "generated/control.matlab.dlyap.rst", "generated/control.matlab.drss.rst", "generated/control.matlab.era.rst", "generated/control.matlab.evalfr.rst", "generated/control.matlab.feedback.rst", "generated/control.matlab.frd.rst", "generated/control.matlab.freqresp.rst", "generated/control.matlab.gangof4.rst", "generated/control.matlab.gram.rst", "generated/control.matlab.hsvd.rst", "generated/control.matlab.impulse.rst", "generated/control.matlab.initial.rst", "generated/control.matlab.lqe.rst", "generated/control.matlab.lqr.rst", "generated/control.matlab.lsim.rst", "generated/control.matlab.lyap.rst", "generated/control.matlab.mag2db.rst", "generated/control.matlab.margin.rst", "generated/control.matlab.markov.rst", "generated/control.matlab.minreal.rst", "generated/control.matlab.modred.rst", "generated/control.matlab.negate.rst", "generated/control.matlab.nichols.rst", "generated/control.matlab.nyquist.rst", "generated/control.matlab.obsv.rst", "generated/control.matlab.pade.rst", "generated/control.matlab.parallel.rst", "generated/control.matlab.place.rst", "generated/control.matlab.pole.rst", "generated/control.matlab.pzmap.rst", "generated/control.matlab.rlocus.rst", "generated/control.matlab.rss.rst", "generated/control.matlab.series.rst", "generated/control.matlab.sisotool.rst", "generated/control.matlab.ss.rst", "generated/control.matlab.ss2tf.rst", "generated/control.matlab.step.rst", "generated/control.matlab.tf.rst", "generated/control.matlab.tf2ss.rst", "generated/control.matlab.tfdata.rst", "generated/control.matlab.unwrap.rst", "generated/control.matlab.zero.rst", "generated/control.minimal_realization.rst", "generated/control.mixsyn.rst", "generated/control.modal_form.rst", "generated/control.model_reduction.rst", "generated/control.negate.rst", "generated/control.nichols_grid.rst", "generated/control.nichols_plot.rst", "generated/control.nlsys.rst", "generated/control.norm.rst", "generated/control.nyquist_plot.rst", "generated/control.nyquist_response.rst", "generated/control.observable_form.rst", "generated/control.obsv.rst", "generated/control.optimal.OptimalControlProblem.rst", "generated/control.optimal.OptimalControlResult.rst", "generated/control.optimal.OptimalEstimationProblem.rst", "generated/control.optimal.OptimalEstimationResult.rst", "generated/control.optimal.create_mpc_iosystem.rst", "generated/control.optimal.disturbance_range_constraint.rst", "generated/control.optimal.gaussian_likelihood_cost.rst", "generated/control.optimal.input_poly_constraint.rst", "generated/control.optimal.input_range_constraint.rst", "generated/control.optimal.output_poly_constraint.rst", "generated/control.optimal.output_range_constraint.rst", "generated/control.optimal.quadratic_cost.rst", "generated/control.optimal.solve_ocp.rst", "generated/control.optimal.state_poly_constraint.rst", "generated/control.optimal.state_range_constraint.rst", "generated/control.pade.rst", "generated/control.parallel.rst", "generated/control.phase_crossover_frequencies.rst", "generated/control.phase_plane_plot.rst", "generated/control.phase_plot.rst", "generated/control.phaseplot.boxgrid.rst", "generated/control.phaseplot.equilpoints.rst", "generated/control.phaseplot.separatrices.rst", "generated/control.phaseplot.streamlines.rst", "generated/control.phaseplot.vectorfield.rst", "generated/control.place.rst", "generated/control.place_varga.rst", "generated/control.pole_zero_map.rst", "generated/control.pole_zero_plot.rst", "generated/control.pole_zero_subplots.rst", "generated/control.poles.rst", "generated/control.pzmap.rst", "generated/control.reachable_form.rst", "generated/control.relay_hysteresis_nonlinearity.rst", "generated/control.reset_defaults.rst", "generated/control.reset_rcParams.rst", "generated/control.root_locus.rst", "generated/control.root_locus_map.rst", "generated/control.root_locus_plot.rst", "generated/control.rootlocus_pid_designer.rst", "generated/control.rss.rst", "generated/control.sample_system.rst", "generated/control.saturation_nonlinearity.rst", "generated/control.series.rst", "generated/control.set_defaults.rst", "generated/control.similarity_transform.rst", "generated/control.singular_values_plot.rst", "generated/control.singular_values_response.rst", "generated/control.sisotool.rst", "generated/control.ss.rst", "generated/control.ss2tf.rst", "generated/control.ssdata.rst", "generated/control.stability_margins.rst", "generated/control.step_info.rst", "generated/control.step_response.rst", "generated/control.summing_junction.rst", "generated/control.tf.rst", "generated/control.tf2ss.rst", "generated/control.tfdata.rst", "generated/control.time_response_plot.rst", "generated/control.timebase.rst", "generated/control.unwrap.rst", "generated/control.use_fbs_defaults.rst", "generated/control.use_legacy_defaults.rst", "generated/control.use_matlab_defaults.rst", "generated/control.white_noise.rst", "generated/control.zeros.rst", "generated/control.zpk.rst", "index.rst", "interconnect_tutorial.ipynb", "intro.rst", "iosys.rst", "kincar-flatsys.rst", "kincar-fusion.ipynb", "markov.rst", "matlab.rst", "mhe-pvtol.ipynb", "mpc_aircraft.ipynb", "mrac_siso_lyapunov.rst", "mrac_siso_mit.rst", "myenv/lib/python3.12/site-packages/alabaster-0.7.16.dist-info/LICENSE.rst", "myenv/lib/python3.12/site-packages/bleach/_vendor/README.rst", "myenv/lib/python3.12/site-packages/bleach/_vendor/html5lib-1.1.dist-info/AUTHORS.rst", "myenv/lib/python3.12/site-packages/imagesize-1.4.1.dist-info/LICENSE.rst", "myenv/lib/python3.12/site-packages/numpy/ma/README.rst", "myenv/lib/python3.12/site-packages/numpydoc/templates/numpydoc_docstring.rst", "myenv/lib/python3.12/site-packages/numpydoc/tests/tinybuild/index.rst", "myenv/lib/python3.12/site-packages/prompt_toolkit-3.0.48.dist-info/AUTHORS.rst", "myenv/lib/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/base.rst", "myenv/lib/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/class.rst", "myenv/lib/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/module.rst", "myenv/lib/python3.12/site-packages/webencodings-0.5.1.dist-info/DESCRIPTION.rst", "myenv/lib64/python3.12/site-packages/alabaster-0.7.16.dist-info/LICENSE.rst", "myenv/lib64/python3.12/site-packages/bleach/_vendor/README.rst", "myenv/lib64/python3.12/site-packages/bleach/_vendor/html5lib-1.1.dist-info/AUTHORS.rst", "myenv/lib64/python3.12/site-packages/imagesize-1.4.1.dist-info/LICENSE.rst", "myenv/lib64/python3.12/site-packages/numpy/ma/README.rst", "myenv/lib64/python3.12/site-packages/numpydoc/templates/numpydoc_docstring.rst", "myenv/lib64/python3.12/site-packages/numpydoc/tests/tinybuild/index.rst", "myenv/lib64/python3.12/site-packages/prompt_toolkit-3.0.48.dist-info/AUTHORS.rst", "myenv/lib64/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/base.rst", "myenv/lib64/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/class.rst", "myenv/lib64/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/module.rst", "myenv/lib64/python3.12/site-packages/webencodings-0.5.1.dist-info/DESCRIPTION.rst", "optimal.rst", "phase_plane_plots.rst", "plotting.rst", "pvtol-lqr.rst", "pvtol-lqr-nested.ipynb", "pvtol-nested.rst", "pvtol-outputfbk.ipynb", "robust_mimo.rst", "robust_siso.rst", "rss-balred.rst", "scherer_etal_ex7_H2_h2syn.rst", "scherer_etal_ex7_Hinf_hinfsyn.rst", "secord-matlab.rst", "simulating_discrete_nonlinear.ipynb", "steering.ipynb", "steering-gainsched.rst", "steering-optimal.rst", "stochresp.ipynb"], "titles": ["Control system classes", "Function reference", "Library conventions", "Cruise control", "Cruise control design example (as a nonlinear I/O system)", "Describing functions", "Describing function analysis", "ERA example, mass spring damper system", "Examples", "Differentially flat systems", "control.ControlPlot", "control.DescribingFunctionNonlinearity", "control.DescribingFunctionResponse", "control.FrequencyResponseData", "control.FrequencyResponseList", "control.InputOutputSystem", "control.InterconnectedSystem", "control.LTI", "control.LinearICSystem", "control.NonlinearIOSystem", "control.NyquistResponseData", "control.PoleZeroData", "control.StateSpace", "control.StateSpace.__call__", "control.TimeResponseData", "control.TimeResponseList", "control.TransferFunction", "control.TransferFunction.__call__", "control.acker", "control.append", "control.augw", "control.balanced_reduction", "control.bdschur", "control.bode_plot", "control.canonical_form", "control.care", "control.combine_time_responses", "control.connect", "control.connection_table", "control.correlation", "control.create_estimator_iosystem", "control.create_statefbk_iosystem", "control.ctrb", "control.damp", "control.dare", "control.db2mag", "control.dcgain", "control.describing_function", "control.describing_function_plot", "control.describing_function_response", "control.dlqe", "control.dlqr", "control.dlyap", "control.drss", "control.eigensys_realization", "control.feedback", "control.find_eqpt", "control.flatsys.BSplineFamily", "control.flatsys.BasisFamily", "control.flatsys.BezierFamily", "control.flatsys.FlatSystem", "control.flatsys.LinearFlatSystem", "control.flatsys.PolyFamily", "control.flatsys.SystemTrajectory", "control.flatsys.flatsys", "control.flatsys.point_to_point", "control.flatsys.solve_flat_ocp", "control.forced_response", "control.frd", "control.frequency_response", "control.friction_backlash_nonlinearity", "control.gangof4_plot", "control.gangof4_response", "control.get_input_ff_index", "control.get_output_fb_index", "control.gram", "control.h2syn", "control.hankel_singular_values", "control.hinfsyn", "control.impulse_response", "control.initial_response", "control.input_output_response", "control.interconnect", "control.isctime", "control.isdtime", "control.ispassive", "control.issiso", "control.issys", "control.linearize", "control.lqe", "control.lqr", "control.lyap", "control.mag2db", "control.margin", "control.markov", "control.matlab.append", "control.matlab.balred", "control.matlab.bode", "control.matlab.c2d", "control.matlab.care", "control.matlab.connect", "control.matlab.ctrb", "control.matlab.damp", "control.matlab.dare", "control.matlab.db2mag", "control.matlab.dcgain", "control.matlab.dlqe", "control.matlab.dlqr", "control.matlab.dlyap", "control.matlab.drss", "control.matlab.era", "control.matlab.evalfr", "control.matlab.feedback", "control.matlab.frd", "control.matlab.freqresp", "control.matlab.gangof4", "control.matlab.gram", "control.matlab.hsvd", "control.matlab.impulse", "control.matlab.initial", "control.matlab.lqe", "control.matlab.lqr", "control.matlab.lsim", "control.matlab.lyap", "control.matlab.mag2db", "control.matlab.margin", "control.matlab.markov", "control.matlab.minreal", "control.matlab.modred", "control.matlab.negate", "control.matlab.nichols", "control.matlab.nyquist", "control.matlab.obsv", "control.matlab.pade", "control.matlab.parallel", "control.matlab.place", "control.matlab.pole", "control.matlab.pzmap", "control.matlab.rlocus", "control.matlab.rss", "control.matlab.series", "control.matlab.sisotool", "control.matlab.ss", "control.matlab.ss2tf", "control.matlab.step", "control.matlab.tf", "control.matlab.tf2ss", "control.matlab.tfdata", "control.matlab.unwrap", "control.matlab.zero", "control.minimal_realization", "control.mixsyn", "control.modal_form", "control.model_reduction", "control.negate", "control.nichols_grid", "control.nichols_plot", "control.nlsys", "control.norm", "control.nyquist_plot", "control.nyquist_response", "control.observable_form", "control.obsv", "control.optimal.OptimalControlProblem", "control.optimal.OptimalControlResult", "control.optimal.OptimalEstimationProblem", "control.optimal.OptimalEstimationResult", "control.optimal.create_mpc_iosystem", "control.optimal.disturbance_range_constraint", "control.optimal.gaussian_likelihood_cost", "control.optimal.input_poly_constraint", "control.optimal.input_range_constraint", "control.optimal.output_poly_constraint", "control.optimal.output_range_constraint", "control.optimal.quadratic_cost", "control.optimal.solve_ocp", "control.optimal.state_poly_constraint", "control.optimal.state_range_constraint", "control.pade", "control.parallel", "control.phase_crossover_frequencies", "control.phase_plane_plot", "control.phase_plot", "control.phaseplot.boxgrid", "control.phaseplot.equilpoints", "control.phaseplot.separatrices", "control.phaseplot.streamlines", "control.phaseplot.vectorfield", "control.place", "control.place_varga", "control.pole_zero_map", "control.pole_zero_plot", "control.pole_zero_subplots", "control.poles", "control.pzmap", "control.reachable_form", "control.relay_hysteresis_nonlinearity", "control.reset_defaults", "control.reset_rcParams", "control.root_locus", "control.root_locus_map", "control.root_locus_plot", "control.rootlocus_pid_designer", "control.rss", "control.sample_system", "control.saturation_nonlinearity", "control.series", "control.set_defaults", "control.similarity_transform", "control.singular_values_plot", "control.singular_values_response", "control.sisotool", "control.ss", "control.ss2tf", "control.ssdata", "control.stability_margins", "control.step_info", "control.step_response", "control.summing_junction", "control.tf", "control.tf2ss", "control.tfdata", "control.time_response_plot", "control.timebase", "control.unwrap", "control.use_fbs_defaults", "control.use_legacy_defaults", "control.use_matlab_defaults", "control.white_noise", "control.zeros", "control.zpk", "Python Control Systems Library", "Interconnect Tutorial", "Introduction", "Input/output systems", "Differentially flat system - kinematic car", "Discrete Time Sensor Fusion", "Estimation of Makrov parameters", "MATLAB compatibility module", "Moving Horizon Estimation", "Model Predictive Control: Aircraft Model", "Model-Reference Adaptive Control (MRAC) SISO, direct Lyapunov rule", "Model-Reference Adaptive Control (MRAC) SISO, direct MIT rule", "&lt;no title&gt;", "Vendored library policy", "Credits", "The MIT License (MIT)", "A guide to masked arrays in NumPy", "&lt;no title&gt;", "numpydoc_test_module", "Authors", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "python-webencodings", "&lt;no title&gt;", "Vendored library policy", "Credits", "The MIT License (MIT)", "A guide to masked arrays in NumPy", "&lt;no title&gt;", "numpydoc_test_module", "Authors", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "python-webencodings", "Optimization-based control", "Phase  plot examples", "Plotting data", "LQR control design for vertical takeoff and landing aircraft", "Vertical takeoff and landing aircraft", "Inner/outer control design for vertical takeoff and landing aircraft", "Output feedback control using LQR and extended Kalman filtering", "MIMO robust control example (SP96, Example 3.8)", "SISO robust control example (SP96, Example 2.1)", "Balanced model reduction examples", "H2 synthesis, based on Scherer et al. 1997 example 7", "Hinf synthesis, based on Scherer et al. 1997 example 7", "Secord order system (MATLAB module example)", "Simulating interconnections of systems", "Vehicle steering", "Gain scheduled control for vehicle steeering (I/O system)", "Optimal control for vehicle steering (lane change)", "Stochastic Response"], "terms": {"The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 32, 33, 35, 37, 39, 40, 41, 44, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 77, 79, 80, 81, 82, 85, 88, 89, 90, 94, 97, 98, 99, 100, 103, 105, 106, 107, 110, 111, 112, 114, 115, 117, 118, 120, 121, 122, 126, 127, 129, 130, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 156, 157, 159, 160, 163, 164, 165, 166, 168, 169, 171, 173, 174, 175, 177, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 216, 217, 218, 219, 220, 222, 225, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 247, 254, 255, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "list": [0, 2, 3, 4, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 26, 29, 31, 33, 36, 37, 40, 41, 48, 49, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 80, 81, 82, 88, 95, 96, 97, 98, 100, 112, 113, 114, 115, 117, 129, 130, 131, 134, 138, 139, 140, 141, 142, 143, 145, 146, 154, 155, 156, 157, 159, 160, 163, 165, 167, 175, 179, 181, 182, 183, 184, 185, 186, 187, 191, 192, 194, 199, 200, 201, 203, 204, 206, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 230, 231, 233, 234, 235, 239, 243, 247, 255, 259, 267, 269, 270, 271, 281, 282], "below": [0, 8, 13, 17, 18, 22, 26, 31, 32, 33, 61, 93, 96, 125, 145, 165, 202, 215, 219, 247, 259, 269, 270, 271, 281], "ar": [0, 1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 54, 56, 60, 61, 64, 65, 66, 67, 68, 69, 71, 72, 77, 79, 80, 81, 82, 88, 89, 90, 91, 93, 94, 96, 98, 99, 100, 102, 103, 105, 106, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 137, 139, 141, 142, 143, 144, 145, 146, 153, 157, 158, 159, 160, 163, 164, 165, 166, 175, 181, 182, 184, 185, 186, 187, 190, 191, 194, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 215, 217, 219, 220, 222, 225, 227, 231, 232, 233, 234, 235, 236, 238, 239, 243, 244, 247, 254, 255, 256, 259, 266, 267, 269, 270, 271, 272, 273, 275, 280, 281, 282, 283], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 79, 80, 81, 82, 85, 87, 88, 89, 90, 91, 94, 95, 97, 98, 99, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 126, 128, 129, 130, 134, 135, 138, 139, 140, 141, 142, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 167, 169, 170, 172, 174, 175, 176, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 222, 225, 227, 228, 230, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 246, 254, 255, 256, 258, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "repres": [0, 2, 3, 4, 5, 9, 10, 12, 13, 15, 17, 18, 19, 22, 24, 26, 39, 40, 41, 49, 57, 59, 60, 61, 62, 63, 64, 67, 69, 70, 72, 79, 80, 81, 93, 114, 125, 145, 157, 196, 205, 215, 217, 219, 222, 234, 239, 267, 269, 271, 273, 281], "model": [0, 4, 7, 8, 13, 16, 18, 22, 29, 31, 33, 38, 54, 61, 68, 95, 96, 110, 113, 127, 128, 133, 150, 153, 159, 160, 165, 167, 178, 231, 234, 235, 267, 268, 270, 271, 272, 273, 277, 278, 280, 281, 282, 283], "input": [0, 2, 4, 5, 6, 9, 11, 13, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 28, 29, 33, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 154, 157, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 179, 188, 189, 196, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 216, 217, 218, 219, 220, 222, 230, 231, 232, 235, 236, 237, 239, 240, 241, 242, 247, 259, 267, 268, 269, 270, 271, 273, 274, 277, 278, 280, 281, 282, 283, 284], "output": [0, 2, 3, 4, 5, 6, 7, 8, 9, 13, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 29, 33, 36, 37, 38, 40, 41, 47, 48, 49, 51, 53, 55, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 94, 95, 98, 100, 105, 107, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 126, 127, 129, 131, 132, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 154, 157, 159, 160, 162, 163, 165, 166, 167, 168, 172, 173, 175, 179, 196, 199, 200, 201, 203, 204, 206, 210, 211, 212, 213, 216, 217, 218, 219, 220, 222, 224, 230, 231, 232, 235, 236, 237, 239, 240, 241, 242, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284], "both": [0, 2, 3, 4, 33, 41, 60, 82, 85, 134, 140, 179, 181, 182, 185, 186, 206, 234, 236, 247, 259, 268, 269, 274], "linear": [0, 2, 3, 4, 5, 6, 9, 12, 13, 16, 17, 18, 19, 20, 22, 24, 26, 29, 31, 40, 41, 43, 48, 49, 50, 51, 55, 60, 61, 64, 67, 69, 71, 72, 79, 80, 82, 85, 89, 90, 93, 95, 96, 102, 105, 106, 107, 111, 112, 114, 115, 118, 119, 120, 121, 122, 125, 129, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 154, 159, 160, 163, 170, 171, 172, 173, 176, 177, 178, 179, 190, 191, 193, 194, 199, 200, 201, 203, 206, 208, 210, 211, 212, 213, 215, 217, 218, 219, 220, 229, 231, 232, 234, 239, 241, 242, 267, 269, 271, 273, 274, 280, 282, 284], "time": [0, 3, 4, 8, 9, 13, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 31, 33, 35, 36, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 96, 98, 99, 101, 103, 106, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 123, 126, 132, 133, 134, 135, 139, 140, 141, 142, 144, 145, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 175, 178, 179, 181, 182, 185, 186, 188, 189, 191, 194, 199, 201, 202, 203, 204, 206, 207, 208, 211, 212, 215, 216, 217, 219, 222, 223, 228, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 267, 268, 270, 271, 273, 274, 275, 279, 281, 282, 283, 284], "invari": [0, 2, 13, 17, 18, 22, 26, 48, 49, 61, 85, 232, 269], "nonlinear": [0, 2, 3, 8, 9, 11, 12, 15, 16, 19, 24, 29, 41, 47, 48, 49, 55, 60, 64, 67, 70, 79, 80, 82, 95, 112, 129, 134, 140, 154, 157, 179, 196, 205, 206, 216, 217, 231, 234, 267, 268, 269, 271, 280, 282], "thei": [0, 2, 8, 31, 48, 49, 60, 65, 66, 96, 226, 233, 247, 259, 267, 269, 273, 284], "usual": [0, 10, 16, 18, 38, 82, 134, 179, 233], "creat": [0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 26, 33, 40, 41, 48, 53, 60, 61, 64, 67, 68, 70, 76, 78, 82, 109, 113, 130, 133, 139, 142, 143, 145, 146, 155, 156, 157, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 181, 191, 192, 194, 196, 199, 201, 202, 203, 205, 209, 212, 213, 217, 218, 219, 220, 222, 230, 231, 234, 235, 236, 239, 267, 269, 271, 273, 277, 278, 281, 282, 284], "from": [0, 1, 2, 3, 4, 7, 8, 9, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 27, 33, 34, 36, 41, 47, 49, 54, 56, 61, 63, 64, 66, 67, 68, 69, 71, 76, 78, 79, 80, 82, 93, 94, 97, 110, 111, 113, 114, 115, 118, 119, 122, 125, 126, 142, 143, 144, 145, 146, 151, 159, 160, 163, 164, 166, 170, 171, 172, 173, 175, 176, 177, 181, 182, 184, 185, 186, 187, 196, 202, 212, 213, 215, 216, 217, 219, 220, 222, 226, 230, 231, 234, 235, 236, 237, 239, 241, 242, 243, 244, 246, 247, 255, 256, 258, 259, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "factori": [0, 2, 9, 13, 68, 113], "function": [0, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 35, 36, 37, 39, 40, 41, 44, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 79, 80, 81, 82, 85, 87, 88, 89, 90, 93, 94, 99, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 120, 121, 125, 126, 127, 129, 134, 135, 137, 138, 140, 142, 143, 145, 146, 147, 150, 154, 157, 159, 160, 163, 164, 165, 166, 167, 168, 169, 174, 175, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 194, 196, 199, 201, 202, 205, 206, 207, 209, 212, 213, 215, 217, 218, 219, 220, 221, 222, 228, 230, 231, 233, 235, 236, 237, 239, 240, 247, 259, 270, 271, 272, 274, 275, 276, 279, 280, 282, 283, 284], "tf": [0, 2, 6, 9, 16, 18, 22, 26, 38, 43, 46, 48, 49, 54, 61, 68, 72, 76, 78, 82, 93, 94, 98, 102, 110, 113, 125, 126, 129, 141, 142, 143, 146, 154, 157, 158, 180, 204, 210, 211, 212, 213, 218, 220, 232, 234, 235, 236, 239, 267, 269, 271, 272, 273, 274, 275, 280, 281, 283, 284], "ss": [0, 2, 6, 16, 18, 22, 33, 38, 41, 61, 68, 69, 97, 111, 113, 114, 143, 145, 146, 157, 213, 219, 220, 231, 234, 236, 239, 240, 241, 242, 270, 271, 274, 277, 278, 279, 280, 284], "so": [0, 2, 3, 4, 18, 22, 24, 33, 61, 69, 79, 114, 163, 165, 175, 208, 233, 234, 236, 246, 247, 254, 258, 259, 266, 267, 269, 270, 271, 272, 274, 281, 282, 283, 284], "user": [0, 1, 3, 10, 17, 18, 22, 26, 53, 61, 65, 66, 109, 163, 165, 175, 233, 239, 247, 259], "should": [0, 9, 11, 16, 18, 22, 24, 26, 33, 40, 41, 47, 48, 51, 57, 60, 61, 65, 66, 69, 81, 82, 90, 98, 107, 114, 121, 130, 156, 158, 159, 163, 165, 167, 174, 175, 181, 182, 184, 185, 186, 187, 191, 194, 199, 201, 204, 209, 222, 234, 239, 267, 269, 274], "normal": [0, 9, 13, 24, 138, 141, 199, 201, 211, 281], "need": [0, 3, 4, 8, 18, 22, 33, 60, 88, 130, 145, 156, 163, 165, 202, 209, 219, 233, 234, 236, 240, 247, 254, 259, 266, 267, 269, 270, 271], "instanti": [0, 273], "directli": [0, 17, 18, 135, 188, 202, 269], "follow": [0, 1, 2, 3, 4, 5, 8, 9, 15, 19, 24, 49, 63, 65, 66, 67, 70, 81, 82, 128, 153, 157, 160, 164, 166, 175, 196, 205, 209, 225, 227, 233, 234, 236, 243, 244, 246, 247, 255, 256, 258, 259, 267, 269, 270, 271, 272, 280, 281, 282], "figur": [0, 3, 4, 6, 7, 10, 24, 33, 48, 71, 115, 130, 156, 159, 181, 191, 192, 194, 196, 199, 201, 202, 209, 222, 232, 234, 235, 237, 239, 241, 242, 267, 268, 269, 272, 273, 274, 275, 276, 279, 280, 282, 283, 284], "illustr": [0, 3, 9, 196, 233, 234, 239, 267, 269, 273, 281, 284], "relationship": [0, 241, 242], "between": [0, 3, 4, 5, 6, 9, 13, 16, 18, 19, 22, 26, 33, 39, 55, 57, 60, 61, 65, 66, 67, 82, 112, 141, 159, 165, 166, 171, 173, 177, 211, 222, 233, 234, 235, 236, 269, 280, 281, 282, 283, 284], "some": [0, 2, 6, 10, 47, 97, 133, 146, 178, 197, 207, 220, 225, 226, 227, 231, 238, 243, 247, 254, 255, 259, 266, 267, 269, 270, 279, 280, 281, 282], "can": [0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 33, 39, 40, 41, 47, 49, 51, 54, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 79, 80, 81, 82, 89, 90, 94, 97, 107, 110, 111, 113, 114, 115, 120, 121, 126, 130, 139, 141, 142, 145, 146, 156, 157, 159, 160, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 185, 186, 189, 191, 192, 194, 200, 202, 203, 205, 207, 209, 211, 212, 215, 217, 218, 219, 220, 222, 228, 230, 231, 232, 233, 234, 236, 239, 240, 244, 247, 256, 259, 267, 269, 270, 271, 272, 273, 280, 281, 283, 284], "convert": [0, 2, 13, 18, 22, 24, 26, 34, 45, 55, 61, 67, 68, 80, 92, 98, 104, 105, 112, 113, 122, 124, 142, 143, 145, 146, 152, 161, 163, 175, 195, 204, 212, 213, 219, 220, 234, 267, 270, 280, 281], "object": [0, 1, 2, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 30, 33, 34, 36, 38, 43, 47, 48, 49, 53, 54, 55, 58, 60, 61, 63, 64, 65, 66, 67, 69, 71, 79, 80, 81, 82, 87, 88, 89, 90, 94, 102, 105, 109, 110, 112, 114, 115, 119, 120, 121, 126, 130, 138, 139, 141, 142, 143, 145, 146, 147, 152, 156, 159, 160, 161, 163, 164, 165, 166, 175, 181, 184, 185, 186, 191, 194, 195, 199, 200, 201, 203, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 230, 232, 240, 247, 259, 267, 269, 270, 273, 274], "one": [0, 2, 10, 19, 29, 30, 33, 48, 55, 57, 61, 64, 71, 80, 82, 93, 95, 97, 112, 115, 118, 119, 125, 129, 130, 134, 139, 140, 142, 144, 154, 156, 157, 159, 165, 179, 181, 191, 194, 199, 201, 202, 203, 206, 209, 212, 222, 230, 235, 236, 247, 259, 267, 269, 274, 280, 281], "anoth": [0, 134, 179, 239, 247, 259, 269, 271, 272], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 154, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 254, 255, 256, 257, 258, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284], "describ": [0, 2, 8, 9, 10, 11, 12, 40, 47, 48, 49, 57, 60, 70, 82, 163, 165, 167, 171, 173, 177, 181, 184, 185, 186, 187, 196, 205, 231, 233, 267, 269], "more": [0, 1, 2, 3, 4, 6, 10, 13, 15, 16, 17, 18, 19, 22, 24, 26, 29, 31, 33, 41, 47, 48, 55, 57, 60, 61, 63, 65, 66, 67, 71, 77, 79, 80, 81, 82, 85, 88, 93, 95, 96, 98, 112, 115, 117, 125, 129, 130, 134, 135, 140, 142, 154, 156, 159, 167, 175, 179, 181, 188, 191, 194, 199, 201, 202, 204, 206, 209, 212, 216, 217, 222, 230, 233, 234, 236, 247, 259, 267, 269, 271, 274, 275, 280, 282, 283], "detail": [0, 2, 12, 13, 22, 26, 33, 48, 63, 71, 77, 79, 80, 81, 85, 98, 115, 117, 130, 143, 145, 146, 151, 156, 159, 167, 181, 191, 194, 199, 201, 204, 209, 213, 216, 217, 219, 220, 222, 231, 254, 266], "differenti": [0, 1, 8, 16, 19, 26, 56, 60, 61, 63, 64, 65, 66, 145, 219, 231, 234, 236], "flat": [0, 1, 8, 58, 60, 61, 63, 64, 65, 66, 231, 236, 275, 281, 283], "modul": [0, 1, 2, 3, 4, 6, 8, 33, 37, 163, 167, 175, 207, 231, 233, 235, 236, 247, 253, 254, 259, 265, 266, 268, 269, 273, 283], "optim": [0, 1, 8, 9, 49, 51, 56, 65, 66, 67, 76, 78, 90, 107, 121, 231, 235, 236, 239, 240, 241, 242, 273, 277, 278, 281, 282], "base": [0, 1, 2, 3, 5, 8, 11, 13, 15, 16, 17, 18, 19, 22, 26, 31, 37, 48, 54, 57, 58, 59, 60, 61, 62, 63, 64, 70, 77, 82, 96, 100, 110, 117, 133, 140, 157, 163, 164, 165, 166, 178, 181, 196, 202, 205, 206, 228, 231, 232, 234, 236, 241, 242, 243, 247, 255, 259, 269, 270, 274, 275, 281, 282, 284], "python": [1, 2, 3, 6, 15, 18, 22, 24, 25, 33, 37, 54, 61, 82, 94, 110, 126, 163, 167, 175, 222, 233, 238, 239, 244, 247, 256, 259, 267, 269, 270, 271, 272, 274, 276, 280, 282, 283], "librari": [1, 18, 22, 61, 232, 233, 238, 270, 271, 280], "provid": [1, 2, 6, 10, 15, 19, 33, 37, 39, 41, 47, 53, 56, 61, 64, 69, 71, 72, 79, 80, 81, 82, 97, 109, 114, 115, 138, 141, 157, 159, 160, 164, 166, 199, 201, 209, 210, 211, 216, 217, 222, 228, 233, 234, 238, 240, 243, 246, 255, 258, 267, 269, 280, 281, 283], "common": [1, 2, 3, 4, 5, 47, 66, 69, 114, 233, 267, 269], "analyz": [1, 20, 49, 269], "design": [1, 8, 9, 50, 51, 89, 90, 106, 107, 120, 121, 202, 231, 233, 267, 269, 274, 275, 277, 278, 280], "feedback": [1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 16, 18, 19, 22, 26, 29, 37, 40, 41, 48, 49, 51, 60, 61, 74, 76, 78, 82, 85, 90, 95, 100, 107, 121, 129, 134, 135, 140, 141, 154, 179, 188, 202, 206, 211, 225, 231, 233, 239, 240, 241, 242, 267, 269, 270, 272, 274, 275, 277, 278, 280], "document": [1, 2, 8, 10, 16, 18, 19, 22, 60, 61, 97, 231, 233, 243, 246, 247, 254, 255, 258, 259, 266, 269], "two": [1, 9, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 33, 48, 55, 57, 60, 61, 69, 71, 72, 111, 112, 114, 115, 141, 159, 160, 182, 185, 186, 187, 209, 210, 211, 232, 233, 234, 236, 247, 259, 269, 271, 273, 281], "form": [1, 2, 3, 9, 13, 15, 16, 17, 18, 19, 22, 26, 29, 34, 40, 41, 48, 55, 59, 60, 61, 62, 64, 68, 77, 82, 95, 105, 112, 113, 117, 129, 134, 139, 140, 142, 143, 145, 146, 152, 154, 157, 161, 163, 165, 169, 170, 172, 174, 175, 176, 179, 181, 182, 184, 185, 186, 187, 191, 194, 195, 203, 206, 212, 213, 218, 219, 220, 230, 232, 234, 243, 255, 267, 269, 270, 271, 280, 281, 282, 283, 284], "docstr": [1, 9, 267], "code": [1, 8, 18, 22, 61, 231, 234, 236, 243, 244, 254, 255, 256, 266, 267, 269, 271, 284], "guid": 1, "homepag": 1, "exampl": [1, 2, 3, 5, 6, 13, 16, 18, 22, 26, 29, 31, 32, 33, 34, 37, 38, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 61, 67, 68, 69, 70, 72, 75, 76, 77, 78, 79, 80, 82, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 154, 157, 158, 159, 160, 161, 162, 178, 179, 180, 188, 189, 195, 196, 197, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 220, 224, 225, 226, 227, 230, 231, 232, 233, 235, 236, 237, 240, 241, 242, 247, 248, 254, 259, 260, 266, 269, 270, 271, 272, 280, 282, 283], "assum": [1, 2, 5, 9, 13, 16, 19, 40, 54, 55, 60, 67, 82, 94, 110, 112, 126, 139, 163, 165, 175, 203, 236, 267, 270, 271, 280, 281], "import": [1, 2, 3, 4, 6, 7, 9, 41, 97, 118, 119, 122, 144, 216, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 247, 259, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "command": [1, 2, 3, 4, 9, 33, 231, 233, 234, 247, 259, 267, 269, 270, 271, 272, 279, 281, 282], "numpi": [1, 3, 4, 6, 7, 9, 13, 26, 41, 142, 212, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284], "np": [1, 3, 4, 6, 7, 9, 26, 41, 42, 45, 46, 47, 48, 49, 54, 67, 77, 92, 94, 101, 104, 110, 117, 122, 124, 126, 129, 132, 148, 154, 157, 158, 162, 205, 208, 210, 224, 232, 234, 235, 236, 237, 239, 240, 241, 242, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284], "ct": [1, 2, 3, 4, 5, 6, 7, 9, 16, 18, 22, 26, 29, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 53, 54, 55, 61, 67, 68, 69, 70, 72, 75, 76, 77, 78, 79, 80, 82, 87, 92, 93, 94, 95, 96, 98, 100, 101, 102, 104, 109, 110, 111, 112, 113, 114, 116, 117, 124, 125, 126, 128, 129, 132, 133, 134, 135, 140, 141, 142, 143, 145, 146, 148, 152, 153, 154, 157, 158, 159, 160, 161, 162, 178, 179, 180, 188, 189, 195, 196, 197, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 267, 268, 269, 270, 272, 273, 280, 281, 282, 283, 284], "main": [1, 2, 13, 22, 67, 199, 200, 201, 271], "packag": [1, 6, 9, 67, 231, 233, 254, 266, 270, 271, 272, 277, 278, 282, 283], "includ": [1, 2, 3, 4, 9, 10, 18, 22, 33, 41, 51, 61, 66, 70, 90, 107, 121, 130, 156, 159, 175, 181, 191, 194, 196, 199, 200, 201, 205, 209, 222, 233, 234, 236, 243, 244, 246, 247, 255, 256, 258, 259, 267, 269, 271, 273, 280, 281, 282, 283], "most": [1, 2, 18, 19, 22, 61, 234, 245, 247, 257, 259, 267, 268, 269, 275], "sever": [1, 97, 234, 267, 269], "addit": [1, 2, 6, 9, 10, 16, 19, 33, 37, 40, 41, 48, 51, 60, 65, 66, 79, 80, 81, 82, 90, 100, 107, 121, 130, 143, 156, 159, 163, 164, 165, 166, 167, 175, 209, 213, 217, 222, 231, 233, 244, 247, 256, 259, 267, 269, 271, 272], "special": [1, 19, 67, 82, 122, 145, 219, 243, 247, 255, 259], "flatsi": [1, 9, 235, 236, 239, 267, 281, 283], "matlab": [1, 8, 24, 63, 67, 79, 80, 81, 163, 175, 211, 217, 227, 231, 270, 271, 272, 274, 276, 281], "compat": [1, 2, 16, 19, 22, 24, 26, 47, 60, 63, 67, 79, 80, 81, 119, 140, 175, 182, 200, 202, 206, 209, 217, 225, 227, 231, 233, 247, 254, 259, 266, 270, 271, 272, 279], "phaseplot": [1, 268, 269], "2d": [1, 2, 10, 16, 18, 19, 21, 22, 24, 26, 28, 33, 35, 37, 39, 42, 44, 48, 50, 51, 52, 57, 60, 63, 66, 67, 71, 75, 79, 80, 81, 89, 90, 91, 94, 99, 100, 101, 103, 106, 107, 108, 115, 116, 120, 121, 123, 126, 130, 132, 135, 145, 156, 159, 162, 163, 165, 169, 170, 172, 174, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 199, 201, 209, 216, 219, 222, 228, 267, 269], "phase": [1, 2, 5, 6, 8, 13, 17, 18, 22, 26, 33, 47, 61, 69, 93, 97, 98, 114, 125, 141, 148, 155, 181, 182, 184, 185, 186, 187, 204, 209, 211, 215, 224, 225, 227, 231, 272, 279, 281], "plane": [1, 12, 13, 22, 26, 43, 75, 102, 116, 128, 141, 153, 181, 184, 185, 186, 187, 211, 231, 268, 281, 282, 283], "diagram": [1, 21, 97, 138, 141, 181, 191, 194, 199, 200, 201, 202, 211, 231, 234, 269, 271, 280, 282], "note": [1, 2, 3, 8, 13, 17, 18, 19, 22, 24, 26, 32, 33, 37, 40, 43, 55, 56, 60, 61, 65, 66, 67, 69, 77, 79, 80, 81, 82, 85, 89, 90, 94, 98, 100, 102, 105, 111, 112, 114, 117, 120, 121, 126, 129, 133, 134, 135, 137, 138, 139, 140, 142, 145, 146, 154, 158, 159, 160, 163, 165, 167, 175, 178, 179, 188, 189, 191, 194, 199, 200, 201, 202, 203, 204, 205, 206, 209, 212, 215, 217, 219, 220, 222, 234, 236, 248, 260, 267, 269, 271, 280, 281, 284], "For": [1, 2, 5, 9, 13, 17, 18, 22, 24, 26, 39, 41, 47, 54, 56, 57, 60, 61, 63, 67, 79, 80, 85, 94, 110, 126, 141, 143, 145, 146, 159, 160, 163, 175, 181, 184, 185, 186, 187, 196, 200, 209, 211, 213, 215, 217, 219, 220, 232, 233, 234, 236, 240, 247, 254, 259, 266, 267, 269, 271, 280, 281, 282], "multipl": [1, 2, 6, 13, 17, 18, 22, 24, 26, 27, 36, 37, 61, 69, 79, 80, 100, 114, 118, 119, 144, 160, 189, 207, 209, 217, 233, 234, 244, 256, 269, 271, 280], "ax": [1, 2, 3, 4, 10, 13, 17, 18, 22, 23, 26, 27, 33, 48, 50, 61, 69, 71, 89, 106, 111, 114, 115, 120, 130, 138, 141, 155, 156, 159, 181, 184, 185, 186, 187, 191, 192, 194, 199, 201, 209, 211, 222, 232, 239, 268, 269, 270, 272, 280, 281], "same": [1, 2, 9, 15, 18, 19, 22, 24, 26, 35, 41, 44, 52, 57, 61, 63, 64, 68, 82, 85, 88, 91, 94, 98, 99, 103, 108, 113, 123, 126, 127, 129, 134, 135, 138, 140, 141, 142, 143, 145, 146, 150, 154, 157, 159, 160, 163, 165, 167, 171, 173, 175, 177, 179, 182, 188, 189, 199, 201, 204, 206, 207, 211, 212, 213, 215, 219, 220, 232, 234, 236, 239, 247, 259, 267, 269, 275, 277, 280, 283], "individu": [1, 2, 10, 13, 15, 16, 17, 18, 19, 22, 24, 25, 26, 29, 36, 41, 55, 60, 61, 64, 68, 82, 95, 112, 113, 118, 119, 129, 134, 139, 140, 142, 143, 144, 145, 146, 152, 154, 157, 171, 173, 177, 179, 203, 206, 212, 213, 218, 219, 220, 230, 234, 269], "retriev": [1, 49, 269], "label": [1, 2, 3, 4, 13, 24, 33, 36, 40, 48, 81, 130, 155, 156, 159, 165, 191, 194, 199, 201, 209, 222, 239, 241, 242, 254, 266, 269, 270, 273, 274, 275, 280, 281, 282], "get_label": [1, 272], "method": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 31, 33, 35, 37, 41, 44, 47, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 67, 69, 70, 77, 81, 82, 85, 89, 90, 91, 96, 98, 99, 103, 106, 107, 108, 114, 117, 120, 121, 123, 128, 142, 146, 153, 158, 163, 164, 165, 166, 175, 189, 196, 204, 205, 212, 215, 220, 234, 235, 237, 247, 248, 259, 260, 267, 269, 276, 283], "matplotliib": 1, "current": [1, 3, 4, 10, 16, 18, 19, 22, 24, 33, 35, 41, 44, 48, 50, 51, 52, 56, 60, 61, 65, 66, 70, 89, 90, 91, 99, 103, 106, 107, 108, 120, 121, 123, 130, 142, 146, 155, 156, 158, 159, 163, 167, 175, 181, 184, 185, 186, 187, 191, 194, 199, 201, 209, 212, 220, 222, 239, 244, 247, 256, 259, 267, 269, 270, 273, 282], "defin": [1, 3, 4, 9, 11, 13, 17, 18, 22, 26, 31, 40, 41, 56, 57, 61, 63, 65, 66, 67, 81, 89, 90, 96, 120, 121, 122, 134, 140, 155, 159, 160, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 183, 206, 208, 216, 231, 234, 235, 236, 239, 240, 241, 242, 247, 254, 259, 266, 267, 270, 271, 273, 279, 281, 282, 283, 284], "bode": [1, 2, 13, 33, 69, 93, 111, 114, 125, 141, 211, 225, 227, 231, 269, 271, 272, 279, 281], "magnitud": [1, 2, 13, 17, 18, 22, 26, 33, 45, 47, 61, 69, 92, 93, 97, 98, 104, 114, 124, 125, 139, 141, 155, 159, 196, 203, 204, 209, 211, 215, 269, 272, 274, 281, 284], "gang": [1, 71, 72, 115, 272, 281], "4": [1, 2, 3, 4, 6, 7, 9, 26, 29, 31, 33, 43, 48, 49, 51, 53, 55, 67, 69, 71, 72, 75, 78, 79, 80, 81, 89, 90, 95, 96, 97, 102, 105, 107, 109, 111, 112, 114, 115, 116, 119, 120, 121, 122, 128, 134, 140, 142, 143, 144, 145, 146, 153, 159, 179, 180, 206, 210, 212, 213, 216, 217, 219, 220, 226, 232, 234, 235, 236, 237, 239, 240, 241, 242, 247, 259, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 282, 283], "gangof4": [1, 271, 272, 281], "": [1, 2, 3, 4, 5, 6, 10, 15, 16, 18, 19, 22, 23, 24, 26, 27, 29, 30, 31, 33, 35, 36, 39, 43, 44, 47, 48, 51, 54, 55, 57, 60, 61, 63, 64, 67, 68, 69, 71, 72, 79, 80, 81, 82, 90, 95, 96, 97, 98, 99, 102, 103, 107, 110, 111, 112, 113, 114, 115, 121, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 145, 149, 151, 154, 156, 157, 158, 159, 160, 164, 166, 178, 179, 181, 191, 193, 194, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 215, 216, 217, 219, 222, 229, 230, 231, 233, 235, 236, 239, 247, 254, 259, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284], "c": [1, 2, 3, 4, 5, 7, 9, 16, 18, 22, 31, 34, 38, 40, 41, 42, 50, 52, 54, 55, 61, 71, 72, 75, 82, 89, 91, 94, 96, 101, 105, 106, 108, 110, 112, 115, 116, 120, 123, 126, 132, 142, 143, 161, 162, 181, 196, 212, 213, 214, 218, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 255, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 284], "p": [1, 3, 9, 13, 16, 17, 18, 22, 26, 27, 30, 38, 40, 50, 61, 69, 71, 72, 76, 78, 82, 89, 105, 106, 111, 114, 115, 120, 135, 151, 158, 183, 188, 189, 202, 218, 231, 232, 234, 236, 237, 239, 241, 242, 267, 269, 272, 273, 274, 281], "t": [1, 2, 3, 4, 5, 6, 9, 16, 18, 19, 22, 23, 24, 26, 30, 33, 34, 35, 37, 39, 40, 42, 44, 47, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 76, 78, 79, 80, 81, 82, 85, 88, 89, 91, 94, 98, 99, 100, 101, 103, 106, 108, 110, 112, 115, 118, 119, 120, 122, 123, 126, 132, 133, 144, 151, 152, 157, 161, 162, 169, 174, 175, 178, 181, 182, 184, 185, 186, 187, 195, 204, 208, 216, 217, 218, 222, 228, 232, 234, 235, 236, 237, 239, 240, 241, 242, 247, 259, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284], "control": [2, 6, 7, 8, 9, 232, 233, 234, 235, 236, 237, 238, 268, 276, 277, 278, 279, 280, 284], "set": [2, 3, 4, 7, 9, 10, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 33, 35, 36, 39, 40, 41, 44, 48, 49, 50, 51, 52, 56, 57, 58, 60, 61, 63, 67, 69, 71, 72, 79, 80, 81, 82, 88, 89, 90, 91, 98, 99, 103, 106, 107, 108, 111, 114, 115, 118, 120, 121, 123, 130, 131, 134, 138, 139, 140, 142, 144, 145, 146, 156, 158, 159, 160, 163, 164, 165, 166, 167, 171, 173, 175, 177, 179, 181, 184, 185, 186, 187, 191, 192, 194, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 233, 234, 235, 237, 241, 242, 247, 254, 259, 266, 267, 269, 272, 281, 282, 283], "standard": [2, 3, 4, 6, 8, 13, 54, 94, 110, 126, 163, 175, 222, 239, 254, 266, 267, 269, 279, 283], "wai": [2, 3, 24, 68, 71, 77, 94, 113, 115, 117, 126, 142, 145, 191, 194, 212, 219, 233, 234, 243, 244, 247, 255, 256, 259, 269, 270, 271, 282, 284], "differ": [2, 3, 4, 15, 16, 19, 26, 56, 58, 60, 67, 68, 82, 113, 141, 159, 160, 165, 181, 185, 186, 192, 202, 209, 211, 231, 232, 234, 236, 241, 242, 267, 268, 269, 270, 271, 275, 281, 282, 284], "type": [2, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 36, 37, 40, 41, 42, 45, 46, 47, 48, 52, 55, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 88, 91, 92, 94, 95, 96, 98, 100, 101, 104, 105, 108, 111, 112, 113, 114, 115, 116, 117, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 237, 247, 254, 259, 266, 269, 271], "inform": [2, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 31, 33, 37, 40, 41, 47, 48, 49, 55, 60, 61, 64, 65, 66, 67, 71, 79, 80, 82, 88, 95, 96, 98, 100, 112, 115, 129, 130, 134, 140, 142, 154, 156, 157, 159, 160, 163, 165, 167, 175, 179, 181, 191, 194, 199, 201, 202, 204, 206, 209, 212, 217, 222, 230, 233, 234, 236, 247, 259, 267, 269, 271, 283], "throughout": [2, 234], "thi": [2, 3, 4, 6, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 33, 36, 40, 41, 47, 48, 49, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 81, 82, 85, 88, 89, 90, 94, 105, 107, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 126, 129, 134, 135, 137, 138, 139, 140, 142, 144, 154, 157, 159, 160, 163, 164, 165, 166, 167, 168, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 194, 196, 202, 203, 205, 206, 212, 215, 217, 218, 222, 228, 230, 232, 233, 234, 235, 236, 239, 240, 243, 244, 246, 247, 254, 255, 256, 258, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 280, 281, 282, 283, 284], "manual": [2, 13, 202, 233, 234, 236], "we": [2, 3, 4, 6, 9, 57, 65, 66, 77, 117, 163, 165, 232, 234, 235, 236, 239, 240, 244, 247, 256, 259, 267, 270, 271, 272, 273, 280, 281, 282, 283, 284], "ha": [2, 3, 4, 6, 8, 9, 10, 13, 15, 16, 17, 18, 19, 22, 24, 26, 28, 31, 33, 40, 41, 46, 48, 55, 60, 61, 75, 79, 80, 81, 96, 112, 116, 118, 119, 127, 130, 134, 135, 140, 144, 150, 156, 159, 163, 164, 165, 166, 175, 179, 181, 182, 188, 189, 191, 194, 199, 201, 206, 209, 217, 222, 228, 232, 234, 244, 247, 254, 256, 259, 266, 267, 274, 280, 281], "been": [2, 9, 16, 17, 18, 33, 38, 130, 156, 159, 182, 191, 194, 199, 201, 209, 222, 247, 259], "toolbox": [2, 6, 8, 231, 238, 267, 269], "oper": [2, 3, 4, 15, 18, 19, 22, 26, 61, 77, 82, 117, 145, 157, 219, 231, 233, 234, 247, 259, 267, 269, 280], "ani": [2, 5, 6, 9, 13, 16, 18, 22, 26, 31, 56, 65, 68, 82, 96, 113, 139, 159, 160, 191, 194, 199, 201, 203, 228, 232, 234, 243, 244, 246, 247, 254, 255, 256, 258, 259, 266, 269], "statespac": [2, 7, 9, 16, 17, 18, 19, 21, 29, 30, 31, 34, 40, 43, 51, 54, 60, 61, 64, 69, 75, 76, 77, 78, 80, 82, 88, 89, 90, 93, 95, 96, 98, 102, 105, 107, 110, 111, 114, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 134, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 158, 161, 179, 190, 193, 195, 202, 203, 204, 206, 208, 212, 213, 214, 216, 218, 219, 220, 221, 229, 231, 234, 236, 237, 276, 281], "class": [2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 41, 47, 55, 57, 58, 59, 60, 61, 62, 63, 69, 70, 75, 98, 112, 114, 116, 129, 134, 140, 154, 163, 164, 165, 166, 179, 196, 202, 204, 205, 206, 231, 233, 247, 259], "realiz": [2, 18, 22, 31, 61, 96, 231, 247, 259, 276, 277], "frac": [2, 5, 59, 62, 230, 236, 271, 284], "dx": [2, 9, 16, 18, 19, 22, 60, 61, 89, 120, 142, 182, 212, 235, 239, 270, 273, 281, 284], "dt": [2, 7, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 33, 40, 43, 51, 53, 54, 60, 61, 64, 67, 68, 82, 83, 84, 89, 90, 94, 102, 107, 109, 110, 111, 113, 120, 121, 126, 134, 139, 140, 142, 145, 157, 159, 160, 175, 179, 182, 192, 202, 203, 206, 212, 217, 219, 223, 228, 230, 234, 235, 236, 237, 239, 241, 242, 267, 271, 280, 281, 284], "A": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 22, 24, 26, 28, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 58, 60, 61, 64, 65, 66, 67, 68, 70, 75, 77, 81, 82, 89, 90, 91, 92, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 116, 117, 120, 121, 123, 124, 126, 128, 130, 132, 135, 142, 143, 145, 146, 152, 153, 156, 162, 163, 165, 168, 170, 171, 172, 173, 175, 176, 177, 188, 189, 196, 205, 208, 212, 213, 214, 219, 220, 222, 228, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 244, 246, 255, 256, 258, 267, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284], "x": [2, 3, 4, 5, 6, 9, 13, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 29, 34, 35, 39, 40, 41, 44, 47, 50, 51, 52, 54, 55, 60, 61, 63, 64, 65, 66, 70, 78, 82, 85, 90, 91, 94, 95, 99, 103, 106, 107, 108, 110, 111, 112, 118, 119, 121, 123, 126, 129, 134, 138, 139, 140, 141, 142, 144, 152, 154, 157, 161, 163, 165, 167, 174, 175, 176, 179, 181, 182, 183, 184, 185, 186, 187, 191, 194, 195, 196, 199, 201, 203, 205, 206, 208, 211, 212, 222, 230, 232, 234, 235, 236, 239, 241, 242, 247, 259, 267, 268, 269, 270, 271, 273, 280, 281, 282, 283, 284], "b": [2, 3, 4, 5, 7, 9, 18, 22, 28, 34, 35, 40, 41, 42, 44, 50, 51, 54, 57, 61, 70, 89, 90, 94, 99, 101, 103, 105, 106, 107, 110, 120, 121, 126, 135, 142, 143, 170, 172, 176, 188, 189, 195, 196, 212, 213, 214, 232, 234, 235, 236, 237, 239, 240, 241, 242, 268, 269, 270, 271, 272, 273, 276, 277, 279, 280, 281, 282], "u": [2, 3, 4, 5, 6, 9, 13, 15, 16, 17, 18, 19, 22, 24, 26, 29, 38, 40, 41, 50, 51, 54, 55, 60, 61, 63, 64, 65, 66, 67, 72, 76, 78, 81, 82, 85, 89, 90, 94, 95, 105, 106, 107, 110, 112, 120, 121, 122, 126, 129, 134, 139, 140, 142, 151, 154, 157, 163, 165, 167, 170, 174, 175, 179, 202, 203, 206, 212, 218, 230, 232, 234, 235, 236, 237, 239, 240, 241, 242, 254, 266, 267, 268, 269, 270, 271, 273, 280, 281, 282, 283], "y": [2, 3, 4, 5, 6, 9, 13, 15, 16, 17, 18, 19, 22, 24, 26, 29, 38, 39, 40, 50, 54, 55, 60, 61, 64, 72, 76, 78, 82, 85, 89, 94, 95, 105, 106, 110, 112, 120, 126, 129, 134, 135, 138, 139, 140, 141, 142, 151, 154, 157, 165, 172, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191, 194, 199, 201, 202, 203, 206, 211, 212, 218, 222, 230, 232, 234, 235, 236, 237, 239, 240, 247, 259, 267, 270, 271, 273, 276, 280, 281, 282, 283, 284], "d": [2, 3, 7, 13, 18, 19, 20, 22, 26, 31, 40, 41, 50, 54, 61, 64, 72, 89, 94, 96, 105, 106, 110, 120, 126, 142, 143, 157, 164, 166, 202, 209, 212, 213, 214, 232, 234, 236, 237, 241, 242, 247, 259, 270, 271, 273, 276, 277, 280, 281], "where": [2, 3, 4, 5, 8, 9, 12, 13, 15, 16, 17, 18, 19, 22, 23, 26, 27, 29, 30, 33, 35, 40, 41, 44, 49, 51, 52, 54, 55, 60, 61, 64, 69, 75, 81, 82, 89, 90, 91, 93, 94, 95, 99, 103, 107, 108, 110, 111, 112, 114, 116, 120, 121, 123, 125, 126, 129, 134, 138, 139, 140, 142, 151, 154, 157, 159, 160, 165, 175, 179, 180, 183, 191, 194, 199, 200, 201, 203, 206, 208, 212, 215, 217, 218, 222, 228, 230, 234, 236, 267, 269, 271, 274, 275, 281, 282, 283, 284], "To": [2, 3, 4, 5, 9, 13, 18, 22, 23, 26, 27, 33, 61, 75, 111, 116, 141, 145, 160, 163, 165, 191, 194, 199, 201, 202, 211, 216, 219, 222, 233, 234, 236, 244, 247, 256, 259, 267, 269, 270, 271, 281, 282], "sy": [2, 3, 4, 6, 7, 9, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 37, 38, 40, 41, 43, 46, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93, 95, 96, 97, 98, 100, 102, 105, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 153, 154, 157, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 193, 203, 204, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 229, 230, 232, 234, 236, 237, 239, 240, 267, 269, 273, 279, 284], "manipul": [2, 24, 234, 269], "arithmet": 2, "well": [2, 9, 10, 21, 65, 66, 82, 163, 165, 233, 234, 239, 247, 254, 259, 266, 267, 269, 273, 280, 284], "parallel": [2, 16, 18, 19, 22, 26, 29, 37, 55, 60, 61, 73, 95, 100, 112, 129, 140, 154, 206, 231, 234, 271, 272], "full": [2, 3, 4, 9, 40, 41, 60, 69, 71, 72, 114, 115, 210, 234, 235, 239, 240, 267, 271, 276, 280, 281, 282, 283], "found": [2, 6, 13, 15, 16, 17, 18, 19, 22, 26, 31, 56, 60, 61, 75, 82, 96, 116, 164, 166, 215, 233, 234, 244, 256, 283], "refer": [2, 3, 4, 8, 31, 33, 54, 85, 94, 96, 110, 126, 135, 159, 181, 186, 188, 189, 202, 209, 231, 233, 234, 240, 248, 260, 267, 274, 281, 282], "transferfunct": [2, 3, 4, 17, 21, 43, 55, 69, 80, 89, 93, 98, 102, 105, 111, 112, 114, 118, 119, 120, 122, 125, 127, 129, 134, 136, 137, 140, 142, 143, 144, 145, 146, 147, 149, 150, 154, 158, 179, 190, 193, 202, 204, 206, 212, 213, 214, 216, 219, 220, 221, 229, 230, 231, 281], "g": [2, 3, 4, 9, 13, 16, 17, 18, 19, 22, 26, 29, 30, 31, 32, 33, 34, 35, 37, 40, 42, 43, 44, 46, 50, 53, 55, 60, 61, 67, 68, 69, 75, 76, 77, 78, 79, 80, 81, 89, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 125, 126, 128, 129, 132, 134, 138, 140, 141, 142, 143, 144, 145, 151, 152, 153, 154, 159, 160, 161, 162, 163, 165, 167, 179, 180, 195, 199, 200, 201, 202, 204, 206, 208, 210, 211, 212, 213, 215, 217, 219, 230, 233, 234, 239, 240, 241, 242, 244, 247, 256, 259, 268, 269, 270, 271, 272, 273, 274, 275, 280], "text": [2, 3, 4, 9, 10, 155, 234, 236, 254, 266, 267, 268, 270, 271, 272, 275, 281], "num": [2, 3, 26, 105, 133, 138, 145, 146, 147, 178, 219, 220, 221, 276], "den": [2, 26, 105, 133, 138, 145, 146, 147, 178, 210, 219, 220, 221, 274, 276], "a_0": 2, "m": [2, 3, 4, 6, 7, 9, 13, 17, 18, 22, 26, 27, 32, 34, 40, 41, 54, 61, 69, 94, 110, 111, 114, 126, 133, 152, 161, 165, 178, 182, 195, 208, 234, 235, 236, 237, 239, 241, 242, 247, 259, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 281, 282, 283, 284], "a_1": 2, "1": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 59, 60, 61, 62, 64, 67, 68, 69, 70, 72, 76, 77, 78, 82, 85, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 117, 120, 124, 125, 126, 129, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 145, 146, 148, 151, 152, 154, 157, 158, 159, 160, 161, 162, 169, 175, 178, 179, 180, 181, 182, 186, 188, 189, 191, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 226, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 247, 254, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284], "cdot": [2, 9, 105, 230, 232, 267, 280], "a_m": 2, "b_0": 2, "n": [2, 3, 4, 5, 6, 9, 12, 32, 41, 49, 50, 51, 54, 58, 59, 62, 89, 90, 94, 106, 107, 110, 120, 121, 126, 133, 175, 178, 181, 182, 184, 185, 186, 187, 234, 239, 267, 268, 273, 274, 276, 280, 281, 283, 284], "b_1": 2, "b_n": 2, "gener": [2, 3, 4, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 29, 33, 35, 40, 41, 44, 48, 49, 51, 52, 55, 60, 61, 65, 66, 67, 68, 69, 72, 82, 88, 90, 91, 94, 95, 98, 99, 103, 107, 108, 112, 113, 114, 121, 122, 123, 126, 129, 130, 134, 137, 139, 140, 141, 142, 143, 145, 146, 154, 156, 157, 159, 160, 163, 164, 165, 166, 167, 179, 181, 182, 183, 184, 185, 186, 187, 191, 192, 194, 199, 201, 203, 204, 206, 209, 211, 212, 213, 218, 219, 220, 222, 228, 230, 233, 234, 235, 236, 239, 244, 256, 267, 268, 269, 271, 282], "greater": [2, 280], "than": [2, 3, 4, 10, 13, 16, 17, 18, 19, 22, 26, 27, 31, 33, 57, 60, 61, 67, 81, 82, 93, 94, 96, 122, 125, 126, 130, 135, 139, 141, 156, 159, 163, 165, 175, 188, 189, 191, 194, 199, 201, 202, 203, 209, 211, 222, 239, 247, 259, 269, 270, 273, 274, 280, 281, 284], "equal": [2, 9, 14, 25, 60, 133, 140, 159, 164, 166, 171, 173, 177, 178, 182, 191, 192, 194, 199, 201, 206, 210, 239, 268, 269, 273, 274, 280, 281], "proper": [2, 139, 159, 160, 202, 203, 234, 269], "frequencyresponsedata": [2, 12, 17, 18, 22, 26, 33, 61, 68, 69, 72, 113, 114, 130, 156, 209, 210, 215, 231], "member": [2, 9, 13, 22], "omega": [2, 3, 4, 5, 6, 12, 13, 17, 18, 22, 23, 26, 27, 33, 47, 48, 49, 61, 68, 69, 71, 72, 93, 97, 111, 113, 114, 115, 125, 130, 131, 137, 141, 156, 159, 160, 180, 191, 194, 199, 201, 209, 210, 211, 215, 269, 275], "fresp": [2, 13, 18, 22, 23, 26, 27, 61, 111], "1d": [2, 12, 13, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 35, 37, 39, 44, 47, 49, 50, 51, 54, 57, 60, 61, 63, 65, 66, 67, 69, 79, 80, 81, 89, 90, 94, 99, 100, 103, 106, 107, 110, 111, 114, 120, 121, 126, 130, 135, 145, 156, 159, 163, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 180, 183, 188, 189, 217, 219, 228], "arrai": [2, 3, 4, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 69, 71, 72, 75, 77, 79, 80, 81, 88, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 142, 144, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 199, 200, 201, 206, 208, 209, 212, 215, 216, 217, 221, 222, 224, 228, 229, 230, 232, 234, 235, 236, 237, 239, 240, 267, 268, 269, 270, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284], "point": [2, 3, 4, 5, 6, 9, 12, 13, 20, 22, 26, 41, 47, 48, 49, 56, 57, 58, 59, 62, 63, 65, 66, 67, 88, 94, 126, 159, 160, 163, 165, 167, 175, 181, 182, 183, 184, 185, 186, 187, 199, 201, 202, 217, 222, 228, 234, 235, 236, 239, 247, 259, 267, 269, 270, 271, 273, 281, 282, 283], "3d": [2, 13, 17, 18, 22, 24, 26, 27, 54, 61, 63, 69, 94, 110, 114, 126, 217], "first": [2, 3, 9, 12, 13, 14, 17, 18, 22, 23, 25, 26, 27, 32, 35, 37, 40, 41, 44, 47, 48, 49, 50, 51, 52, 60, 61, 65, 66, 76, 78, 81, 89, 90, 91, 94, 99, 100, 103, 105, 106, 107, 108, 111, 120, 121, 123, 126, 141, 142, 146, 158, 159, 163, 164, 165, 166, 175, 185, 211, 212, 220, 222, 233, 234, 235, 239, 245, 247, 257, 259, 267, 270, 271, 273, 275, 280, 281, 284], "dimens": [2, 13, 18, 22, 23, 24, 26, 27, 35, 39, 41, 44, 51, 52, 60, 61, 65, 66, 89, 90, 91, 99, 103, 107, 108, 111, 120, 121, 123, 145, 146, 174, 182, 218, 219, 220, 228, 234, 277, 278], "correspond": [2, 6, 9, 13, 15, 18, 21, 22, 24, 26, 37, 40, 41, 45, 55, 60, 61, 65, 66, 82, 88, 89, 90, 92, 100, 104, 112, 120, 121, 124, 138, 155, 159, 160, 165, 175, 180, 183, 199, 200, 201, 202, 215, 216, 233, 234, 236, 239, 247, 259, 267, 269, 270, 272, 273, 281], "index": [2, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 26, 37, 40, 41, 57, 60, 61, 63, 67, 69, 73, 74, 79, 80, 81, 82, 85, 100, 114, 118, 119, 144, 159, 163, 165, 175, 191, 194, 199, 200, 201, 217, 228, 231, 232, 233, 234, 248, 260, 270, 271], "second": [2, 3, 4, 6, 9, 12, 13, 18, 22, 23, 26, 27, 37, 48, 49, 60, 61, 100, 111, 141, 159, 185, 191, 194, 199, 201, 202, 211, 216, 234, 235, 240, 241, 242, 267, 269, 270, 271, 275, 279, 281, 283], "3rd": [2, 13, 26, 133, 178], "have": [2, 3, 6, 9, 11, 15, 16, 17, 18, 19, 22, 24, 26, 38, 41, 55, 56, 57, 82, 85, 112, 134, 139, 140, 141, 145, 146, 157, 179, 192, 202, 203, 205, 206, 211, 219, 220, 233, 234, 236, 247, 254, 259, 266, 269, 270, 271, 272, 274, 280, 281, 284], "somewhat": 2, "limit": [2, 3, 4, 5, 12, 33, 49, 69, 71, 72, 114, 115, 135, 138, 141, 159, 160, 182, 188, 191, 194, 199, 201, 209, 210, 211, 222, 233, 243, 246, 247, 255, 258, 259, 268, 269], "avail": [2, 8, 13, 26, 41, 98, 160, 200, 204, 231, 233, 234, 236, 247, 259, 267, 269, 271, 273], "although": 2, "all": [2, 3, 4, 9, 12, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 27, 29, 30, 33, 49, 56, 61, 63, 67, 69, 76, 78, 79, 80, 81, 82, 95, 105, 111, 114, 118, 119, 128, 130, 144, 153, 156, 163, 164, 165, 166, 181, 182, 189, 191, 194, 202, 209, 215, 217, 222, 232, 233, 234, 236, 239, 244, 246, 247, 254, 256, 258, 259, 266, 267, 269, 271, 276, 280, 281], "algebra": [2, 26, 35, 44, 99, 103, 145, 219, 231, 234, 241, 242], "perform": [2, 6, 9, 16, 18, 24, 38, 55, 112, 163, 164, 166, 202, 208, 234, 247, 259, 269, 271, 277, 278, 281, 283], "also": [2, 3, 4, 8, 9, 10, 13, 18, 22, 32, 33, 40, 41, 47, 60, 63, 64, 67, 69, 81, 82, 97, 114, 130, 141, 156, 165, 175, 192, 202, 208, 209, 211, 233, 234, 235, 236, 247, 259, 267, 269, 273, 280, 281, 283], "return": [2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 233, 234, 235, 237, 239, 241, 242, 247, 248, 259, 260, 267, 268, 269, 271, 273, 274, 280, 281, 282, 283, 284], "frequency_respons": [2, 13, 17, 18, 22, 23, 26, 27, 33, 61, 68, 113, 114, 269, 274, 275], "equival": [2, 32, 33, 43, 69, 71, 72, 85, 102, 114, 115, 146, 159, 160, 209, 210, 220, 247, 259, 267, 274], "assign": [2, 3, 4, 13, 17, 18, 22, 24, 26, 61, 63, 67, 69, 79, 80, 81, 114, 135, 188, 189, 200, 207, 217, 281], "tupl": [2, 12, 13, 16, 17, 18, 22, 24, 26, 41, 49, 61, 63, 65, 66, 67, 69, 79, 80, 81, 82, 114, 138, 141, 151, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 181, 182, 184, 185, 186, 187, 199, 200, 201, 211, 216, 217, 233, 234], "mag": [2, 13, 17, 18, 22, 26, 33, 45, 61, 69, 92, 93, 97, 104, 114, 124, 125, 209, 215, 272, 275, 279], "absolut": [2, 13, 17, 18, 22, 26, 32, 61, 69, 93, 114, 125, 215, 216, 275], "valu": [2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 31, 32, 33, 37, 39, 40, 41, 43, 45, 47, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 77, 79, 80, 81, 82, 85, 88, 90, 92, 96, 100, 102, 104, 107, 110, 111, 112, 114, 115, 117, 118, 119, 121, 122, 124, 130, 141, 144, 156, 157, 158, 159, 160, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 191, 194, 196, 197, 198, 199, 201, 202, 205, 207, 209, 210, 211, 215, 216, 217, 218, 222, 231, 232, 234, 235, 239, 240, 241, 242, 247, 259, 267, 269, 273, 274, 277, 281, 282, 283], "db": [2, 13, 17, 18, 22, 26, 33, 45, 61, 69, 92, 97, 104, 114, 124, 141, 155, 209, 211, 215, 227, 274, 275], "log10": [2, 13, 17, 18, 22, 26, 45, 61, 69, 92, 104, 114, 124, 272, 274, 275], "wrap": [2, 13, 17, 18, 22, 26, 61, 69, 114, 148, 224], "radian": [2, 13, 17, 18, 22, 23, 26, 27, 33, 61, 69, 97, 111, 114, 141, 209, 211, 267, 281], "sort": [2, 13, 14, 17, 18, 22, 25, 26, 32, 61, 69, 114, 152, 159], "which": [2, 3, 4, 5, 6, 9, 10, 12, 13, 16, 17, 18, 19, 22, 24, 26, 32, 33, 37, 39, 41, 46, 47, 49, 54, 56, 60, 61, 67, 68, 69, 79, 80, 81, 82, 88, 94, 97, 98, 110, 113, 114, 122, 126, 135, 137, 138, 151, 158, 159, 160, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 199, 201, 202, 204, 207, 215, 217, 222, 232, 234, 240, 244, 247, 256, 259, 267, 269, 271, 280, 281], "wa": [2, 13, 17, 18, 22, 26, 56, 61, 67, 69, 114, 163, 164, 165, 166, 175, 244, 247, 256, 259, 267, 269, 273, 280], "evalu": [2, 9, 11, 13, 15, 16, 17, 18, 19, 20, 22, 23, 26, 27, 41, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 81, 82, 88, 111, 113, 114, 131, 151, 157, 159, 160, 163, 164, 165, 166, 169, 174, 196, 205, 235, 267, 269, 274], "If": [2, 4, 5, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 175, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 194, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 228, 230, 233, 234, 247, 259, 267, 269, 280, 283], "siso": [2, 7, 8, 13, 16, 17, 18, 19, 22, 23, 24, 26, 27, 60, 61, 63, 67, 69, 79, 80, 81, 82, 86, 93, 111, 114, 125, 135, 138, 141, 142, 145, 146, 147, 163, 165, 175, 180, 188, 199, 200, 201, 211, 212, 215, 216, 217, 219, 220, 221, 237, 269, 270, 274, 277, 278], "squeez": [2, 13, 16, 17, 18, 19, 22, 23, 24, 26, 27, 39, 60, 61, 63, 67, 69, 79, 80, 81, 111, 114, 163, 164, 165, 166, 175, 217, 272, 274, 281], "argument": [2, 6, 16, 18, 19, 21, 22, 24, 47, 48, 51, 54, 55, 60, 61, 64, 65, 66, 67, 89, 90, 94, 97, 107, 110, 112, 120, 121, 122, 126, 137, 138, 142, 143, 146, 157, 163, 165, 175, 181, 182, 184, 185, 186, 187, 191, 194, 199, 201, 202, 207, 212, 213, 220, 233, 234, 269], "true": [2, 3, 4, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 33, 35, 38, 39, 43, 44, 47, 48, 49, 53, 54, 56, 60, 61, 63, 64, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 94, 97, 98, 99, 102, 103, 109, 110, 111, 113, 114, 115, 126, 127, 130, 137, 139, 141, 142, 145, 150, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 175, 181, 182, 184, 185, 186, 187, 189, 191, 192, 194, 199, 201, 202, 203, 204, 208, 209, 210, 211, 212, 215, 217, 219, 222, 223, 230, 232, 234, 235, 237, 239, 241, 242, 247, 259, 267, 268, 269, 272, 274, 279, 280, 281, 283], "fals": [2, 3, 4, 6, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 33, 38, 40, 47, 48, 49, 54, 56, 60, 61, 63, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 94, 98, 110, 111, 113, 114, 115, 118, 119, 126, 130, 137, 139, 141, 144, 152, 156, 159, 160, 163, 164, 165, 166, 167, 175, 181, 182, 185, 186, 187, 189, 191, 192, 194, 199, 201, 202, 203, 204, 208, 209, 210, 211, 215, 217, 222, 234, 235, 236, 237, 239, 247, 259, 268, 269, 273, 274, 279, 282, 283], "singl": [2, 3, 4, 13, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 33, 40, 41, 47, 48, 49, 54, 57, 58, 60, 61, 63, 67, 69, 79, 80, 81, 82, 86, 94, 110, 111, 114, 126, 130, 131, 156, 159, 160, 163, 165, 175, 181, 182, 185, 191, 194, 199, 201, 209, 210, 217, 222, 234, 269, 282], "dimension": [2, 13, 17, 18, 22, 23, 24, 26, 27, 61, 63, 67, 69, 79, 80, 111, 114, 145, 185, 186, 187, 217, 219, 234, 269, 276], "remov": [2, 13, 14, 17, 18, 22, 23, 24, 25, 26, 27, 31, 37, 39, 61, 63, 67, 69, 79, 80, 96, 111, 114, 128, 153, 160, 164, 166, 217, 235, 236, 267, 269, 283], "process": [2, 4, 16, 17, 19, 24, 40, 41, 50, 60, 71, 72, 81, 82, 89, 106, 115, 120, 163, 165, 239, 267, 269, 271, 272, 273, 277, 278, 284], "keyword": [2, 10, 13, 15, 16, 17, 18, 19, 21, 22, 24, 26, 33, 40, 41, 48, 51, 53, 57, 60, 61, 65, 66, 69, 81, 82, 90, 107, 109, 114, 121, 130, 138, 142, 143, 156, 159, 160, 163, 165, 167, 175, 181, 184, 185, 186, 187, 191, 194, 199, 201, 207, 209, 212, 213, 218, 222, 234, 267, 269], "chang": [2, 4, 8, 9, 13, 15, 16, 17, 18, 19, 22, 24, 26, 60, 61, 141, 145, 191, 194, 199, 201, 202, 211, 218, 219, 230, 232, 234, 235, 236, 239, 267, 269, 270, 273, 284], "call": [2, 5, 9, 13, 17, 18, 24, 28, 33, 40, 41, 48, 51, 53, 54, 55, 65, 66, 67, 68, 69, 70, 71, 89, 90, 94, 107, 109, 110, 112, 113, 114, 115, 120, 121, 126, 142, 163, 165, 167, 169, 174, 175, 182, 191, 194, 196, 199, 201, 202, 205, 212, 234, 239, 267, 269, 272, 280], "new": [2, 13, 15, 16, 17, 18, 19, 22, 24, 26, 33, 48, 60, 61, 68, 70, 73, 74, 82, 88, 98, 113, 130, 142, 143, 145, 146, 155, 156, 157, 159, 164, 166, 181, 191, 194, 199, 201, 204, 208, 209, 212, 213, 219, 220, 222, 239, 244, 256, 267, 269, 281], "specifi": [2, 9, 13, 15, 16, 17, 18, 19, 22, 24, 26, 29, 33, 36, 38, 40, 41, 44, 48, 49, 51, 53, 54, 55, 56, 57, 60, 61, 64, 65, 66, 68, 69, 71, 72, 79, 81, 82, 88, 90, 94, 95, 97, 98, 103, 107, 109, 110, 112, 113, 114, 115, 121, 126, 129, 130, 133, 134, 139, 140, 142, 154, 156, 157, 159, 160, 163, 164, 165, 166, 167, 175, 178, 179, 181, 182, 184, 185, 186, 187, 191, 194, 199, 201, 202, 203, 204, 206, 209, 210, 212, 216, 217, 218, 222, 228, 230, 234, 267, 269, 280], "nonzero": [2, 22, 26, 234], "timebas": [2, 13, 15, 16, 17, 18, 19, 20, 22, 26, 33, 60, 61, 64, 68, 82, 83, 84, 113, 134, 139, 140, 142, 145, 157, 159, 160, 179, 192, 202, 203, 206, 212, 219, 230, 280], "given": [2, 3, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 26, 28, 29, 31, 33, 41, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 81, 82, 85, 88, 89, 94, 95, 96, 104, 106, 110, 112, 113, 114, 118, 119, 120, 126, 128, 129, 130, 134, 135, 139, 140, 142, 143, 144, 145, 146, 153, 154, 156, 157, 159, 160, 163, 164, 165, 166, 167, 169, 174, 175, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 194, 199, 200, 201, 202, 203, 205, 206, 207, 209, 212, 213, 215, 216, 217, 218, 219, 220, 222, 226, 230, 232, 234, 235, 236, 239, 267, 269, 271, 273, 280, 281, 282, 283], "when": [2, 3, 4, 15, 16, 17, 18, 19, 20, 22, 24, 26, 33, 36, 38, 47, 50, 61, 63, 64, 69, 71, 72, 79, 80, 81, 82, 89, 106, 114, 115, 120, 130, 156, 157, 159, 191, 194, 199, 201, 202, 209, 210, 217, 222, 234, 247, 254, 259, 266, 267, 269, 271, 281], "construct": [2, 3, 4, 13, 15, 16, 17, 18, 19, 22, 26, 37, 58, 60, 61, 68, 82, 100, 113, 182, 234, 236, 240, 270, 271, 273, 280, 281, 282], "0": [2, 3, 4, 6, 7, 9, 13, 14, 15, 16, 18, 19, 22, 24, 25, 26, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 85, 87, 88, 89, 91, 92, 93, 94, 96, 98, 99, 101, 103, 104, 106, 107, 108, 110, 113, 114, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 132, 133, 134, 135, 139, 140, 141, 142, 144, 148, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 174, 175, 178, 179, 181, 182, 188, 189, 191, 194, 195, 196, 199, 201, 202, 203, 204, 206, 208, 211, 212, 215, 216, 217, 218, 222, 223, 224, 226, 228, 230, 232, 234, 235, 236, 237, 239, 240, 241, 242, 247, 259, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "continu": [2, 13, 15, 16, 17, 18, 19, 22, 23, 26, 27, 31, 32, 33, 35, 39, 40, 43, 56, 57, 60, 61, 64, 67, 79, 82, 83, 89, 91, 96, 98, 99, 102, 111, 120, 123, 134, 139, 140, 142, 148, 157, 158, 159, 160, 163, 175, 179, 189, 191, 194, 199, 201, 202, 203, 204, 206, 212, 217, 223, 224, 228, 230, 232, 234, 239, 269, 280], "default": [2, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 54, 56, 57, 60, 61, 63, 64, 66, 67, 68, 69, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 98, 99, 103, 106, 107, 108, 110, 111, 113, 114, 115, 119, 120, 121, 122, 123, 126, 130, 133, 137, 139, 141, 142, 145, 146, 148, 152, 156, 157, 158, 159, 160, 163, 164, 165, 166, 175, 178, 181, 182, 184, 185, 186, 187, 189, 191, 192, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 230, 233, 234, 247, 259, 267, 268, 269, 281, 283], "sampl": [2, 7, 15, 18, 19, 22, 26, 33, 39, 54, 61, 64, 67, 69, 71, 72, 81, 82, 94, 98, 110, 114, 115, 126, 139, 141, 142, 145, 157, 159, 160, 203, 204, 209, 210, 211, 212, 219, 228, 230, 236, 237, 239, 240, 267, 269, 280, 284], "period": [2, 6, 18, 19, 22, 26, 61, 82, 98, 148, 157, 204, 217, 224, 228, 267, 280], "unspecifi": [2, 15, 19, 22, 26, 29, 40, 41, 54, 55, 68, 82, 94, 95, 110, 112, 113, 126, 129, 134, 139, 140, 142, 143, 145, 146, 154, 157, 167, 179, 203, 206, 212, 213, 218, 219, 220, 223, 230], "none": [2, 3, 4, 6, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 44, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 96, 98, 99, 101, 103, 106, 107, 108, 111, 113, 114, 115, 118, 119, 120, 121, 122, 123, 127, 130, 132, 133, 139, 141, 142, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 175, 178, 181, 182, 184, 185, 186, 187, 189, 191, 192, 194, 199, 200, 201, 203, 204, 205, 209, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 230, 234, 235, 239, 269, 280, 282, 283], "onli": [2, 13, 18, 20, 22, 24, 26, 48, 56, 61, 67, 68, 79, 82, 98, 105, 113, 134, 137, 138, 140, 142, 146, 147, 163, 165, 175, 179, 191, 194, 199, 200, 201, 204, 206, 212, 215, 217, 218, 220, 221, 234, 237, 239, 247, 259, 267, 269, 270, 271, 280], "inputoutputsystem": [2, 3, 4, 13, 16, 17, 18, 19, 22, 26, 29, 37, 40, 55, 60, 61, 82, 88, 95, 98, 100, 112, 129, 134, 140, 142, 154, 157, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 204, 206, 212, 223, 230, 231, 234, 267], "allow": [2, 3, 4, 5, 9, 11, 12, 13, 15, 18, 20, 24, 26, 33, 37, 40, 41, 68, 70, 82, 113, 145, 159, 196, 205, 219, 222, 234, 269], "explicit": [2, 9, 82, 234], "must": [2, 9, 13, 16, 18, 19, 22, 24, 26, 30, 33, 51, 52, 56, 58, 60, 61, 65, 66, 67, 81, 90, 91, 94, 97, 107, 108, 121, 122, 123, 126, 128, 130, 134, 140, 141, 151, 153, 155, 156, 174, 179, 191, 194, 202, 205, 206, 209, 211, 222, 233, 234, 243, 244, 255, 256, 269, 280, 281], "order": [2, 3, 8, 9, 14, 18, 22, 25, 26, 31, 32, 54, 56, 58, 61, 76, 78, 94, 96, 110, 126, 127, 128, 150, 152, 153, 164, 166, 232, 233, 245, 254, 257, 266, 267, 269, 274, 276, 280, 281, 284], "combin": [2, 17, 22, 26, 29, 33, 36, 55, 95, 112, 134, 140, 179, 206, 222, 234, 236, 247, 259, 267, 269, 273, 281], "result": [2, 6, 9, 12, 17, 22, 24, 26, 33, 35, 44, 49, 50, 51, 52, 56, 63, 67, 79, 80, 81, 82, 89, 90, 91, 97, 99, 103, 106, 107, 108, 120, 121, 123, 127, 141, 142, 146, 150, 158, 163, 164, 165, 166, 175, 209, 211, 212, 217, 220, 235, 236, 239, 240, 247, 259, 267, 269, 273, 274, 281, 282, 283], "latter": [2, 17, 22, 26], "similarli": [2, 22, 26, 82, 234], "sample_system": [2, 98], "see": [2, 6, 9, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 26, 29, 31, 32, 33, 47, 48, 54, 55, 60, 61, 63, 65, 66, 67, 71, 79, 80, 81, 82, 83, 84, 85, 86, 88, 94, 95, 96, 98, 110, 112, 115, 126, 129, 130, 134, 138, 140, 141, 142, 143, 145, 146, 151, 152, 154, 156, 159, 164, 165, 166, 167, 175, 179, 181, 191, 194, 199, 201, 202, 204, 206, 209, 211, 212, 213, 216, 217, 219, 220, 222, 230, 231, 233, 234, 236, 247, 259, 267, 270, 272, 273, 277, 281, 283, 284], "util": [2, 231, 234, 235, 239, 267, 281, 283], "config": [2, 13, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 33, 60, 61, 63, 67, 69, 71, 72, 79, 80, 81, 82, 88, 98, 111, 114, 115, 130, 141, 145, 156, 159, 160, 163, 165, 175, 181, 184, 185, 186, 187, 191, 192, 194, 199, 201, 204, 209, 210, 211, 217, 219, 222, 230, 280], "default_dt": [2, 22, 26], "either": [2, 10, 13, 15, 18, 22, 24, 26, 31, 33, 39, 40, 41, 48, 49, 51, 53, 56, 58, 61, 63, 66, 75, 82, 89, 90, 94, 96, 105, 107, 109, 116, 120, 121, 126, 128, 139, 142, 143, 145, 146, 153, 163, 164, 165, 166, 175, 182, 202, 203, 212, 213, 216, 219, 220, 222, 228, 230, 234, 267, 269], "constructor": [2, 5, 13, 142, 212, 282], "desir": [2, 3, 4, 9, 28, 31, 34, 40, 41, 56, 65, 75, 94, 96, 116, 126, 135, 141, 188, 189, 191, 194, 199, 201, 202, 211, 226, 234, 235, 236, 239, 240, 270, 271, 280, 281, 282, 283], "origin": [2, 31, 41, 46, 68, 88, 96, 98, 113, 127, 128, 143, 145, 146, 150, 153, 204, 213, 217, 219, 220, 234, 239, 243, 247, 255, 259, 269, 270, 271, 273, 281], "sole": [2, 142, 212], "ss2tf": [2, 3, 142, 145, 146, 212, 219, 220, 281], "tf2ss": [2, 32, 34, 42, 77, 101, 117, 132, 142, 143, 145, 152, 161, 162, 195, 208, 212, 213, 219, 269], "number": [2, 6, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 33, 38, 40, 47, 51, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 90, 94, 105, 107, 110, 111, 114, 115, 118, 119, 121, 122, 126, 130, 133, 134, 139, 141, 142, 143, 144, 145, 146, 151, 156, 159, 160, 163, 164, 166, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 191, 192, 194, 199, 201, 203, 209, 210, 211, 212, 213, 216, 217, 219, 220, 222, 226, 230, 234, 238, 267, 268, 269, 277, 278, 280, 284], "comput": [2, 3, 4, 5, 6, 9, 13, 16, 17, 18, 19, 21, 22, 26, 33, 35, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 75, 77, 79, 80, 81, 85, 88, 89, 90, 91, 94, 99, 102, 103, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 120, 121, 123, 126, 133, 136, 137, 138, 141, 142, 146, 149, 151, 158, 159, 160, 163, 165, 167, 168, 175, 178, 180, 182, 189, 190, 191, 193, 194, 199, 200, 201, 210, 211, 212, 216, 217, 220, 228, 229, 231, 232, 234, 235, 236, 239, 240, 247, 259, 267, 268, 269, 270, 271, 272, 273, 276, 277, 279, 281, 282, 283, 284], "an": [2, 3, 4, 5, 6, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 22, 24, 26, 29, 33, 37, 38, 40, 41, 47, 51, 54, 55, 56, 60, 61, 63, 64, 65, 66, 68, 69, 70, 79, 80, 81, 82, 85, 87, 88, 89, 90, 94, 95, 100, 107, 110, 111, 112, 113, 114, 120, 121, 126, 138, 139, 143, 146, 152, 157, 159, 160, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 184, 185, 186, 187, 190, 200, 202, 203, 208, 209, 213, 216, 217, 218, 220, 222, 232, 234, 235, 236, 240, 244, 246, 247, 254, 256, 258, 259, 266, 267, 269, 270, 271, 273, 274, 280, 281, 282, 283], "each": [2, 9, 10, 12, 13, 14, 16, 17, 18, 21, 22, 24, 25, 26, 33, 36, 37, 38, 39, 43, 48, 49, 57, 58, 60, 61, 63, 65, 66, 67, 71, 79, 81, 82, 100, 102, 105, 115, 118, 119, 122, 130, 138, 144, 155, 156, 159, 160, 163, 165, 167, 168, 171, 173, 175, 177, 181, 182, 184, 185, 186, 187, 191, 192, 194, 199, 201, 202, 209, 217, 218, 222, 228, 234, 236, 247, 254, 259, 266, 267, 269, 271, 274, 280, 282], "timeresponsedata": [2, 25, 36, 54, 63, 67, 79, 80, 81, 94, 110, 126, 217, 222, 237, 269], "contain": [2, 9, 10, 17, 19, 21, 26, 33, 48, 49, 60, 63, 64, 67, 71, 81, 82, 115, 130, 136, 141, 145, 149, 156, 157, 159, 160, 181, 190, 191, 193, 194, 199, 201, 209, 211, 216, 219, 222, 229, 230, 233, 238, 268, 269, 271, 281], "next": [2, 9, 16, 18, 19, 22, 60, 61, 202, 234, 235, 236, 244, 256, 267, 280, 281], "section": [2, 3, 4, 6, 234, 247, 259, 271], "forced_respons": [2, 63, 79, 80, 81, 94, 126, 217, 234, 237, 269, 281], "zero": [2, 4, 7, 9, 13, 17, 18, 20, 21, 22, 26, 27, 37, 41, 46, 47, 50, 56, 61, 65, 66, 79, 80, 81, 89, 100, 105, 106, 120, 127, 136, 137, 150, 174, 175, 190, 191, 192, 193, 194, 199, 201, 202, 205, 217, 222, 230, 231, 232, 234, 235, 236, 237, 239, 241, 242, 247, 259, 272, 273, 274, 280, 281, 283], "initi": [2, 9, 33, 35, 40, 44, 56, 65, 66, 67, 79, 80, 81, 99, 103, 118, 122, 141, 144, 163, 165, 175, 181, 182, 184, 185, 186, 187, 197, 202, 211, 216, 217, 222, 231, 233, 234, 235, 236, 239, 241, 242, 247, 259, 267, 269, 273, 274, 281, 283], "non": [2, 6, 9, 22, 47, 50, 54, 82, 89, 106, 110, 120, 159, 160, 180, 202, 234, 247, 259, 269, 280, 281], "condit": [2, 9, 65, 66, 67, 78, 79, 80, 81, 119, 122, 128, 151, 153, 175, 181, 182, 184, 185, 186, 187, 217, 234, 235, 236, 239, 241, 242, 243, 246, 255, 258, 267, 269, 273, 281, 282, 283], "impulse_respons": [2, 7, 54, 67, 80, 110, 217, 237, 269], "initial_respons": [2, 24, 67, 79, 217, 269], "step_respons": [2, 7, 24, 67, 79, 80, 216, 232, 269, 270, 272, 274, 275, 280, 281], "automat": [2, 33, 48, 69, 71, 72, 82, 114, 115, 130, 135, 156, 159, 188, 189, 191, 194, 199, 201, 209, 210, 217, 222, 232, 269, 277, 278, 280], "vector": [2, 3, 4, 9, 13, 16, 18, 24, 29, 31, 39, 40, 41, 63, 65, 66, 67, 68, 78, 79, 80, 81, 82, 95, 96, 97, 113, 118, 119, 122, 128, 141, 144, 153, 163, 165, 167, 175, 181, 182, 184, 185, 186, 187, 211, 216, 217, 232, 233, 235, 239, 267, 268, 269, 270, 271, 272, 273, 281, 284], "pole": [2, 13, 17, 18, 20, 21, 22, 26, 28, 43, 46, 50, 61, 76, 78, 89, 102, 105, 106, 120, 127, 135, 137, 138, 139, 146, 149, 150, 158, 159, 160, 188, 189, 190, 191, 192, 194, 199, 200, 201, 202, 203, 217, 220, 229, 230, 231, 232, 272, 281, 282], "pass": [2, 9, 10, 15, 16, 18, 19, 22, 24, 33, 41, 48, 56, 60, 61, 64, 65, 66, 67, 81, 82, 88, 130, 142, 143, 146, 156, 157, 159, 163, 165, 167, 168, 175, 181, 182, 184, 185, 186, 187, 191, 194, 199, 201, 209, 212, 213, 215, 220, 222, 269, 282], "timeresponselist": [2, 67, 79, 80, 217], "take": [2, 3, 6, 9, 10, 40, 41, 65, 66, 77, 105, 117, 163, 165, 167, 234, 235, 236, 247, 254, 259, 266, 267, 269, 281, 282, 283], "appli": [2, 3, 4, 14, 24, 25, 32, 41, 65, 66, 163, 165, 167, 175, 192, 234, 239, 267, 269, 273, 283], "plot": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 20, 21, 24, 25, 33, 36, 48, 49, 67, 69, 71, 72, 97, 114, 115, 130, 131, 137, 138, 141, 155, 156, 159, 160, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 194, 198, 199, 200, 201, 202, 209, 210, 211, 215, 222, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "turn": [2, 4, 7, 11, 26, 27, 33, 40, 48, 49, 70, 159, 160, 163, 167, 175, 191, 194, 196, 205, 235, 236, 237, 241, 242, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283], "sequenc": [2, 93, 125, 182, 215, 269, 284], "color": [2, 3, 4, 7, 33, 141, 159, 181, 184, 185, 186, 187, 191, 194, 199, 201, 209, 211, 222, 236, 237, 241, 242, 268, 269, 272, 281], "appropri": [2, 3, 4, 9, 20, 22, 24, 51, 65, 66, 82, 89, 90, 107, 120, 121, 140, 206, 234, 269], "titl": [2, 3, 6, 7, 10, 24, 33, 36, 48, 130, 156, 159, 181, 191, 194, 199, 201, 209, 222, 236, 237, 240, 241, 242, 269, 270, 271, 274, 275], "legend": [2, 3, 4, 10, 33, 71, 115, 130, 156, 159, 191, 194, 199, 201, 209, 222, 234, 239, 241, 242, 269, 270, 271, 273, 274, 275, 280, 281, 282], "In": [2, 3, 4, 6, 9, 13, 17, 18, 22, 26, 27, 41, 48, 61, 67, 69, 77, 81, 82, 114, 117, 164, 166, 189, 228, 233, 234, 236, 239, 245, 247, 254, 257, 259, 266, 267, 269, 272, 280, 281], "input_output_respons": [2, 3, 4, 6, 24, 40, 67, 157, 234, 235, 236, 239, 240, 241, 242, 267, 269, 273, 280, 281, 282, 283, 284], "handl": [2, 3, 135, 188, 239], "interconnect": [2, 3, 8, 13, 16, 18, 19, 22, 26, 29, 37, 38, 55, 60, 61, 73, 74, 76, 78, 81, 95, 100, 112, 129, 134, 140, 141, 154, 179, 206, 211, 218, 231, 234, 239, 241, 242, 273, 282], "accur": [2, 81, 280], "abov": [2, 3, 13, 159, 160, 202, 234, 236, 243, 246, 255, 258, 267, 271, 280, 281], "varieti": [2, 8, 64, 234, 269], "over": [2, 33, 130, 131, 135, 156, 159, 160, 163, 164, 165, 166, 188, 199, 200, 201, 209, 210, 228, 239, 254, 266, 267, 283, 284], "column": [2, 9, 13, 16, 18, 33, 37, 38, 41, 51, 54, 90, 94, 100, 107, 110, 121, 126, 192, 222, 234, 269], "row": [2, 13, 21, 33, 51, 54, 90, 94, 107, 110, 121, 126, 138, 159, 192, 199, 201, 222, 269], "compon": [2, 3, 4, 12, 81, 82, 218, 271, 281], "e": [2, 5, 9, 13, 14, 16, 18, 22, 25, 32, 35, 38, 39, 41, 44, 50, 51, 52, 81, 82, 89, 90, 91, 97, 98, 99, 103, 106, 107, 108, 120, 121, 123, 141, 143, 163, 164, 165, 166, 167, 202, 204, 211, 213, 215, 218, 232, 233, 234, 241, 242, 244, 247, 256, 259, 269, 270, 271, 280, 281, 284], "variabl": [2, 3, 4, 7, 9, 13, 15, 22, 24, 26, 33, 40, 41, 57, 58, 59, 62, 67, 118, 119, 144, 145, 165, 219, 228, 234, 235, 237, 239, 241, 242, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282], "scipi": [2, 18, 22, 24, 26, 35, 41, 44, 49, 50, 51, 52, 56, 61, 63, 65, 66, 67, 79, 80, 81, 89, 90, 91, 98, 99, 103, 106, 107, 108, 120, 121, 123, 135, 142, 146, 158, 163, 164, 165, 166, 167, 175, 182, 188, 204, 212, 217, 220, 233, 236, 239, 241, 242, 247, 259, 267, 271, 284], "signal": [2, 3, 4, 9, 13, 15, 16, 17, 18, 19, 22, 24, 26, 29, 33, 37, 38, 39, 40, 41, 55, 60, 61, 63, 64, 67, 68, 79, 80, 81, 82, 88, 95, 98, 112, 113, 129, 134, 135, 139, 140, 142, 143, 145, 146, 154, 157, 165, 167, 179, 188, 203, 204, 206, 212, 213, 216, 217, 218, 219, 220, 222, 228, 230, 232, 236, 239, 240, 241, 242, 267, 269, 275, 280, 282, 284], "mean": [2, 13, 26, 37, 100, 191, 194, 199, 201, 234, 267, 284], "interchang": 2, "thu": [2, 6, 9, 228, 267], "transpos": [2, 24, 54, 63, 67, 79, 80, 81, 94, 110, 126, 163, 164, 166, 175, 217, 222, 237, 240, 269, 274, 281, 283], "shape": [2, 3, 4, 10, 13, 17, 18, 19, 22, 23, 24, 26, 27, 33, 42, 61, 63, 64, 67, 69, 79, 80, 101, 111, 114, 122, 132, 157, 159, 162, 163, 175, 181, 182, 183, 184, 185, 186, 187, 191, 194, 199, 201, 217, 222, 234, 237, 240, 269, 270, 271, 281], "t1": [2, 182, 270, 271, 274, 275, 283], "t2": [2, 182, 270, 271, 274, 275, 283], "t3": [2, 270, 271, 283], "tn": 2, "u1": [2, 9, 142, 212, 232, 234, 267, 269, 272, 283], "u2": [2, 232, 234, 267, 269, 283], "ui": [2, 240], "2": [2, 3, 4, 6, 7, 8, 9, 12, 13, 24, 26, 29, 31, 32, 33, 34, 37, 41, 42, 46, 48, 49, 51, 53, 54, 55, 63, 67, 69, 70, 72, 77, 78, 81, 82, 90, 93, 94, 95, 96, 97, 98, 100, 101, 105, 107, 109, 110, 111, 112, 114, 117, 121, 125, 126, 128, 129, 132, 133, 135, 140, 142, 143, 145, 146, 148, 152, 153, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 194, 195, 196, 199, 201, 202, 204, 206, 208, 210, 212, 213, 216, 218, 219, 220, 224, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 247, 254, 256, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284], "third": [2, 26, 234, 247, 259], "accept": [2, 47, 142, 143, 145, 146, 182, 212, 213, 219, 220, 247, 259, 267, 269, 281], "add": [2, 3, 4, 16, 18, 19, 22, 26, 60, 61, 69, 82, 88, 98, 111, 114, 134, 155, 179, 202, 204, 222, 235, 236, 239, 267, 272, 273, 281, 282, 283], "conveni": [2, 67, 122, 247, 259, 267], "j": [2, 3, 5, 6, 9, 12, 13, 17, 18, 22, 26, 40, 49, 51, 58, 61, 82, 85, 90, 94, 107, 121, 126, 145, 175, 216, 219, 228, 232, 234, 239, 241, 242, 267, 269, 270, 271, 272, 273, 281], "x0": [2, 3, 4, 9, 16, 18, 19, 22, 40, 56, 60, 61, 65, 66, 67, 79, 80, 81, 119, 122, 165, 174, 175, 182, 217, 234, 235, 236, 239, 240, 241, 242, 267, 273, 281, 283], "x1": [2, 9, 142, 212, 239, 241, 242, 273, 281], "x2": [2, 239, 241, 242, 273, 281], "xj": 2, "These": [2, 5, 8, 16, 18, 24, 26, 40, 41, 165, 182, 222, 236, 269, 270], "access": [2, 8, 10, 13, 18, 20, 22, 24, 61, 63, 67, 81, 216, 269, 271], "via": [2, 8, 13, 16, 24, 31, 43, 82, 96, 102, 222, 269, 277, 278], "properti": [2, 10, 18, 22, 24, 33, 48, 61, 63, 67, 81, 130, 156, 159, 209, 222, 247, 259, 269, 273, 281, 284], "rss": [2, 29, 31, 37, 53, 55, 67, 69, 75, 79, 80, 82, 95, 96, 100, 109, 112, 114, 116, 118, 119, 122, 128, 134, 140, 144, 153, 179, 206, 217, 234, 276], "depend": [2, 3, 4, 5, 9, 18, 22, 26, 33, 61, 196, 233, 239, 267, 273, 281], "being": [2, 10, 18, 20, 22, 24, 26, 33, 61, 82, 88, 98, 168, 169, 170, 171, 172, 173, 174, 176, 177, 202, 204, 207, 222, 267, 269, 280, 281], "whether": [2, 15, 19, 24, 33, 66, 82, 157, 163, 164, 165, 166, 175, 202, 222, 223, 243, 246, 247, 255, 258, 259, 269, 281], "mimo": [2, 7, 8, 13, 17, 18, 22, 24, 26, 27, 33, 55, 61, 69, 80, 111, 112, 114, 118, 135, 144, 145, 188, 216, 219, 233, 237, 269], "trace": [2, 24, 36, 63, 217, 222, 235, 269, 277, 281], "pair": [2, 5, 12, 26, 49, 79, 127, 150, 164, 166, 181, 182, 217, 232, 271], "step": [2, 24, 67, 79, 80, 81, 118, 119, 122, 141, 202, 211, 216, 217, 222, 231, 232, 234, 236, 241, 242, 247, 259, 267, 269, 270, 271, 274, 276, 279, 280, 281, 283, 284], "extract": [2, 232, 239, 270, 272, 273, 280, 282], "option": [2, 5, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 94, 95, 97, 98, 99, 100, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 126, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 154, 155, 156, 157, 158, 159, 160, 163, 165, 167, 175, 179, 181, 182, 184, 185, 186, 187, 189, 191, 192, 194, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 228, 230, 233, 234, 247, 259, 267, 268, 269], "return_x": [2, 24, 63, 67, 79, 80, 81, 118, 119, 144, 217, 235, 241, 242, 267, 281], "simpl": [2, 3, 4, 5, 6, 234, 236, 238, 267, 268, 272, 281, 282, 283, 284], "like": [2, 81, 105, 118, 119, 122, 142, 144, 155, 163, 164, 166, 175, 182, 183, 202, 212, 232, 233, 234, 247, 254, 259, 266, 267, 270, 271, 272, 279, 280, 281, 284], "y_0": 2, "y_1": [2, 274, 275], "work": [2, 19, 24, 37, 69, 82, 114, 145, 191, 194, 219, 231, 233, 234, 236, 243, 247, 255, 259, 267, 269, 270, 271, 272, 280, 282, 283], "feedthrough": [2, 143, 213], "matrix": [2, 16, 18, 19, 22, 28, 31, 32, 34, 35, 37, 39, 40, 41, 42, 44, 50, 51, 52, 54, 60, 61, 65, 66, 67, 72, 75, 77, 78, 89, 90, 91, 96, 99, 100, 101, 103, 105, 106, 107, 108, 110, 116, 117, 120, 121, 123, 132, 133, 135, 142, 143, 162, 169, 170, 172, 174, 175, 176, 178, 188, 189, 208, 212, 213, 228, 231, 234, 236, 239, 270, 271, 273], "its": [2, 9, 13, 15, 16, 17, 18, 19, 22, 26, 40, 60, 61, 65, 81, 82, 141, 142, 143, 145, 146, 202, 211, 212, 213, 219, 220, 235, 244, 247, 256, 259, 267, 280, 281, 283], "part": [2, 3, 6, 18, 22, 26, 31, 32, 61, 96, 131, 139, 175, 189, 203, 233, 247, 259, 269, 270], "ft": 2, "final": [2, 3, 4, 9, 37, 59, 62, 65, 66, 81, 82, 100, 163, 164, 166, 167, 175, 216, 217, 222, 232, 233, 234, 235, 236, 239, 240, 267, 269, 271, 272, 273, 281, 283, 284], "to_panda": [2, 13, 24], "panda": [2, 13, 24], "datafram": 2, "df": [2, 47], "frame": [2, 10, 13, 24, 33, 159, 209], "other": [2, 8, 13, 15, 16, 18, 19, 22, 26, 56, 60, 61, 64, 77, 79, 81, 82, 117, 118, 140, 144, 157, 165, 206, 216, 217, 231, 232, 234, 236, 243, 246, 254, 255, 258, 266, 269], "creation": [2, 26, 222, 231, 247, 259, 269], "export": 2, "col": [2, 33, 222, 269], "dataseri": 2, "custom": [2, 155, 197, 207, 231, 268], "select": [2, 79, 80, 118, 119, 141, 142, 144, 202, 211, 212, 217, 247, 259, 269], "abil": [2, 82, 269], "style": [2, 3, 4, 18, 22, 61, 141, 159, 160, 163, 175, 192, 211, 225, 226, 227, 236, 269], "variou": [2, 234, 267, 269, 274], "establish": 2, "underli": [2, 24, 65, 66, 81, 167, 175, 267], "matric": [2, 3, 4, 18, 22, 24, 35, 40, 44, 50, 51, 52, 61, 89, 90, 91, 99, 103, 106, 107, 108, 120, 121, 123, 142, 143, 212, 213, 214, 236, 239, 270, 271, 273, 279, 280, 281], "element": [2, 12, 14, 16, 18, 20, 22, 24, 25, 26, 33, 35, 44, 47, 48, 61, 65, 66, 69, 71, 72, 81, 82, 99, 103, 114, 115, 138, 159, 160, 163, 165, 175, 181, 182, 185, 209, 210, 232, 267], "dictionari": [2, 15, 16, 19, 33, 60, 164, 166, 216, 222, 269], "set_default": [2, 197], "param1": 2, "val1": 2, "param2": 2, "val2": 2, "collect": [2, 8, 16, 141, 211, 233, 234], "along": [2, 9, 20, 33, 47, 65, 66, 159, 160, 163, 165, 175, 181, 183, 184, 185, 186, 187, 228, 247, 259, 267, 269, 281], "freqplot": [2, 33, 69, 71, 72, 114, 115, 141, 159, 160, 197, 207, 209, 210, 211], "otherwis": [2, 13, 15, 16, 17, 18, 19, 22, 26, 33, 40, 41, 48, 49, 60, 61, 67, 70, 71, 72, 82, 94, 98, 115, 122, 126, 130, 137, 141, 156, 159, 160, 163, 164, 165, 166, 181, 182, 184, 185, 186, 187, 191, 194, 199, 201, 202, 204, 209, 210, 211, 228, 243, 246, 255, 258], "power": [2, 133, 178, 225], "10": [2, 3, 4, 6, 9, 16, 18, 33, 37, 38, 47, 48, 49, 54, 67, 68, 69, 82, 87, 92, 94, 110, 113, 114, 122, 124, 126, 157, 182, 196, 202, 205, 216, 218, 232, 234, 235, 236, 239, 240, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283], "deg": [2, 4, 33, 93, 97, 125, 141, 211, 272], "degre": [2, 9, 33, 57, 59, 62, 93, 97, 125, 133, 141, 155, 178, 211, 215, 225, 227, 239, 267, 270, 272, 273, 281], "hz": [2, 6, 33, 69, 71, 72, 97, 114, 115, 141, 159, 160, 209, 210, 211, 215], "hertz": 2, "rad": [2, 3, 4, 6, 13, 17, 18, 22, 26, 33, 61, 68, 69, 71, 72, 93, 97, 98, 113, 114, 115, 125, 130, 131, 141, 156, 159, 160, 204, 209, 210, 211, 215, 225, 227, 235, 267, 269, 274, 275, 281, 282, 283], "sec": [2, 6, 13, 17, 18, 22, 26, 33, 61, 69, 71, 72, 93, 97, 114, 115, 125, 130, 131, 141, 156, 159, 160, 209, 210, 211, 215, 225, 227, 235, 267, 269, 281, 283], "grid": [2, 3, 4, 33, 130, 137, 141, 155, 156, 181, 182, 183, 184, 185, 186, 187, 191, 192, 194, 199, 201, 209, 211, 225, 227, 239, 268, 269, 271, 272], "number_of_sampl": [2, 33, 69, 71, 72, 114, 115, 141, 159, 160, 197, 207, 209, 210, 211], "1000": [2, 4, 141, 197, 207, 210, 211, 267, 271, 273, 284], "feature_periphery_decad": 2, "how": [2, 3, 6, 9, 24, 33, 40, 82, 163, 202, 222, 234, 247, 259, 267, 269, 273, 280, 281, 284], "mani": [2, 55, 82, 112, 217, 233, 234, 247, 259, 267, 280], "decad": [2, 69, 71, 72, 114, 115, 210], "rang": [2, 3, 4, 13, 14, 25, 33, 68, 69, 71, 72, 82, 97, 113, 114, 115, 130, 131, 141, 155, 156, 159, 160, 171, 173, 177, 199, 200, 201, 209, 210, 211, 226, 234, 237, 239, 240, 267, 269, 273, 281, 284], "side": [2, 16, 19, 56, 60, 234, 239, 270, 273], "featur": [2, 199, 200, 201, 231, 233, 269], "statesp": [2, 22, 276], "xferfcn": [2, 3, 26, 145, 219, 230], "remove_useless_st": 2, "effect": [2, 4, 67, 202, 270, 280, 281], "dynam": [2, 4, 6, 9, 15, 16, 18, 19, 22, 40, 41, 42, 50, 51, 60, 61, 81, 89, 90, 94, 101, 106, 107, 120, 121, 126, 132, 135, 162, 163, 165, 182, 184, 188, 189, 202, 217, 231, 234, 235, 236, 239, 241, 242, 267, 269, 270, 271, 272, 273, 280, 282, 283, 284], "richard": [3, 6, 8, 239, 281, 282, 284], "murrai": [3, 4, 6, 8, 9, 233, 239, 270, 271, 272, 281, 282, 284], "karl": [3, 281], "\u00e5str\u00f6m": 3, "17": [3, 4, 239, 240, 271, 273, 281], "jun": 3, "2019": [3, 4, 235, 281, 282], "car": [3, 4, 8, 9, 236, 281, 283], "encount": [3, 4], "everydai": [3, 4], "life": [3, 4], "attempt": [3, 4, 18, 22, 55, 61, 82, 112, 217], "maintain": [3, 4, 14, 18, 24, 25, 70, 245, 257], "constant": [3, 4, 26, 67, 80, 122, 155, 159, 160, 182, 202, 232, 234, 247, 259, 269, 270, 271, 272, 279, 281], "veloc": [3, 4, 9, 157, 236, 267, 269, 281, 282, 283], "presenc": [3, 4], "disturb": [3, 4, 40, 89, 120, 141, 165, 166, 168, 169, 202, 211, 232, 234, 236, 267, 273, 275], "primarili": [3, 4, 16, 18, 38, 269, 280], "caus": [3, 4, 233, 243, 255, 271, 281], "slope": [3, 4], "road": [3, 4, 9, 236], "unknown": [3, 4, 40], "measur": [3, 4, 18, 22, 40, 50, 61, 68, 76, 78, 89, 106, 113, 120, 165, 166, 234, 236, 239, 247, 259, 267, 273], "speed": [3, 4, 247, 259, 281, 282, 283], "adjust": [3, 4, 10, 239, 270, 273], "throttl": [3, 4], "notebook": [3, 6, 22, 202, 231, 236, 239, 267, 271, 273, 281, 284], "explor": [3, 4, 236, 281], "materi": [3, 4, 243, 255], "present": [3, 4, 10, 14, 18, 22, 24, 25, 33, 39, 48, 52, 61, 91, 108, 119, 123, 130, 156, 159, 164, 166, 191, 194, 199, 201, 208, 209, 222, 233, 247, 259, 269], "astrom": [3, 4, 9, 233, 270, 271, 272, 281], "frequenc": [3, 5, 6, 12, 13, 17, 18, 22, 23, 26, 27, 33, 43, 46, 48, 49, 61, 68, 69, 71, 72, 93, 97, 98, 102, 111, 113, 114, 115, 125, 130, 131, 141, 156, 159, 160, 180, 202, 204, 209, 210, 211, 215, 225, 227, 231, 232, 271, 272, 274, 275, 279, 281], "domain": [3, 24, 231, 247, 259, 269, 271], "law": [3, 4, 41, 51, 90, 107, 121, 234, 239, 241, 242, 267, 271, 273, 281, 282], "discuss": 3, "integr": [3, 4, 18, 22, 41, 51, 61, 65, 66, 81, 90, 107, 121, 163, 165, 167, 175, 182, 202, 228, 232, 234, 267, 280, 283], "action": [3, 4, 41, 51, 90, 107, 121, 234, 246, 258], "3": [3, 4, 6, 7, 8, 9, 13, 17, 18, 22, 26, 29, 32, 33, 34, 42, 49, 51, 55, 61, 63, 67, 69, 78, 81, 89, 90, 94, 95, 97, 101, 105, 107, 111, 112, 114, 120, 121, 126, 132, 133, 134, 140, 142, 143, 145, 146, 148, 152, 157, 158, 159, 160, 161, 162, 178, 179, 180, 182, 195, 199, 201, 206, 208, 212, 213, 216, 219, 220, 224, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 247, 254, 256, 259, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 282, 283, 284], "behavior": [3, 9, 24, 26, 33, 65, 66, 67, 145, 160, 167, 175, 191, 194, 219, 230, 247, 259, 269, 280], "actuat": [3, 4], "satur": [3, 4, 5, 205, 267, 281, 282, 283], "avoid": [3, 20, 159, 160, 202, 239, 247, 259, 273, 284], "shown": [3, 4, 22, 33, 130, 156, 159, 191, 194, 199, 201, 202, 209, 222, 267, 268, 269, 271, 281], "subclass": [3, 4, 11, 15, 19, 25, 164, 166, 247, 259], "matplotlib": [3, 4, 6, 7, 10, 33, 48, 71, 115, 130, 137, 138, 141, 155, 156, 159, 181, 184, 185, 186, 187, 191, 192, 194, 199, 201, 202, 209, 211, 222, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284], "pyplot": [3, 4, 6, 7, 10, 33, 48, 130, 141, 155, 156, 159, 191, 194, 199, 201, 209, 211, 222, 232, 234, 235, 236, 237, 239, 240, 241, 242, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284], "plt": [3, 4, 6, 7, 222, 232, 234, 235, 236, 237, 239, 240, 241, 242, 267, 268, 269, 270, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284], "math": [3, 4, 5, 6, 216, 268, 282, 283, 284], "develop": [3, 4, 231, 233, 244, 247, 256, 259], "mathemat": [3, 4], "start": [3, 4, 14, 25, 33, 37, 66, 81, 100, 159, 181, 182, 202, 222, 231, 236, 239, 240, 247, 259, 267, 269, 270, 272, 273, 284], "forc": [3, 4, 24, 33, 67, 130, 156, 159, 191, 194, 199, 201, 209, 222, 237, 239, 247, 259, 269, 270, 271, 272, 273, 281, 283], "balanc": [3, 4, 8, 31, 96, 231], "bodi": [3, 4], "let": [3, 4, 151, 234, 267, 271, 281], "v": [3, 4, 9, 50, 85, 89, 106, 120, 164, 165, 166, 169, 175, 202, 216, 228, 231, 232, 234, 235, 236, 239, 267, 271, 273, 281, 282, 283, 284], "total": [3, 4, 145, 219, 267, 283], "passeng": [3, 4], "f": [3, 4, 5, 7, 9, 12, 16, 19, 40, 47, 48, 49, 56, 60, 64, 68, 70, 113, 164, 166, 182, 196, 205, 216, 235, 236, 237, 239, 241, 242, 247, 259, 267, 273, 277, 278, 280, 281, 284], "contact": [3, 4, 281], "wheel": [3, 4, 9, 235, 236, 281, 282, 283], "f_d": 3, "due": [3, 4, 81, 191, 194, 239, 269, 270, 273], "graviti": [3, 4, 281], "friction": [3, 4, 6, 70], "aerodynam": [3, 4], "drag": [3, 4], "def": [3, 4, 6, 9, 157, 234, 235, 237, 239, 241, 242, 267, 268, 269, 273, 274, 280, 281, 282, 283, 284], "vehicle_upd": [3, 4, 235, 267, 281, 282, 283], "param": [3, 4, 6, 9, 15, 16, 18, 19, 22, 24, 40, 56, 60, 61, 63, 64, 65, 66, 67, 80, 81, 82, 88, 157, 181, 182, 184, 185, 186, 187, 216, 217, 234, 235, 236, 239, 241, 242, 267, 268, 269, 273, 280, 281, 282, 283], "gear": [3, 4], "road_slop": [3, 4], "float": [3, 4, 6, 13, 15, 16, 17, 18, 19, 20, 22, 26, 31, 32, 33, 45, 46, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 80, 85, 88, 92, 93, 94, 96, 98, 104, 110, 113, 114, 124, 125, 126, 139, 141, 142, 148, 152, 157, 158, 159, 160, 164, 166, 182, 189, 191, 194, 199, 201, 202, 203, 204, 208, 211, 212, 215, 216, 217, 223, 224, 228, 230, 247, 259, 280], "integ": [3, 4, 13, 15, 16, 17, 18, 19, 20, 22, 26, 29, 31, 40, 41, 42, 54, 55, 60, 61, 64, 68, 82, 88, 94, 95, 96, 98, 101, 110, 112, 113, 126, 129, 132, 133, 134, 139, 140, 142, 143, 145, 146, 154, 157, 159, 160, 162, 165, 167, 178, 179, 182, 203, 204, 206, 212, 213, 218, 219, 220, 230, 234, 269], "5": [3, 4, 6, 7, 13, 18, 22, 26, 33, 41, 46, 48, 51, 54, 55, 61, 68, 69, 89, 90, 94, 97, 98, 107, 110, 111, 112, 113, 114, 120, 121, 126, 135, 140, 142, 143, 145, 146, 148, 158, 188, 189, 196, 202, 204, 205, 206, 212, 213, 216, 219, 220, 224, 232, 234, 235, 236, 237, 239, 240, 241, 242, 247, 259, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284], "acceler": [3, 4, 281], "copysign": [3, 4, 6], "sin": [3, 4, 6, 9, 47, 157, 234, 235, 236, 239, 267, 268, 269, 270, 271, 273, 281, 282, 283], "sign": [3, 4, 13, 16, 18, 19, 22, 26, 37, 55, 60, 61, 76, 78, 100, 112, 202, 218, 232, 234, 241, 242], "lambda": [3, 4, 6, 47, 182, 234, 239, 269, 273, 281], "up": [3, 4, 7, 9, 57, 142, 163, 165, 192, 209, 212, 237, 239, 247, 259, 267, 268, 269, 272, 280, 282, 283, 284], "get": [3, 4, 9, 57, 58, 59, 62, 82, 157, 164, 166, 202, 216, 231, 234, 235, 236, 239, 267, 268, 272, 273, 274, 280, 281, 282, 283], "1600": [3, 4], "kg": [3, 4], "9": [3, 4, 6, 33, 67, 69, 97, 111, 114, 142, 143, 145, 146, 212, 213, 216, 219, 220, 226, 236, 239, 240, 267, 268, 269, 270, 271, 272, 273, 280, 281], "8": [3, 4, 6, 8, 13, 26, 29, 33, 48, 49, 69, 95, 97, 111, 114, 142, 143, 145, 146, 159, 210, 212, 213, 219, 220, 226, 235, 236, 239, 240, 241, 242, 254, 266, 267, 268, 269, 270, 271, 272, 273, 276, 280, 282, 283], "gravit": [3, 270, 271, 272], "cr": [3, 4, 54, 110], "01": [3, 4, 45, 92, 104, 124, 202, 232, 236, 240, 247, 259, 269, 274, 283], "coeffici": [3, 4, 9, 26, 57, 58, 59, 62, 63, 133, 145, 146, 147, 163, 178, 219, 220, 221, 271], "roll": [3, 4, 271, 272], "cd": [3, 4, 8, 271], "32": [3, 4, 16, 18, 38, 239, 273, 276], "rho": [3, 4, 268, 270, 271], "densiti": [3, 4, 267], "air": [3, 4], "area": [3, 4, 54, 79, 94, 110, 126, 237, 247, 259], "alpha": [3, 4, 9, 18, 22, 26, 31, 61, 96, 98, 189, 204, 281], "40": [3, 4, 45, 92, 104, 124, 235, 236, 239, 270, 271, 273, 279], "25": [3, 4, 26, 77, 117, 141, 211, 234, 237, 239, 247, 259, 268, 270, 271, 272, 273, 274, 276, 279, 281], "16": [3, 4, 94, 126, 239, 241, 242, 254, 266, 268, 271, 273, 281], "12": [3, 4, 133, 178, 196, 235, 236, 239, 241, 267, 268, 269, 271, 273, 282, 283], "ratio": [3, 4, 13, 17, 18, 22, 26, 43, 61, 102, 269, 281], "radiu": [3, 4, 159, 160, 181, 184, 185, 186, 187, 281], "clip": [3, 4, 239, 267, 281, 282, 283], "theta": [3, 4, 6, 9, 232, 235, 236, 239, 267, 269, 271, 273, 281, 282, 283], "int": [3, 4, 13, 15, 16, 17, 18, 19, 22, 24, 26, 32, 33, 38, 40, 41, 47, 57, 58, 59, 60, 61, 62, 63, 64, 69, 71, 72, 76, 78, 79, 80, 82, 88, 94, 98, 114, 115, 118, 119, 126, 130, 139, 141, 144, 156, 157, 158, 159, 160, 164, 165, 166, 167, 181, 185, 186, 191, 192, 194, 199, 201, 202, 203, 204, 209, 210, 211, 216, 217, 218, 222, 234, 280], "angular": [3, 4, 13, 17, 18, 22, 26, 61, 69, 114, 157], "motor_torqu": [3, 4], "fd": [3, 4], "three": [3, 4, 202, 234, 239, 273], "major": [3, 4, 247, 259], "fg": [3, 4], "fr": [3, 4, 281], "fa": [3, 4], "give": [3, 4, 13, 16, 19, 37, 60, 67, 68, 81, 97, 100, 113, 122, 141, 148, 158, 181, 182, 184, 185, 186, 187, 202, 211, 224, 234, 247, 259, 267, 269, 271, 281, 284], "sgn": [3, 4], "proport": [3, 4, 41, 202, 234], "squar": [3, 4, 35, 44, 50, 52, 77, 89, 91, 94, 99, 103, 106, 108, 117, 120, 123, 126, 241, 242, 267], "frontal": [3, 4], "ab": [3, 4, 6, 43, 54, 102, 110, 280, 284], "dv": [3, 4], "whose": [3, 4, 16, 60, 147, 159, 214, 221, 223], "torqu": [3, 4], "rate": [3, 4, 18, 22, 61, 67, 98, 204, 236, 267], "fuel": [3, 4], "inject": [3, 4, 275], "itself": [3, 4, 14, 25, 82], "posit": [3, 4, 9, 12, 15, 16, 19, 22, 26, 33, 54, 55, 60, 61, 64, 74, 94, 110, 112, 126, 133, 139, 142, 145, 157, 159, 160, 178, 203, 209, 212, 218, 219, 228, 230, 234, 235, 236, 239, 269, 270, 271, 272, 273, 281, 282, 283], "tm": [3, 4, 238, 245, 257], "190": [3, 4], "omega_m": [3, 4], "420": [3, 4], "peak": [3, 4, 216], "beta": [3, 4, 9], "rolloff": [3, 4], "curv": [3, 4, 5, 6, 9, 20, 48, 49, 59, 62, 148, 159, 160, 181, 224, 225, 269, 281, 283, 284], "typic": [3, 4, 37, 48, 60, 100, 234, 269, 281], "graph": [3, 4, 33, 137, 159, 160, 191, 194, 269], "left": [3, 4, 59, 62, 75, 116, 128, 130, 141, 153, 156, 159, 160, 183, 211, 222, 232, 234, 269, 280, 281], "show": [3, 4, 5, 6, 7, 12, 33, 130, 141, 156, 159, 191, 194, 199, 201, 209, 211, 217, 222, 234, 235, 237, 241, 242, 247, 259, 267, 268, 269, 270, 271, 272, 274, 275, 276, 279, 280, 281, 283], "while": [3, 4, 82, 167, 232, 247, 259, 267, 269, 271, 274, 283], "right": [3, 4, 16, 18, 19, 22, 26, 33, 56, 59, 60, 61, 62, 141, 159, 160, 191, 194, 199, 201, 209, 211, 222, 232, 234, 239, 243, 246, 255, 258, 267, 269, 270, 271, 273, 280, 281, 282, 284], "fig": [3, 4, 10, 192, 241, 242, 268, 269], "subplot": [3, 4, 10, 33, 71, 115, 192, 222, 234, 235, 236, 239, 240, 241, 242, 267, 268, 269, 270, 272, 274, 275, 281, 283], "figsiz": [3, 4, 232, 241, 242, 269, 281], "7": [3, 4, 6, 7, 8, 18, 22, 29, 33, 37, 55, 61, 69, 95, 97, 100, 111, 112, 114, 134, 140, 142, 143, 145, 146, 179, 206, 212, 213, 219, 220, 232, 234, 235, 236, 237, 239, 240, 241, 268, 269, 271, 272, 273, 276, 280, 282], "linspac": [3, 4, 6, 9, 48, 49, 54, 67, 94, 110, 122, 126, 157, 182, 234, 235, 239, 267, 269, 270, 271, 272, 273, 274, 275, 281, 282, 283, 284], "700": [3, 4], "701": [3, 4], "set_xlabel": [3, 4], "r": [3, 4, 7, 9, 35, 40, 41, 44, 50, 51, 54, 72, 82, 89, 90, 94, 99, 103, 106, 107, 110, 120, 121, 126, 174, 202, 218, 234, 236, 239, 240, 241, 242, 250, 262, 267, 269, 270, 271, 272, 273, 274, 280, 281, 282, 283, 284], "set_ylabel": [3, 4], "nm": [3, 4], "linestyl": [3, 4, 7, 141, 155, 159, 211, 222, 236, 237, 241, 242, 269, 281], "dot": [3, 4, 9, 85, 155, 159, 160, 232, 236, 239, 267, 269, 271, 273, 280, 281, 284], "70": [3, 4, 234], "71": [3, 4], "1f77b4": [3, 4], "solid": [3, 4, 281], "axi": [3, 4, 20, 33, 138, 141, 155, 159, 160, 163, 175, 180, 191, 194, 199, 201, 209, 211, 222, 235, 236, 239, 267, 269, 270, 271, 272, 273, 281, 282], "100": [3, 4, 9, 47, 54, 68, 94, 110, 113, 126, 141, 159, 160, 197, 207, 211, 232, 237, 239, 241, 242, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283], "200": [3, 4, 6, 268, 270, 271, 272, 275, 276], "11": [3, 4, 9, 133, 178, 239, 240, 267, 271, 272, 273, 275, 276, 280], "120": [3, 4, 133, 178, 268], "24": [3, 4, 133, 178, 236, 239, 273], "42": [3, 4, 69, 114, 239, 273, 277, 278, 281], "58": [3, 4], "185": [3, 4], "suptitl": [3, 4, 10, 235, 239, 267, 268, 269, 270, 283], "tight_layout": [3, 4, 235, 236, 239, 240, 267, 269, 270, 281, 283], "now": [3, 4, 138, 199, 200, 201, 234, 236, 239, 244, 247, 256, 259, 271, 272, 273, 274, 276], "angl": [3, 6, 9, 148, 224, 235, 236, 239, 267, 270, 271, 273, 281, 282, 283], "nonlineariosystem": [3, 4, 6, 16, 22, 41, 56, 60, 81, 140, 157, 167, 181, 184, 185, 186, 187, 206, 231, 236, 239, 267, 271, 273, 281, 282, 283], "name": [3, 4, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 33, 36, 37, 38, 40, 41, 48, 55, 60, 61, 64, 68, 81, 82, 88, 95, 98, 112, 113, 129, 130, 134, 139, 140, 142, 143, 145, 146, 154, 156, 157, 159, 164, 165, 166, 167, 179, 181, 182, 191, 194, 199, 201, 203, 204, 206, 207, 209, 212, 213, 218, 219, 220, 222, 230, 232, 237, 239, 241, 242, 243, 255, 267, 269, 280, 281, 282, 283], "cruise_plot": [3, 4], "t_hill": [3, 4], "vref": [3, 4, 282], "20": [3, 4, 45, 47, 92, 104, 124, 196, 216, 234, 239, 244, 256, 268, 271, 272, 273, 274, 275, 281, 282, 283], "linetyp": [3, 4], "out": [3, 4, 6, 9, 13, 14, 16, 18, 19, 22, 25, 26, 29, 33, 37, 38, 55, 60, 61, 82, 95, 100, 112, 129, 134, 140, 142, 143, 145, 146, 154, 159, 163, 164, 166, 167, 175, 179, 184, 185, 186, 187, 206, 212, 213, 219, 220, 230, 231, 234, 236, 239, 243, 246, 247, 255, 258, 259, 267, 269, 270, 272, 281], "bound": [3, 4, 5, 65, 66, 71, 72, 115, 130, 152, 156, 163, 165, 168, 170, 171, 172, 173, 175, 176, 177, 196, 205, 267], "indic": [3, 4, 5, 13, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 33, 40, 41, 54, 55, 56, 60, 61, 64, 65, 66, 69, 82, 85, 94, 110, 111, 112, 114, 126, 139, 142, 145, 159, 163, 165, 171, 173, 175, 177, 203, 212, 219, 230, 234, 247, 259, 269, 270, 281], "v_min": [3, 4], "v_max": [3, 4], "v_ind": [3, 4], "find_output": [3, 4, 13, 15, 16, 17, 18, 19, 22, 26, 60, 61, 273, 282], "u_min": [3, 4], "u_max": [3, 4], "els": [3, 4, 6, 33, 97, 141, 164, 166, 211, 234, 236, 237, 280, 282], "u_ind": [3, 4], "make": [3, 4, 13, 15, 16, 17, 18, 19, 22, 26, 47, 60, 61, 82, 83, 84, 163, 202, 231, 233, 235, 239, 247, 259, 267, 268, 270, 271, 272, 273, 281, 282, 283, 284], "sure": [3, 4, 13, 15, 16, 17, 18, 19, 22, 26, 47, 60, 61, 82, 83, 84, 202, 231, 247, 259, 268, 272, 283, 284], "upper": [3, 4, 5, 33, 65, 66, 130, 152, 156, 159, 160, 163, 165, 168, 170, 171, 172, 173, 175, 176, 177, 191, 194, 196, 205, 216, 267, 269, 273, 277, 281], "lower": [3, 4, 5, 13, 17, 18, 22, 26, 61, 65, 66, 69, 114, 163, 165, 168, 171, 173, 175, 177, 183, 196, 205, 216, 267, 269, 270, 271], "ok": [3, 4, 131, 159, 160, 210], "max": [3, 4, 42, 101, 132, 162, 267, 281, 282, 283], "min": [3, 4, 283], "subplot_ax": [3, 4], "profil": [3, 4], "sca": [3, 4, 281], "ones": [3, 4, 94, 126, 240, 281, 282, 283], "k": [3, 4, 7, 28, 30, 37, 40, 41, 51, 54, 57, 59, 62, 76, 78, 90, 94, 100, 105, 107, 110, 121, 126, 135, 138, 141, 142, 151, 164, 166, 184, 188, 189, 199, 200, 201, 211, 212, 216, 230, 232, 234, 236, 237, 239, 240, 241, 242, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284], "axvlin": [3, 4], "xlabel": [3, 4, 6, 235, 236, 239, 267, 269, 270, 271, 272, 273, 274, 275, 280, 281, 282, 283, 284], "ylabel": [3, 4, 6, 235, 236, 239, 267, 269, 270, 271, 272, 273, 274, 275, 281, 282, 283, 284], "frameon": [3, 4, 239, 273, 282], "around": [3, 4, 13, 17, 18, 22, 26, 61, 159, 160, 181, 183, 184, 185, 186, 187, 234, 269, 270, 271, 272, 273, 281], "equilibrium": [3, 4, 56, 88, 181, 184, 217, 234, 269, 270, 271, 281], "x_d": [3, 4, 41, 271], "u_d": [3, 4, 41, 271], "feedforward": [3, 4, 73, 85, 141, 202, 211, 234, 241, 242, 282], "z": [3, 4, 6, 9, 18, 22, 23, 26, 27, 33, 34, 61, 69, 76, 78, 105, 111, 114, 141, 145, 151, 152, 158, 159, 160, 161, 195, 202, 208, 211, 219, 234, 245, 257, 267, 271, 272], "error": [3, 4, 41, 50, 51, 66, 81, 82, 89, 90, 106, 107, 120, 121, 165, 166, 216, 232, 233, 234, 235, 236, 239, 240, 267, 268, 270, 273, 281, 282, 283], "structur": [3, 4, 10, 15, 18, 66, 145, 219, 269], "clear": [3, 4, 14, 25, 164, 166, 272], "implement": [3, 4, 9, 15, 16, 18, 19, 40, 41, 58, 60, 65, 66, 79, 89, 120, 135, 163, 164, 165, 166, 167, 188, 189, 191, 194, 218, 223, 231, 233, 234, 239, 240, 247, 254, 259, 266, 267, 269, 271, 273, 280, 282, 284], "even": [3, 4, 13, 16, 17, 18, 19, 22, 23, 24, 26, 27, 60, 61, 63, 67, 69, 79, 80, 81, 111, 114, 142, 145, 163, 165, 175, 212, 217, 219, 234, 243, 247, 255, 259, 269], "though": [3, 4, 10, 175, 236, 275], "actual": [3, 4, 236, 239, 247, 254, 259, 266, 267, 272, 281], "gain": [3, 4, 5, 6, 8, 13, 17, 18, 21, 22, 26, 28, 33, 35, 41, 44, 45, 46, 50, 51, 61, 73, 74, 82, 89, 90, 93, 97, 99, 103, 104, 105, 106, 107, 120, 121, 125, 135, 138, 141, 155, 159, 160, 180, 188, 189, 191, 194, 199, 200, 201, 202, 209, 211, 215, 225, 227, 230, 231, 234, 236, 239, 241, 242, 269, 272, 273, 274, 280, 281], "6": [3, 4, 6, 7, 9, 33, 69, 89, 97, 111, 114, 120, 133, 142, 143, 145, 146, 148, 178, 210, 212, 213, 216, 219, 220, 224, 232, 234, 235, 236, 237, 239, 240, 242, 254, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 280, 283, 284], "sf_updat": [3, 4], "sf_output": [3, 4], "ki": [3, 4, 202], "kf": [3, 4, 234, 236, 273, 281], "xd": [3, 4, 9, 41, 235, 236, 239, 240, 270, 271, 273, 282], "yd": [3, 4, 63, 232, 240, 270, 282], "ud": [3, 4, 9, 41, 63, 235, 236, 239, 240, 273, 280], "control_sf": [3, 4], "close": [3, 4, 6, 12, 20, 35, 40, 41, 44, 48, 49, 51, 78, 90, 99, 103, 107, 121, 135, 138, 141, 151, 155, 188, 199, 200, 201, 202, 211, 234, 235, 239, 241, 242, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282], "loop": [3, 4, 6, 12, 20, 35, 40, 41, 44, 48, 49, 51, 78, 90, 93, 99, 103, 107, 121, 125, 135, 138, 141, 155, 188, 196, 199, 200, 201, 202, 211, 215, 234, 235, 239, 240, 241, 242, 247, 259, 267, 269, 270, 272, 273, 274, 275, 277, 278, 281, 282], "cruise_sf": [3, 4], "interconnectedsystem": [3, 4, 18, 38, 82, 231, 239, 240, 282], "connect": [3, 4, 5, 16, 18, 22, 26, 38, 61, 82, 134, 140, 141, 179, 206, 211, 241, 242, 246, 258, 280, 282], "inplist": [3, 4, 16, 76, 78, 82, 232, 234, 239, 241, 242, 273, 282], "outlist": [3, 4, 16, 76, 78, 82, 232, 234, 239, 241, 242, 273, 282], "501": 3, "theta0": [3, 4], "find": [3, 9, 13, 15, 16, 17, 18, 19, 22, 26, 56, 60, 61, 65, 66, 138, 199, 200, 201, 234, 235, 236, 239, 247, 259, 267, 269, 273, 281, 282], "xeq": [3, 56, 88, 234], "ueq": [3, 56, 88, 234], "find_eqpt": [3, 4, 234, 239, 273], "y0": [3, 4, 56, 239], "iu": [3, 4, 56, 239, 273], "print": [3, 6, 16, 18, 22, 26, 38, 43, 82, 102, 127, 145, 150, 158, 165, 175, 202, 216, 219, 230, 234, 236, 239, 240, 241, 242, 247, 259, 269, 272, 273, 274, 277, 278, 281, 283, 284], "eq": [3, 4, 277], "pt": [3, 4], "cruise_linear": [3, 4], "16874874": 3, "linalg": [3, 4, 42, 101, 132, 162, 234, 236, 239, 240, 273, 274], "inv": [3, 4, 234, 236, 239, 240, 273], "steadi": [3, 4, 40, 105, 216, 240, 270], "term": [3, 4, 9, 18, 22, 40, 41, 61, 82, 139, 202, 203, 218, 233, 236, 267, 269, 271, 281], "theta_hil": [3, 4], "180": [3, 4, 33, 93, 125, 215, 239, 272, 273], "y_sfb": 3, "y_sfb_int": 3, "line": [3, 9, 10, 33, 48, 49, 71, 72, 115, 130, 155, 156, 159, 160, 181, 182, 186, 191, 194, 199, 201, 209, 222, 225, 235, 236, 247, 259, 267, 268, 269, 272, 281, 282, 283, 284], "mline": 3, "p_line": 3, "line2d": [3, 10, 33, 48, 71, 115, 130, 155, 156, 159, 181, 184, 185, 186, 191, 194, 199, 201, 209, 222], "blue": [3, 267, 269], "pi_lin": 3, "w": [3, 13, 30, 50, 76, 78, 89, 94, 97, 106, 120, 126, 151, 165, 169, 196, 232, 234, 239, 247, 259, 267, 269, 272, 273, 274, 283], "loc": [3, 241, 242, 270, 271, 273, 281, 282], "transfer": [3, 4, 5, 6, 13, 18, 20, 22, 26, 27, 48, 49, 61, 71, 72, 93, 105, 111, 115, 125, 127, 138, 142, 143, 145, 146, 147, 150, 159, 160, 202, 212, 213, 215, 219, 220, 221, 230, 269, 270, 271, 272, 276], "necessarili": [3, 267], "good": [3, 54, 110, 236, 243, 255, 267, 269], "choos": [3, 7, 54, 59, 110, 202, 234, 237, 267, 271, 281], "k_": [3, 234, 241, 242], "ak_": 3, "It": [3, 9, 10, 11, 13, 15, 17, 18, 19, 21, 22, 24, 25, 40, 41, 54, 55, 61, 64, 70, 82, 94, 110, 112, 126, 135, 141, 157, 163, 188, 196, 202, 205, 211, 234, 236, 267, 269, 270, 271, 272, 282, 283], "g_": 3, "yr": [3, 276], "simpli": [3, 231, 233], "matter": [3, 267], "kp": [3, 4, 202], "real": [3, 6, 13, 18, 22, 26, 31, 32, 34, 43, 61, 96, 102, 127, 131, 139, 150, 161, 180, 189, 195, 203, 269, 272, 281, 282], "control_pz": 3, "pzcancel": 3, "sfb_int": 3, "cruise_pz": 3, "u0": [3, 4, 9, 16, 18, 19, 22, 56, 60, 61, 65, 66, 174, 234, 235, 236, 239, 240, 267, 273, 281, 283], "ii": [3, 4, 56, 239, 273], "y_pzcancel": 3, "010124405669387215": 3, "0j": 3, "3203061238159202": 3, "005062202834693608": 3, "5148002148317266": 3, "src": [3, 239], "murrayrm": [3, 239], "py": [3, 4, 6, 7, 235, 236, 237, 239, 241, 242, 247, 259, 268, 271, 272, 274, 275, 279, 282, 283], "1109": 3, "complexwarn": [3, 6], "cast": [3, 6], "complex": [3, 6, 11, 12, 13, 18, 20, 22, 23, 26, 27, 47, 61, 68, 70, 111, 113, 196, 205, 234, 267, 269], "discard": [3, 6, 18, 22, 26, 61], "imaginari": [3, 6, 13, 18, 20, 22, 26, 32, 61, 131, 159, 160, 191, 194, 199, 201, 269], "maxindex": 3, "len": [3, 18, 22, 26, 47, 61, 67, 94, 126, 131, 164, 166, 175, 182, 209, 237, 241, 242, 280, 282], "numpoli": 3, "compar": [3, 4, 65, 66, 82, 163, 165, 175, 234, 236, 239, 267, 269, 273, 280, 281, 282, 284], "textbook": [3, 4, 8, 233], "simul": [3, 4, 6, 8, 24, 60, 67, 79, 80, 81, 118, 119, 122, 144, 164, 166, 181, 182, 185, 186, 216, 217, 222, 231, 234, 235, 239, 240, 241, 242, 267, 268, 269, 270, 281, 282, 283], "done": [3, 4, 5, 9, 30, 31, 82, 96, 163, 165, 202, 234, 236, 247, 259, 267, 269], "lti": [3, 4, 13, 18, 22, 26, 29, 30, 33, 37, 43, 46, 48, 49, 51, 54, 61, 67, 68, 69, 71, 72, 73, 74, 76, 78, 80, 85, 86, 87, 89, 90, 93, 95, 97, 98, 100, 102, 105, 107, 110, 111, 113, 114, 115, 118, 119, 120, 121, 122, 125, 130, 131, 137, 138, 141, 144, 145, 146, 147, 151, 156, 158, 159, 160, 180, 190, 191, 194, 199, 200, 201, 202, 204, 209, 210, 211, 214, 215, 216, 219, 220, 221, 231, 234, 269, 274], "here": [3, 4, 18, 22, 61, 142, 212, 233, 236, 239, 247, 259, 267, 268, 271, 280, 283], "characterist": [3, 127, 150, 216, 269, 281], "polynomi": [3, 9, 26, 57, 59, 62, 133, 145, 146, 178, 215, 219, 220, 230, 281], "zeta": [3, 13, 17, 18, 22, 26, 43, 61, 102], "omega_0": 3, "want": [3, 10, 135, 175, 188, 202, 233, 234, 247, 259, 270, 271, 272, 274, 280, 281, 282, 284], "track": [3, 22, 271, 275, 281, 282], "101": [3, 4, 274, 275], "fix": [3, 56, 163, 239, 267, 273, 282, 284], "vari": [3, 50, 56, 88, 89, 106, 120, 199, 200, 201, 202, 284], "w0": 3, "o": [3, 6, 7, 8, 12, 13, 15, 16, 17, 18, 19, 22, 24, 26, 29, 37, 40, 41, 48, 55, 56, 60, 61, 64, 67, 75, 79, 80, 81, 82, 83, 84, 86, 89, 95, 100, 112, 116, 120, 129, 132, 134, 140, 142, 154, 159, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 184, 185, 186, 187, 202, 206, 212, 216, 217, 232, 234, 235, 237, 240, 241, 242, 247, 259, 269, 270, 272, 274, 275, 276, 279, 281, 283], "control_tf": [3, 4], "cruise_tf": [3, 4], "nomin": [3, 4, 174, 234, 239, 273, 281, 282], "remain": [3, 13, 18, 22, 23, 26, 27, 61, 65, 66, 111, 165, 175, 181, 184, 185, 186, 187, 234, 268], "analys": 3, "linecolor": 3, "red": [3, 267, 268, 269], "green": [3, 245, 257, 269], "enumer": [3, 24, 236, 240], "1200": [3, 4], "2000": [3, 4], "append": [3, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 37, 41, 55, 60, 61, 100, 112, 129, 134, 140, 154, 179, 206, 237, 268, 274], "complic": [3, 6, 233, 234, 272], "13": [3, 239, 240, 241, 271, 273], "pi_upd": [3, 4], "kaw": [3, 4], "readabl": [3, 4], "u_a": [3, 4], "pi_output": [3, 4], "scale": [3, 4, 54, 94, 110, 126, 159, 160, 182, 191, 192, 194, 228, 269, 274, 275, 281, 282], "account": [3, 4, 8, 79, 247, 259, 281], "u_aw": [3, 4], "minu": [3, 4, 234], "control_pi": [3, 4], "cruise_pi": [3, 4], "3b": [3, 4], "steep": [3, 4], "almost": [3, 4], "largest": [3, 4, 73, 74], "less": [3, 4, 94, 126, 139, 189, 203, 239, 267, 270, 273, 281, 283], "recov": [3, 4, 33], "after": [3, 4, 22, 41, 82, 216, 269], "14": [3, 239, 240, 241, 242, 270, 271, 273], "return_i": [3, 4, 56], "occur": [3, 4, 6, 82, 280], "circ": 3, "15": [3, 202, 234, 239, 269, 271, 273, 276, 281], "50": [3, 6, 182, 234, 237, 271, 272], "improv": [3, 4, 9, 247, 259, 281], "becaus": [3, 4, 5, 16, 18, 22, 38, 61, 271, 280, 284], "quickli": [3, 4, 247, 259, 267, 283], "reset": [3, 4, 33, 191, 194, 197, 198, 199, 201, 283], "fb": [4, 8, 225, 268, 281], "rmm": [4, 235, 236, 240, 268, 270, 272, 273, 279, 282, 283], "mai": [4, 5, 10, 13, 17, 18, 22, 24, 26, 27, 37, 48, 61, 69, 80, 82, 97, 100, 114, 118, 119, 144, 146, 158, 189, 191, 194, 199, 201, 202, 220, 234, 243, 244, 247, 255, 256, 259, 267, 279, 280, 282, 284], "compens": [4, 41, 231, 271, 272], "file": [4, 163, 167, 233, 234, 236, 244, 246, 247, 256, 258, 259, 268, 270, 271, 272, 282, 283], "vehicl": [4, 8, 9, 234, 236, 267, 271], "pi": [4, 6, 33, 148, 159, 160, 224, 239, 241, 242, 268, 269, 270, 271, 272, 273, 281, 282], "state": [4, 7, 9, 11, 13, 15, 16, 17, 18, 19, 22, 24, 26, 28, 29, 31, 34, 40, 41, 48, 49, 50, 51, 53, 55, 56, 60, 61, 63, 64, 65, 66, 67, 70, 76, 77, 78, 79, 80, 81, 82, 88, 89, 90, 95, 96, 98, 105, 106, 107, 109, 112, 117, 120, 121, 122, 127, 128, 129, 134, 135, 139, 140, 142, 143, 146, 150, 152, 153, 154, 157, 161, 163, 164, 165, 166, 167, 169, 171, 173, 174, 175, 176, 177, 179, 182, 185, 186, 187, 188, 195, 203, 204, 206, 208, 212, 213, 214, 216, 217, 218, 220, 230, 231, 232, 235, 236, 240, 241, 242, 267, 268, 269, 270, 276, 277, 278, 280, 281, 282, 283], "space": [4, 7, 9, 18, 22, 24, 29, 40, 48, 49, 53, 61, 64, 67, 76, 77, 78, 81, 95, 105, 109, 117, 122, 127, 139, 142, 143, 146, 150, 159, 182, 185, 186, 187, 203, 208, 212, 213, 214, 220, 228, 231, 232, 234, 236, 241, 242, 267, 269, 270, 271, 276, 277, 278, 280, 283], "mass": [4, 8, 237, 270, 271, 272, 279, 281], "paramet": [4, 8, 9, 10, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 234, 235, 236, 241, 242, 248, 260, 267, 268, 269, 270, 271, 272, 279, 281, 282, 283], "engin": [4, 254, 266, 275], "hill": 4, "respons": [4, 5, 7, 8, 12, 13, 17, 18, 20, 21, 22, 23, 24, 26, 27, 33, 36, 48, 49, 54, 61, 63, 67, 68, 69, 71, 72, 79, 80, 81, 93, 94, 97, 110, 111, 113, 114, 115, 118, 119, 122, 125, 126, 127, 130, 131, 141, 144, 150, 156, 157, 159, 160, 191, 194, 199, 201, 202, 209, 210, 211, 216, 217, 222, 231, 232, 234, 237, 239, 241, 242, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282], "vel_ax": 4, "inp_ax": 4, "3000": 4, "block": [4, 32, 152, 231, 234, 253, 265, 268, 271, 277, 278, 279, 281, 282, 283], "regul": [4, 41, 51, 90, 107, 121, 234, 240, 271], "shall": [4, 243, 246, 255, 258], "anti": 4, "windup": 4, "antiwindup": 4, "todo": [4, 235, 239, 270], "30": [4, 6, 234, 239, 273, 281], "solv": [4, 9, 35, 44, 52, 56, 66, 77, 91, 99, 103, 108, 117, 123, 163, 164, 165, 166, 235, 267, 281, 283], "control_sf_ia": 4, "identifi": [4, 82, 247, 259, 267, 269], "requir": [4, 9, 10, 18, 33, 60, 65, 66, 140, 163, 165, 202, 206, 216, 217, 233, 234, 244, 247, 256, 259, 267, 269, 270, 271, 272], "steeper": 4, "protect": 4, "run": [4, 40, 182, 202, 231, 233, 234, 235, 236, 239, 244, 256, 267, 270, 271, 272, 273, 281, 283, 284], "standalon": 4, "program": 4, "wait": 4, "befor": [4, 14, 25, 67, 69, 114, 267, 272, 280], "__name__": [4, 274], "__main__": [4, 274], "pycontrol_test_exampl": [4, 7, 235, 237, 241, 242, 268, 270, 272, 274, 275, 276, 277, 278, 279, 283], "environ": [4, 7, 8, 233, 235, 237, 241, 242, 268, 270, 272, 274, 275, 276, 277, 278, 279, 283], "test": [4, 7, 231, 235, 237, 239, 241, 242, 244, 247, 256, 259, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283], "off": [4, 7, 26, 27, 33, 40, 48, 49, 159, 160, 191, 194, 196, 235, 236, 237, 239, 241, 242, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279], "system": [5, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 229, 230, 233, 237, 240, 241, 242, 267, 268, 269, 270, 272, 274, 276, 277, 278, 283, 284], "consist": [5, 6, 10, 16, 18, 22, 24, 25, 29, 48, 49, 58, 61, 65, 66, 95, 142, 143, 159, 163, 165, 168, 170, 171, 172, 173, 175, 176, 177, 212, 213, 234, 247, 259, 267, 270, 271, 280, 282, 284], "static": [5, 12, 16, 19, 47, 48, 49, 60, 215, 218, 234, 282, 284], "possibl": [5, 6, 15, 19, 41, 61, 64, 82, 141, 157, 163, 202, 211, 215, 234, 243, 247, 255, 259, 269, 281], "obtain": [5, 6, 12, 13, 16, 18, 20, 33, 68, 113, 160, 233, 234, 236, 246, 258, 267, 269], "nyquist": [5, 6, 12, 20, 48, 49, 159, 160, 180, 215, 225, 231, 269, 271, 272, 279, 281], "stabil": [5, 20, 31, 35, 44, 76, 78, 96, 99, 103, 215, 231, 234, 267, 272, 281], "criterion": [5, 159, 160], "idea": [5, 247, 259, 267], "basic": [5, 47, 231, 234, 267, 269, 270, 272], "concept": 5, "involv": [5, 247, 259, 269, 270], "approxim": [5, 6, 18, 22, 26, 32, 61, 133, 175, 178, 228, 236, 274, 280, 281], "mathbb": [5, 267, 284], "amplitud": [5, 6, 11, 12, 47, 48, 49, 70, 196, 205], "associ": [5, 12, 32, 49, 63, 93, 125, 164, 166, 202, 215, 246, 258, 269], "analysi": [5, 8, 12, 20, 49, 70, 196, 205, 231, 233, 269, 270, 271, 272, 274], "h": [5, 6, 12, 48, 49, 77, 94, 117, 126, 151, 230, 234, 237, 267, 271, 274, 275], "look": [5, 6, 10, 22, 69, 114, 269, 270, 271, 284], "intersect": [5, 6, 12, 48, 49, 180], "exist": [5, 9, 13, 155, 222], "cycl": [5, 12, 49, 268, 269], "higher": [5, 6, 271, 274, 283], "harmon": [5, 47], "neglect": 5, "describing_funct": [5, 6, 11, 70, 196, 205], "determin": [5, 9, 15, 16, 18, 19, 22, 26, 33, 41, 48, 60, 61, 64, 67, 82, 88, 98, 157, 159, 165, 204, 215, 222, 223, 269, 271, 281, 282], "neg": [5, 13, 16, 17, 18, 19, 22, 26, 37, 55, 60, 61, 73, 100, 112, 129, 139, 141, 154, 159, 160, 165, 180, 203, 205, 211, 234], "reciproc": [5, 78, 151], "describing_function_respons": [5, 12, 48], "amp_rang": [5, 6], "omega_rang": 5, "describing_function_plot": [5, 6, 12], "facilit": 5, "predefin": 5, "friction_backlash_nonlinear": [5, 6], "backlash": [5, 70], "width": [5, 16, 18, 38, 159, 191, 194, 196], "relay_hysteresis_nonlinear": 5, "relai": [5, 196], "hysteresi": [5, 196], "half": [5, 75, 116, 128, 153, 281], "saturation_nonlinear": [5, 6, 48, 49], "ub": [5, 65, 66, 163, 165, 168, 171, 173, 175, 177, 205, 267], "lb": [5, 65, 66, 163, 165, 168, 171, 173, 175, 177, 205, 267], "describingfunctionnonlinear": [5, 47, 70, 196, 205], "analyt": [5, 11, 70, 196, 205, 284], "descript": [5, 9, 13, 15, 16, 17, 18, 19, 21, 22, 24, 26, 47, 60, 61, 64, 65, 66, 75, 82, 88, 98, 116, 139, 157, 163, 165, 203, 204, 218, 234], "27": [6, 31, 96, 216, 239, 273, 281], "jan": [6, 270], "2021": [6, 240, 283], "jupyt": [6, 22, 202, 231, 267], "descfcn": 6, "brief": 6, "introduct": [6, 231], "notion": 6, "toobox": 6, "level": [6, 69, 82, 114, 283], "75": [6, 210, 273, 281], "sat": 6, "map": [6, 9, 16, 18, 21, 33, 43, 56, 82, 102, 137, 151, 159, 160, 190, 191, 194, 199, 200, 201, 234, 236, 269, 275], "anaconda3": 6, "env": [6, 276], "python3": 6, "slycot": [6, 18, 22, 31, 35, 44, 50, 51, 52, 61, 75, 76, 78, 89, 90, 91, 96, 99, 103, 106, 107, 108, 116, 120, 121, 123, 142, 146, 158, 189, 212, 220, 233], "lib": 6, "site": 6, "cbook": 6, "__init__": [6, 10, 12, 13, 14, 20, 21, 24, 25, 239, 240], "1298": 6, "asarrai": 6, "domin": [6, 70], "size": [6, 22, 32, 40, 41, 79, 130, 142, 143, 156, 159, 164, 165, 166, 168, 181, 182, 184, 185, 186, 187, 191, 194, 209, 212, 213, 222, 234, 236, 239, 268, 270, 283], "region": [6, 196, 215, 272], "n_a": 6, "pre": [6, 16, 19, 60, 231], "nonlineari": 6, "suitabl": [6, 30, 70, 196, 205, 244, 256, 267, 280], "numer": [6, 18, 22, 26, 47, 61, 81, 133, 145, 146, 147, 178, 215, 219, 220, 221, 232, 247, 259, 280], "my_satur": 6, "assess": 6, "consid": [6, 9, 16, 18, 82, 215, 216, 234, 236, 247, 259, 267, 269, 273, 281], "h_simpl": [6, 48, 49], "logspac": [6, 47, 210, 269, 272, 274, 275, 279, 281], "500": [6, 234, 235, 268, 269, 281], "f_satur": [6, 48, 49], "amp": [6, 48, 49], "00": [6, 236, 239, 273], "freq": [6, 97, 274, 275], "343977839541308": 6, "4142156916816762": 6, "what": [6, 234, 236, 247, 259, 267, 283, 284], "happen": [6, 236, 268, 283], "io_satur": 6, "demonstr": [6, 7, 8, 85, 235, 237, 241, 242, 270, 271, 272, 274, 275, 277, 278, 279, 282, 283], "interact": [6, 191, 194, 202, 269], "h_multipl": 6, "pade": 6, "f_backlash": 6, "mirror_styl": [6, 159, 160], "6260158833534124": 6, "3102619497970334": 6, "8741930326860968": 6, "2156410944770426": 6, "era_msd": 7, "johann": [7, 237, 241, 242], "kaising": [7, 237, 241, 242], "juli": [7, 237, 241, 242, 277, 278], "2024": [7, 237, 268], "estim": [7, 8, 40, 41, 49, 50, 54, 78, 89, 94, 106, 110, 120, 126, 151, 165, 166, 168, 169, 231, 234, 270, 271, 272, 273, 281], "impuls": [7, 24, 54, 79, 94, 110, 119, 122, 126, 144, 202, 216, 231, 237, 276, 284], "simo": [7, 237], "miso": [7, 24, 135, 188, 237], "case": [7, 41, 67, 79, 82, 85, 94, 97, 126, 158, 163, 164, 165, 166, 192, 217, 234, 237, 239, 247, 259, 267, 268, 269, 271, 280, 282], "2dof": [7, 237], "mechan": [7, 70, 234, 237], "vibrat": [7, 237], "theori": [7, 94, 126, 237, 243, 255], "applic": [7, 8, 237], "si": [7, 237, 272], "edit": [7, 18, 22, 61, 237, 241, 242, 274, 275], "1st": [7, 69, 114, 145, 219, 237, 274, 275], "ed": [7, 133, 178, 237], "q_dd": [7, 237], "q_d": [7, 237], "q": [7, 9, 35, 37, 40, 41, 44, 50, 51, 52, 58, 89, 90, 91, 99, 100, 103, 106, 107, 108, 120, 121, 123, 174, 228, 237, 240, 267, 282, 283, 284], "m1": [7, 237], "k1": [7, 30, 151, 237, 274, 275], "c1": [7, 237, 269, 277, 278, 281], "m2": [7, 237], "k2": [7, 30, 151, 237, 270, 274, 275], "c2": [7, 237, 269, 277, 278, 281], "k3": [7, 30, 151, 237, 270], "c3": [7, 237], "xixo_list": [7, 237], "xixo": [7, 237], "match": [7, 9, 10, 13, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 33, 40, 41, 51, 54, 56, 57, 60, 61, 68, 81, 82, 90, 94, 98, 107, 110, 111, 113, 121, 126, 130, 134, 140, 156, 163, 165, 174, 179, 204, 206, 209, 222, 234, 237, 267, 269, 275, 284], "sysd": [7, 18, 22, 26, 54, 61, 98, 110, 204, 237, 269], "zoh": [7, 18, 22, 26, 61, 98, 204, 237, 280], "sysd_est": 7, "_": [7, 40, 41, 54, 110, 236, 239, 267, 273, 274, 275, 282], "eigensys_r": [7, 110], "step_tru": 7, "sysnam": [7, 13, 20, 21, 24, 82, 234, 237], "h_true": [7, 237], "step_est": 7, "h_est": [7, 237], "orang": [7, 237, 269], "dash": [7, 225, 237, 281], "sourc": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 243, 244, 254, 255, 256, 266, 268], "subdirectori": 8, "distribut": [8, 233, 239, 243, 244, 246, 255, 256, 258], "onlin": [8, 240], "github": [8, 231, 254, 266], "repositori": [8, 231], "drawn": [8, 10, 181, 184, 185, 186, 187, 235], "secord": 8, "inner": [8, 82, 268], "outer": [8, 236, 239, 268, 273, 283], "vertic": [8, 41, 222, 267, 273], "takeoff": [8, 273], "land": [8, 85, 273], "aircraft": [8, 273], "lqr": [8, 40, 41, 50, 51, 89, 106, 107, 120, 231, 234, 239, 282], "reduct": [8, 128, 153, 231], "robust": [8, 20, 135, 188, 189, 277], "sp96": 8, "h2": [8, 76, 158, 231, 272, 273], "synthesi": [8, 76, 78, 151, 231], "scherer": 8, "et": 8, "al": 8, "1997": 8, "hinf": [8, 78, 231], "cruis": 8, "schedul": [8, 41, 234], "steeer": [8, 234], "steer": [8, 9, 234, 235, 236, 267, 282], "lane": [8, 9, 235, 236, 267, 281], "kinemat": 8, "adapt": 8, "mrac": 8, "direct": [8, 18, 22, 61, 67, 139, 159, 160, 181, 186, 203, 218, 243, 255, 269, 271, 281], "mit": 8, "rule": [8, 244, 254, 256, 266, 269], "lyapunov": [8, 52, 77, 91, 108, 117, 123, 277], "makrov": 8, "era": [8, 54], "spring": [8, 237, 279], "damper": [8, 237], "tool": [8, 231, 254, 266, 269], "obc": [8, 235, 240, 267, 283], "cours": [8, 269, 280, 282, 283], "tutori": 8, "discret": [8, 13, 15, 16, 17, 18, 19, 22, 23, 26, 27, 31, 32, 33, 40, 43, 44, 50, 51, 52, 53, 54, 56, 60, 61, 64, 67, 79, 80, 81, 82, 84, 89, 90, 94, 96, 98, 102, 103, 106, 107, 108, 109, 110, 111, 120, 121, 122, 126, 134, 139, 140, 142, 145, 157, 158, 159, 160, 163, 175, 179, 189, 191, 194, 199, 201, 202, 203, 204, 206, 212, 215, 216, 217, 219, 228, 230, 232, 234, 239, 240, 267, 269, 280], "sensor": [8, 50, 89, 106, 120, 169, 239, 273], "fusion": 8, "move": [8, 17, 165, 202, 247, 259, 267, 271, 274, 281, 282], "horizon": [8, 42, 65, 66, 101, 132, 162, 163, 165, 167, 175, 240, 267, 283], "predict": [8, 40, 167, 236, 267], "extend": [8, 14, 25, 247, 259, 267], "kalman": [8, 50, 89, 94, 106, 120, 126, 231, 236, 271], "filter": [8, 50, 89, 94, 106, 120, 126, 231, 236, 240, 271, 284], "stochast": [8, 231, 267], "execut": [8, 33, 159, 209, 271], "through": [8, 24, 82, 233, 234, 236, 269, 270, 271, 272, 274, 282, 283, 284], "web": [8, 254, 266], "browser": 8, "caltech": [8, 271], "110": [8, 281], "you": [8, 18, 22, 69, 82, 114, 135, 175, 188, 202, 231, 233, 234, 236, 244, 247, 256, 259, 267, 275, 280], "colaboratori": 8, "sub": [9, 82], "trajectori": [9, 41, 54, 58, 60, 63, 65, 66, 81, 110, 163, 164, 165, 166, 167, 168, 170, 172, 175, 176, 181, 185, 186, 187, 235, 236, 239, 267, 282, 283], "flatsystem": [9, 61, 63, 64, 65, 66, 235, 236, 239, 281], "coordin": [9, 10, 34, 60, 64, 152, 159, 161, 182, 195, 208, 235, 269, 271, 281], "point_to_point": [9, 63, 235, 236, 281], "endpoint": [9, 235, 236, 267, 281, 283], "written": [9, 243, 245, 255, 257, 270, 271], "basi": [9, 57, 58, 59, 62, 63, 65, 66, 163, 175, 235, 236, 267, 283, 284], "basisfamili": [9, 57, 59, 62, 63, 65, 66, 163, 175], "systemtrajectori": [9, 65, 66], "eval": [9, 13, 57, 58, 59, 62, 63, 65, 66, 235, 236, 281], "altern": [9, 18, 22, 37, 61, 146, 220, 233, 234, 247, 259, 267, 269, 282], "solve_flat_ocp": [9, 235], "problem": [9, 30, 66, 94, 126, 163, 164, 165, 166, 168, 169, 174, 175, 231, 233, 235, 239, 240, 247, 259, 270, 281, 283], "cost": [9, 51, 65, 66, 90, 107, 121, 163, 164, 165, 166, 167, 169, 174, 175, 235, 239, 240, 267, 271, 283], "constraint": [9, 65, 66, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 235, 239, 240, 267, 281, 283], "equat": [9, 16, 19, 35, 44, 50, 51, 52, 56, 60, 77, 78, 89, 90, 91, 94, 99, 103, 106, 107, 108, 117, 120, 121, 123, 126, 142, 143, 212, 213, 231, 234, 267, 270, 271, 277, 281], "qquad": [9, 236, 267, 271, 284], "write": [9, 247, 259, 267, 271, 274], "solut": [9, 35, 44, 50, 51, 52, 66, 89, 90, 91, 99, 103, 106, 107, 108, 120, 121, 123, 164, 166, 175, 235, 239, 267, 269, 273, 283], "finit": [9, 163, 165, 167, 267], "deriv": [9, 16, 18, 19, 22, 57, 58, 59, 60, 61, 62, 63, 182, 202, 235, 239, 243, 255, 267, 268, 271, 273, 281, 282, 283], "gamma": [9, 151, 241, 242, 274, 278], "feasibl": [9, 65, 66, 267], "alwai": [9, 69, 82, 114, 139, 142, 143, 145, 175, 203, 212, 213, 219, 223, 247, 259], "situat": [9, 234, 267], "sinc": [9, 16, 37, 67, 81, 82, 87, 159, 160, 182, 234, 267, 269, 281], "plan": 9, "suppos": [9, 202, 234, 267], "wish": [9, 247, 259, 267], "x_0": [9, 281], "x_f": 9, "bigl": [9, 267], "bigr": [9, 267], "just": [9, 33, 82, 199, 201, 202, 209, 222, 232, 239, 247, 259, 271, 273, 274], "satisfi": [9, 167, 202, 267], "boundari": [9, 31, 96, 181, 184, 185, 186, 187, 281], "particular": [9, 77, 81, 117, 240, 243, 246, 247, 254, 255, 258, 259, 266, 267], "those": [9, 65, 66, 82, 159, 160, 175, 191, 194, 215, 269, 284], "parameter": [9, 267, 283], "smooth": [9, 13, 57, 68, 113, 267], "psi_i": [9, 267], "sum_": [9, 59, 267], "c_i": [9, 271], "seek": [9, 267], "vdot": [9, 235, 281], "psi": 9, "_i": [9, 267], "begin": [9, 202, 232, 234, 236, 239, 271, 273, 280, 284], "bmatrix": [9, 234, 239, 271, 273, 280], "psi_1": 9, "psi_2": 9, "psi_n": 9, "_1": 9, "_2": 9, "_n": 9, "1ex": 9, "end": [9, 14, 25, 167, 175, 232, 234, 236, 239, 240, 247, 259, 267, 268, 269, 271, 273, 280], "c_1": 9, "c_n": 9, "bar": [9, 239, 267], "flag": [9, 14, 25, 60, 61, 64, 65, 66, 163, 165, 175, 235, 247, 259, 281], "suffici": [9, 280], "rank": [9, 135, 188], "possibli": [9, 15, 16, 19, 60, 232], "uniqu": [9, 15, 18, 19, 22, 26, 29, 40, 41, 55, 61, 68, 82, 88, 95, 98, 112, 113, 129, 134, 139, 140, 142, 143, 145, 146, 154, 157, 167, 179, 203, 204, 206, 212, 213, 218, 219, 220, 230, 269], "forward": [9, 18, 22, 26, 40, 60, 61, 64, 65, 66, 142, 181, 186, 202, 212, 236, 239, 268, 269, 282, 283], "revers": [9, 14, 25, 60, 61, 64, 65, 66, 164, 166, 181, 186, 236, 239, 254, 266, 268], "zflag": [9, 60, 61, 235, 281], "z_i": [9, 58, 60, 230], "q_i": [9, 60], "represent": [9, 11, 61, 70, 82, 196, 205, 208, 215, 231, 232], "linsi": [9, 61, 64, 236, 239], "support": [9, 18, 19, 22, 24, 26, 35, 44, 50, 60, 61, 65, 66, 99, 103, 106, 163, 175, 202, 231, 234, 267, 269, 270, 280], "xn": [9, 142, 212], "um": 9, "phi_i": [9, 59, 62], "chosen": [9, 34, 199, 200, 201, 202, 217, 269, 284], "flatbasi": 9, "polyfamili": [9, 65, 66, 235, 236, 281], "famili": [9, 59, 62, 63, 65, 66], "bezier": [9, 59, 62, 281, 283], "bezierfamili": [9, 281, 283], "spline": [9, 57, 235], "bsplinefamili": [9, 235], "onc": [9, 14, 25, 163, 165], "traj": [9, 63, 65, 66, 236, 281], "xf": [9, 65, 66, 235, 236, 267, 281, 283], "uf": [9, 65, 235, 236, 267, 281, 283], "specif": [9, 13, 15, 16, 17, 18, 19, 22, 26, 60, 61, 65, 66, 82, 145, 175, 185, 219, 233, 243, 255, 267, 269, 272, 284], "format": [9, 15, 18, 19, 22, 26, 33, 40, 41, 48, 61, 64, 82, 88, 97, 98, 130, 141, 145, 156, 157, 163, 165, 167, 175, 204, 209, 211, 219, 222, 230, 239, 269, 274], "solve_ocp": [9, 167, 267, 283], "without": [9, 33, 82, 228, 233, 243, 246, 247, 255, 258, 259, 281], "timept": [9, 65, 66, 157, 163, 165, 167, 175, 182, 234, 235, 239, 267, 269, 281, 283], "signatur": [9, 169, 174, 182, 234, 267], "increment": [9, 217, 267], "terminal_cost": [9, 66, 163, 165, 167, 175, 235, 239, 267, 283], "freedom": [9, 281], "vehicle_flat_forward": [9, 235, 281], "wheelbas": [9, 157, 235, 236, 267, 281, 282, 283], "store": [9, 18, 22, 24, 26, 68, 113, 164, 235, 236, 247, 259, 281], "rear": [9, 235, 281], "co": [9, 157, 235, 236, 239, 267, 269, 270, 271, 272, 273, 281, 282, 283], "dy": [9, 235, 239, 270, 273, 281], "thdot": [9, 235, 267, 281, 282, 283], "tan": [9, 157, 235, 236, 267, 281, 282, 283], "vehicle_flat_revers": [9, 235, 281], "arctan2": [9, 235, 281], "ydot": [9, 235, 267, 281, 282, 283], "xdot": [9, 235, 267, 270, 281, 282, 283], "And": [9, 234, 235, 281], "vehicle_flat": [9, 235, 281], "delta": [9, 235, 236, 267, 281, 284], "x_": [9, 234, 239, 241, 242, 267, 281], "t_": [9, 175, 236, 281], "poli": [9, 26, 145, 215, 219, 230, 235, 281], "minim": [9, 18, 22, 49, 50, 51, 61, 65, 66, 89, 90, 106, 107, 120, 121, 127, 150, 163, 165, 167, 175, 267, 269, 283], "termin": [9, 66, 163, 165, 167, 170, 172, 175, 176, 235, 267, 283], "penal": [9, 235, 239, 267, 270, 273, 283], "traj_cost": [9, 235, 239, 267, 281, 283], "quadratic_cost": [9, 235, 240, 267, 281, 283], "diag": [9, 235, 236, 239, 240, 267, 270, 271, 273, 281, 282, 283], "distanc": [9, 215, 270, 271, 272, 281, 283], "term_cost": [9, 267, 283], "1e3": [9, 235, 272], "straight": [9, 235, 267, 281, 282, 283], "guess": [9, 56, 66, 163, 165, 175, 235, 267, 283], "initial_guess": [9, 65, 66, 163, 165, 175, 235, 239, 267, 283], "bspline": 9, "portion": [10, 81, 159, 160, 222, 234, 246, 258, 269], "might": [10, 85, 202, 244, 247, 256, 259], "modifi": [10, 14, 24, 25, 202, 207, 246, 258, 269, 270, 281], "data": [10, 12, 13, 17, 18, 20, 21, 22, 24, 26, 33, 36, 48, 54, 61, 66, 67, 68, 69, 71, 72, 79, 80, 93, 94, 110, 113, 114, 115, 125, 126, 130, 142, 145, 147, 156, 159, 160, 181, 184, 185, 186, 187, 191, 194, 199, 200, 201, 209, 212, 214, 215, 216, 217, 219, 221, 222, 231, 233, 236, 243, 247, 255, 259, 267, 280, 284], "There": [10, 77, 117, 233], "variant": 10, "entri": [10, 13, 17, 18, 22, 23, 24, 26, 27, 33, 61, 63, 67, 69, 71, 79, 80, 82, 111, 114, 115, 155, 217, 222, 247, 259, 269], "instanc": [10, 11, 13, 17, 18, 22, 24, 26, 36, 61, 75, 116, 146, 220, 247, 259], "ndarrai": [10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 32, 34, 40, 41, 45, 46, 51, 60, 61, 90, 92, 94, 104, 105, 107, 111, 121, 124, 126, 131, 136, 138, 141, 149, 152, 160, 161, 164, 166, 180, 182, 193, 195, 199, 201, 209, 211, 229, 234, 247, 259], "attribut": [10, 13, 18, 22, 24, 66, 164, 166, 247, 248, 259, 260], "set_plot_titl": [10, 269], "wrapper": [10, 55, 69, 111, 112, 114, 129, 134, 135, 137, 138, 140, 154, 179, 188, 189, 206], "center": [10, 33, 70, 159, 199, 201, 209, 222, 270, 271, 272, 281, 282], "midpoint": 10, "rather": [10, 16, 19, 26, 27, 60, 81, 163, 165, 175, 202], "better": [10, 69, 81, 114], "particularli": [10, 233], "multi": [10, 24, 33, 36, 218, 222, 228, 234, 269], "panel": 10, "longer": [10, 18, 22, 239, 272], "render": 10, "str": [10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 33, 34, 35, 36, 40, 41, 44, 48, 50, 51, 52, 55, 60, 61, 64, 65, 66, 68, 81, 82, 88, 89, 90, 91, 95, 98, 99, 103, 106, 107, 108, 112, 113, 120, 121, 123, 129, 130, 134, 139, 140, 142, 143, 145, 146, 154, 156, 157, 158, 159, 160, 163, 165, 167, 175, 179, 181, 184, 185, 186, 187, 191, 194, 199, 201, 203, 204, 206, 207, 209, 212, 213, 219, 220, 222, 230], "kwarg": [10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 33, 40, 41, 48, 49, 55, 60, 61, 64, 65, 66, 71, 81, 82, 98, 112, 115, 129, 130, 139, 143, 154, 156, 157, 159, 160, 163, 164, 165, 166, 167, 175, 181, 184, 185, 186, 187, 191, 194, 199, 201, 203, 204, 209, 213, 218, 222, 280], "intend": [11, 16, 18, 22, 38, 267, 269, 270, 272, 280, 282, 283], "overrid": [11, 15, 16, 19, 33, 40, 56, 60, 61, 64, 81, 82, 88, 130, 156, 157, 159, 181, 184, 185, 186, 187, 191, 192, 194, 209, 222, 254, 266, 269], "__call__": [11, 13, 16, 18, 19, 22, 24, 26, 57, 58, 59, 60, 61, 62, 70, 111, 196, 205], "_isstat": 11, "updat": [11, 13, 15, 16, 17, 18, 19, 22, 26, 56, 60, 61, 64, 157, 164, 166, 202, 234, 236, 239, 240, 247, 259, 268, 269, 273, 280], "scalar": [11, 13, 16, 17, 18, 19, 22, 24, 26, 29, 30, 39, 47, 48, 49, 55, 60, 61, 67, 70, 79, 86, 95, 111, 112, 122, 129, 134, 140, 151, 154, 179, 196, 205, 206, 216, 234, 284], "sinusoid": [11, 47, 70, 196, 205, 234], "n_val": 12, "about": [12, 20, 82, 159, 160, 234, 236, 267, 269, 271, 281], "potenti": [12, 49, 218], "locat": [12, 13, 17, 18, 21, 22, 26, 28, 33, 43, 48, 61, 102, 130, 135, 138, 156, 159, 188, 189, 191, 194, 199, 201, 202, 209, 222, 230, 232, 269], "frd": [13, 18, 22, 48, 49, 61, 215], "func": [13, 141, 182, 211], "prefer": 13, "array_lik": [13, 16, 17, 18, 19, 22, 23, 26, 27, 28, 32, 33, 35, 39, 42, 47, 48, 50, 52, 54, 60, 61, 65, 66, 67, 68, 69, 71, 72, 79, 80, 89, 90, 91, 93, 94, 97, 99, 101, 106, 108, 110, 111, 113, 114, 115, 120, 121, 123, 125, 126, 130, 131, 132, 135, 138, 141, 142, 143, 145, 146, 148, 156, 159, 160, 162, 163, 167, 169, 174, 175, 188, 189, 191, 194, 199, 200, 201, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 222, 224, 228, 230], "iter": [13, 14, 20, 25, 160, 164, 166, 282], "bool": [13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 33, 35, 38, 39, 43, 44, 47, 48, 49, 54, 56, 60, 61, 63, 66, 67, 68, 69, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 88, 94, 98, 99, 102, 103, 110, 111, 113, 114, 115, 126, 127, 130, 137, 139, 150, 152, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 175, 181, 182, 185, 186, 187, 189, 191, 194, 199, 201, 202, 203, 204, 208, 209, 210, 215, 217, 222, 223, 247, 259], "interpol": [13, 41, 67, 68, 113, 163, 215], "within": [13, 18, 22, 26, 61, 68, 70, 98, 113, 181, 184, 185, 186, 187, 204], "ninput": [13, 15, 16, 17, 18, 19, 22, 24, 26, 27, 29, 37, 41, 53, 55, 60, 61, 64, 69, 95, 100, 109, 111, 112, 114, 134, 140, 157, 163, 175, 179, 206, 216, 218, 239, 273, 280], "noutput": [13, 15, 16, 17, 18, 19, 22, 24, 26, 27, 29, 37, 53, 55, 60, 61, 69, 95, 100, 109, 111, 112, 114, 134, 140, 179, 206, 216, 218, 280], "frdata": 13, "2j": 13, "8j": 13, "6th": [13, 18, 22, 26, 61], "callabl": [13, 19, 22, 26, 47, 64, 65, 66, 157, 163, 165, 167, 169, 174, 175, 181, 182, 184, 185, 186, 187], "arg": [13, 14, 21, 24, 25, 48, 64, 71, 100, 105, 115, 142, 164, 166, 181, 184, 185, 186, 187, 212, 267], "copi": [13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 60, 61, 82, 88, 98, 164, 166, 204, 246, 247, 258, 259, 267], "bandwidth": [13, 17, 18, 22, 26, 61, 274, 281], "dbdrop": [13, 17, 18, 22, 26, 61], "drop": [13, 16, 17, 18, 22, 26, 61], "dc": [13, 17, 18, 22, 26, 46, 61], "dpdrop": [13, 17, 18, 22, 26, 61], "strictli": [13, 17, 18, 22, 26, 61], "amount": [13, 17, 18, 22, 26, 61, 159, 160, 164, 166, 181, 186, 202], "decid": [13, 17, 18, 22, 26, 61], "unit": [13, 17, 18, 22, 26, 33, 54, 61, 79, 94, 110, 126, 145, 159, 160, 191, 194, 199, 201, 208, 215, 217, 219, 231, 237, 267, 269, 270, 281], "nan": [13, 17, 18, 22, 26, 46, 61, 247, 259], "infinit": [13, 17, 18, 22, 23, 26, 61], "inf": [13, 17, 18, 22, 26, 46, 61, 78, 158, 171, 173, 177, 247, 259], "doe": [13, 17, 18, 22, 26, 55, 56, 60, 61, 81, 82, 88, 112, 140, 158, 163, 164, 166, 175, 206, 247, 259, 269, 274], "rais": [13, 14, 16, 17, 18, 19, 22, 25, 26, 30, 31, 47, 55, 60, 61, 75, 76, 78, 81, 96, 112, 116, 128, 134, 139, 140, 142, 143, 145, 146, 153, 164, 166, 179, 203, 206, 212, 213, 219, 220, 247, 248, 259, 260], "typeerror": [13, 17, 18, 22, 26, 47, 61, 81, 143, 145, 146, 213, 219, 220], "valueerror": [13, 14, 16, 17, 18, 19, 22, 25, 26, 30, 31, 55, 60, 61, 75, 81, 96, 112, 116, 128, 134, 139, 140, 142, 143, 145, 146, 153, 179, 203, 206, 212, 213, 219, 220, 247, 259], "use_prefix_suffix": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61], "made": [13, 15, 16, 17, 18, 19, 22, 26, 47, 55, 60, 61, 80, 112, 118, 119, 144, 217, 244, 247, 256, 259], "prepend": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61], "iosi": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61, 82, 88, 98, 141, 204, 211], "duplicate_system_name_prefix": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61, 82], "duplicate_system_name_suffix": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61, 82], "id": [13, 15, 16, 17, 18, 19, 22, 26, 29, 40, 41, 55, 60, 61, 68, 82, 88, 95, 98, 112, 113, 129, 134, 139, 140, 142, 143, 145, 146, 154, 157, 167, 179, 203, 204, 206, 212, 213, 218, 219, 220, 230], "intern": [13, 15, 16, 17, 18, 19, 22, 26, 41, 48, 51, 56, 60, 61, 64, 70, 81, 82, 88, 90, 107, 121, 157, 234, 241, 242, 273], "counter": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61], "damp": [13, 17, 18, 22, 26, 61, 137, 191, 194, 199, 201, 268, 269, 270, 271, 272, 279, 281], "natur": [13, 17, 18, 22, 26, 43, 61, 82, 102], "wn": [13, 17, 18, 22, 26, 43, 61, 102], "dcgain": [13, 17, 18, 22, 26, 61, 129, 154, 216], "intermedi": 13, "per": [13, 18, 22, 23, 26, 27, 61, 111, 247, 259, 268], "keep": [13, 17, 18, 22, 23, 24, 26, 27, 61, 63, 67, 69, 79, 80, 111, 114, 217, 233, 239, 247, 259, 267, 270, 273, 282, 283], "squeeze_frequency_respons": [13, 17, 18, 22, 23, 26, 27, 61, 69, 111, 114], "find_input": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61], "name_list": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61], "spec": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61, 82, 181, 185, 187, 191, 194, 199, 201, 209], "find_stat": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61, 236], "freqresp": [13, 18, 22, 26, 61, 69, 111, 272], "deprec": [13, 18, 22, 37, 61, 87, 160, 182, 209, 222, 272], "exp": [13, 17, 18, 22, 23, 26, 27, 33, 47, 61, 67, 111, 159, 160, 274, 284], "circl": [13, 17, 18, 22, 26, 33, 61, 159, 160, 181, 184, 185, 186, 187, 191, 194, 199, 201, 269], "self": [13, 17, 18, 22, 26, 27, 58, 61, 142, 143, 164, 165, 166, 212, 213, 247, 259], "isctim": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61], "strict": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61, 83, 84, 86, 223, 243, 255], "check": [13, 15, 16, 17, 18, 19, 22, 26, 47, 60, 61, 73, 74, 82, 83, 84, 85, 86, 87, 223, 231, 233, 244, 247, 256, 259, 269, 272], "isdtim": [13, 15, 16, 17, 18, 19, 22, 26, 53, 60, 61, 98, 109, 204, 280], "issiso": [13, 15, 16, 17, 18, 19, 22, 24, 26, 60, 61, 237], "nstate": [13, 15, 16, 17, 18, 19, 22, 24, 26, 29, 31, 37, 41, 53, 55, 60, 61, 64, 95, 96, 100, 109, 112, 128, 134, 140, 153, 157, 179, 206, 218, 236, 239, 273], "plot_typ": [13, 269], "singular": [13, 18, 22, 26, 31, 54, 61, 77, 96, 110, 117, 209, 210, 231, 269, 274], "svplot": 13, "bode_plot": [13, 69, 114, 232, 269, 272, 281], "singular_values_plot": [13, 210], "set_input": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61], "prefix": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61, 82, 88, 98, 204, 218, 234], "count": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 60, 61, 64, 82, 139, 157, 159, 160, 203, 218, 269], "string": [13, 15, 16, 17, 18, 19, 22, 24, 26, 29, 31, 33, 40, 41, 42, 48, 55, 60, 61, 64, 68, 75, 82, 88, 95, 96, 97, 98, 101, 112, 113, 116, 128, 129, 130, 132, 134, 139, 140, 141, 142, 143, 145, 146, 153, 154, 155, 156, 157, 159, 162, 163, 165, 167, 175, 179, 191, 194, 199, 201, 202, 203, 204, 206, 209, 211, 212, 213, 215, 218, 219, 220, 222, 226, 230, 234, 269], "set_output": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61], "set_stat": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61], "h_": [13, 78], "replac": [13, 30, 33, 48, 65, 66, 130, 151, 156, 159, 175, 182, 191, 194, 199, 201, 209, 222, 234, 235, 244, 256, 283], "update_nam": [13, 15, 16, 17, 18, 19, 22, 26, 60, 61], "item": [14, 25, 164, 166, 216, 253, 265, 269], "shallow": [14, 25, 164, 166], "occurr": [14, 25], "stop": [14, 25, 182], "maxsiz": [14, 25], "insert": [14, 25, 141, 159, 160, 164, 166, 211], "pop": [14, 25, 164, 166], "last": [14, 25, 40, 164, 165, 166, 216, 267, 268, 280], "indexerror": [14, 25], "empti": [14, 18, 22, 25, 26, 61, 63, 82, 164, 166, 191, 192, 194, 199, 201, 234, 269], "IN": [14, 25, 243, 246, 255, 258], "place": [14, 25, 28, 33, 60, 73, 74, 81, 82, 189, 202, 234, 247, 259, 281, 282], "kei": [14, 25, 164, 166, 181, 184, 185, 186, 187, 269], "ascend": [14, 25], "stabl": [14, 25, 31, 53, 76, 96, 109, 128, 139, 153, 159, 160, 185, 203, 269], "them": [14, 25, 33, 141, 211], "descend": [14, 25, 32, 133, 178], "accord": [14, 25, 31, 32, 37, 41, 96, 100, 159, 160, 267, 280], "input_prefix": [15, 234], "output_prefix": [15, 234], "state_prefix": 15, "parent": [15, 17], "No": [15, 67, 236, 239, 244, 247, 256, 259, 277, 278], "relev": [15, 19, 61, 64, 82, 157, 239, 270, 281], "quantiti": [15, 19, 61, 64, 82, 157], "dict": [15, 16, 18, 19, 24, 33, 56, 60, 61, 64, 67, 80, 81, 82, 88, 130, 156, 157, 159, 164, 166, 181, 184, 185, 186, 187, 191, 192, 194, 209, 216, 217, 222], "input_index": 15, "output_index": 15, "state_index": 15, "syslist": [16, 82, 97, 131, 269], "warn_dupl": [16, 82], "connection_typ": [16, 18], "subsystem": [16, 18, 82, 234, 280, 282], "overal": [16, 82, 234, 241, 242, 281], "subset": [16, 281], "__add__": [16, 18, 19, 22, 26, 60, 61, 134, 179], "squeeze_time_respons": [16, 19, 24, 60, 63, 67, 79, 80, 81, 163, 165, 175, 217], "__mul__": [16, 18, 19, 22, 26, 60, 61, 140, 206], "multipli": [16, 18, 19, 22, 26, 41, 51, 60, 61, 65, 66, 82, 90, 107, 121, 141, 175, 211, 234, 267, 271], "seri": [16, 19, 29, 37, 39, 54, 55, 60, 67, 79, 80, 94, 95, 100, 110, 112, 126, 129, 134, 154, 179, 216, 217, 233, 234, 247, 259], "__neg__": [16, 18, 19, 22, 26, 60, 61, 129, 154], "negat": [16, 18, 19, 22, 26, 29, 37, 55, 60, 61, 95, 100, 112, 134, 140, 179, 206], "rescal": [16, 19, 59, 60, 62, 208, 235], "__radd__": [16, 18, 19, 22, 26, 60, 61], "__rmul__": [16, 18, 19, 22, 26, 60, 61], "__rsub__": [16, 18, 19, 22, 26, 60, 61], "subtract": [16, 18, 19, 22, 26, 60, 61, 202], "__sub__": [16, 18, 19, 22, 26, 60, 61], "__truediv__": [16, 18, 19, 22, 26, 60, 61], "divis": [16, 18, 19, 22, 60, 61, 247, 259], "check_unused_sign": [16, 18], "ignore_input": [16, 18, 82], "ignore_output": [16, 18, 82], "warn": [16, 18, 22, 23, 26, 27, 33, 48, 49, 61, 81, 82, 94, 126, 158, 159, 160, 181, 185, 186, 187, 234, 239, 248, 260, 268], "unus": [16, 18, 82], "emit": [16, 18], "known": [16, 18, 40, 82, 165, 267], "sig": [16, 18, 82], "isi": [16, 18], "isig": [16, 18], "ignor": [16, 18, 22, 24, 26, 33, 37, 54, 56, 61, 69, 71, 72, 79, 80, 82, 94, 98, 100, 110, 114, 115, 118, 119, 126, 141, 144, 158, 159, 204, 209, 211, 216, 217], "dropped_input": [16, 18], "dropped_output": [16, 18], "osi": [16, 18], "osig": [16, 18], "connection_t": [16, 18], "show_nam": [16, 18, 38], "column_width": [16, 18, 38], "tabl": [16, 18, 38, 43, 102, 282], "insid": [16, 18, 38, 216, 231, 269], "implicitli": [16, 18, 38], "instead": [16, 18, 22, 33, 37, 38, 41, 47, 56, 67, 69, 71, 72, 81, 82, 114, 115, 163, 175, 182, 202, 210, 222, 233, 234, 236, 247, 259, 269, 271, 282, 283], "implicit": [16, 18, 38], "charact": [16, 18, 38], "l": [16, 18, 35, 38, 40, 44, 50, 89, 94, 99, 103, 106, 120, 126, 135, 157, 158, 175, 188, 215, 234, 236, 239, 267, 268, 269, 271, 272, 273, 274, 281, 282, 283], "destin": [16, 18, 38], "hand": [16, 19, 56, 60, 234, 236, 269, 272], "correct": [16, 18, 19, 22, 33, 40, 60, 61, 67, 80, 122, 222, 234, 236], "length": [16, 18, 19, 22, 60, 61, 63, 67, 81, 94, 126, 159, 182, 234, 267, 274, 281], "sys1": [16, 19, 29, 55, 60, 95, 97, 112, 129, 131, 134, 140, 143, 145, 146, 154, 179, 206, 213, 219, 220, 232, 269], "primari": [16, 19, 60, 159, 160, 269], "sys2": [16, 19, 29, 55, 60, 95, 97, 112, 129, 134, 140, 142, 146, 154, 179, 206, 212, 220, 232, 269], "often": [16, 19, 60, 66, 81, 175, 234, 267, 269], "incompat": [16, 19, 60, 222, 244, 256], "ep": [16, 18, 19, 22, 32, 60, 61, 280, 283], "1e": [16, 18, 19, 22, 60, 61, 81, 158, 239, 269, 272, 273, 274, 275, 283], "06": [16, 18, 19, 22, 60, 61, 158, 273], "copy_nam": [16, 18, 19, 22, 26, 60, 61, 88, 98, 204], "complet": [16, 18, 19, 22, 60, 61, 159, 269, 272, 280], "set_connect_map": [16, 18, 82], "connect_map": [16, 18], "set_input_map": [16, 18], "input_map": [16, 18], "ad": [16, 18, 22, 26, 37, 40, 61, 82, 88, 97, 98, 100, 163, 165, 202, 204, 222, 232, 236, 239, 240, 247, 259, 273], "set_output_map": [16, 18, 82], "output_map": [16, 18], "concaten": [16, 18, 234, 270], "unused_sign": [16, 18], "unused_input": [16, 18], "unused_output": [16, 18], "child": 17, "much": [17, 19, 163, 202, 280, 283, 284], "io_si": [18, 234], "ss_sy": [18, 88, 234], "expect": [18, 22, 26, 50, 61, 89, 106, 120, 165, 191, 194, 199, 201, 247, 259, 284], "warn_infinit": [18, 22, 23, 26, 27, 61], "enter": [18, 22, 23, 26, 27, 40, 61, 97, 111, 216], "1j": [18, 22, 23, 26, 27, 33, 61, 111, 159, 160, 274], "Or": [18, 22, 23, 26, 27, 61], "don": [18, 22, 23, 26, 33, 61, 222, 267, 271, 282], "__getitem__": [18, 22, 24, 61, 164, 166], "serial": [18, 22, 26, 61, 231], "necessari": [18, 22, 61, 81, 244, 256], "preserv": [18, 22, 61, 247, 259], "By": [18, 22, 24, 26, 31, 56, 61, 63, 67, 79, 80, 96, 159, 160, 189, 191, 194, 202, 205, 217, 222, 234, 247, 259, 267, 269, 270], "issu": [18, 22, 26, 61, 81, 231, 234, 247, 254, 259, 266], "messag": [18, 22, 24, 26, 61, 66, 81, 82, 94, 126, 158, 163, 167, 175, 181, 185, 186, 187, 233, 234], "solve_ivp": [18, 22, 61, 81, 163, 165], "iosystem": [18, 22, 61], "omit": [18, 22, 48, 50, 56, 61, 82, 89, 106, 120, 141, 159, 211, 234, 267], "horner": [18, 22, 26, 61], "laub": [18, 22, 61], "correctli": [18, 22, 26, 61, 231, 233], "friendli": [18, 22, 26, 61], "interfac": [18, 22, 24, 26, 61, 233, 238, 271], "fall": [18, 22, 33, 61], "back": [18, 22, 61], "lft": [18, 22, 61], "nu": [18, 22, 30, 61, 151, 277], "ny": [18, 22, 30, 61, 151, 239, 273], "fraction": [18, 22, 61, 159, 267], "transform": [18, 22, 26, 31, 32, 34, 41, 61, 68, 78, 96, 98, 113, 143, 145, 146, 152, 161, 195, 204, 208, 213, 219, 220], "definit": [18, 22, 61, 228, 234, 281], "appendix": [18, 22, 61], "page": [18, 22, 61, 233, 247, 259], "512": [18, 22, 61], "2nd": [18, 22, 61, 69, 114, 145, 219], "multivari": [18, 22, 61, 82, 274, 275], "sigurd": [18, 22, 61], "skogestad": [18, 22, 61, 274, 275], "http": [18, 22, 54, 61, 94, 110, 126, 196, 231, 240, 247, 254, 259, 266, 271, 282], "www": [18, 22, 61, 240, 247, 259, 271], "mathwork": [18, 22, 61], "com": [18, 22, 61, 231, 250, 254, 262, 266], "help": [18, 22, 61, 202, 234, 267], "ref": [18, 22, 61], "html": [18, 22, 61, 254, 266], "plant": [18, 22, 30, 61, 76, 78, 141, 151, 202, 211, 234, 241, 242, 274, 275, 277, 278, 280], "minreal": [18, 22, 26, 61], "tol": [18, 22, 26, 61, 127, 150, 158], "calcul": [18, 22, 47, 54, 61, 67, 77, 93, 94, 110, 117, 125, 126, 138, 199, 200, 201, 215, 236, 283, 284], "unobserv": [18, 22, 61, 127, 150], "uncontrol": [18, 22, 61, 127, 150], "returnscipysignallti": [18, 22, 26, 61], "ssobject": [18, 22, 61], "4th": [18, 22, 26, 61], "cannot": [18, 22, 26, 61, 75, 116, 233, 239], "inherit": [18, 22, 26, 61], "dlti": [18, 22, 26, 61], "prewarp_frequ": [18, 22, 26, 61, 98, 204], "convers": [18, 22, 26, 61, 98, 142, 204, 212, 231], "gbt": [18, 22, 26, 61, 98, 204], "bilinear": [18, 22, 26, 61, 98, 204], "euler": [18, 22, 26, 61], "backward_diff": [18, 22, 26, 61], "tustin": [18, 22, 26, 61, 98, 204], "differenc": [18, 22, 61], "backward": [18, 22, 24, 26, 61, 63, 67, 79, 80, 81, 181, 186, 200, 209, 217, 267, 269], "hold": [18, 22, 26, 61, 65, 66, 163, 165, 167, 175, 239, 267, 272, 280], "weight": [18, 22, 26, 30, 51, 61, 90, 98, 107, 121, 151, 174, 204, 239, 270, 271, 273, 274, 275], "infin": [18, 22, 26, 61, 78, 98, 151, 158, 159, 160, 204, 274, 275], "crossov": [18, 22, 26, 61, 93, 125, 159, 215, 272, 274], "suffix": [18, 22, 26, 61, 82, 88, 98, 204], "sampled_system_name_prefix": [18, 22, 26, 61, 98, 204], "sampled_system_name_suffix": [18, 22, 26, 61, 98, 204], "origion": [18, 22, 26, 61], "cont2discret": [18, 22, 26, 61, 98, 204], "slycot_laub": [18, 22, 61], "number_output": [18, 22, 61], "number_input": [18, 22, 61], "updfcn": [19, 60, 64, 157, 234, 239, 240, 273], "outfcn": [19, 60, 64, 157, 234, 239, 240], "yet": [19, 50, 106, 158], "currrent": [19, 64, 157], "upfcn": [19, 64, 157], "inputouputsystem": 19, "_rh": [19, 280], "_out": [19, 280], "entir": [19, 222, 234, 267, 283], "contour": [20, 155, 159, 160, 181, 269], "return_contour": [20, 159, 160], "open": [20, 93, 125, 234, 235, 267, 272, 274], "nyquist_respons": [20, 159, 269], "encircl": [20, 159, 160, 269], "indendt": 20, "under": [20, 128, 153, 267], "studi": 20, "encirl": 20, "loci": [21, 191, 194, 199, 200, 201, 269], "root": [21, 56, 77, 117, 138, 141, 191, 194, 199, 200, 201, 202, 211, 269, 279, 281], "locu": [21, 138, 141, 191, 194, 199, 200, 201, 202, 211, 269], "optiona": [21, 24, 159], "pole_zero_plot": [21, 137, 190, 269], "ipython": [22, 202, 236], "latex": 22, "pretti": 22, "configur": [22, 33, 67, 141, 197, 202, 211, 227, 231, 281], "latex_num_format": 22, "latex_repr_typ": 22, "tailor": 22, "mathjax": 22, "odd": 22, "typeset": 22, "fragment": 22, "3g": [22, 274, 284], "partit": [22, 76, 78], "separ": [22, 217, 222, 269], "output_label": [24, 237, 239, 273, 280], "state_label": [24, 239, 273, 280], "input_label": [24, 237, 239, 273, 280], "multi_trac": 24, "trace_label": [24, 36, 222, 237, 269], "trace_typ": [24, 237], "plot_input": [24, 222, 237, 269], "success": [24, 66, 81, 163, 164, 165, 166, 175, 267, 283], "tempor": [24, 283], "etc": [24, 141, 211, 222], "mainli": [24, 235], "raw": 24, "suppress": [24, 33, 130, 156, 159, 181, 185, 186, 187, 191, 194, 199, 201, 209, 222, 269], "lsim": [24, 63, 67, 79, 80, 81, 118, 119, 144, 216, 217], "valid": [24, 98, 204], "overridden": [24, 41, 67, 165, 269], "ntrace": 24, "independ": [24, 33, 79, 217, 222, 267, 269], "surpress": 24, "earlier": [24, 247, 259], "version": [24, 33, 37, 67, 87, 182, 226, 231, 239, 244, 247, 256, 259, 267, 272, 273], "__iter__": [24, 164, 166], "pattern": [24, 269], "legaci": [24, 33, 67, 137, 138, 159, 160, 182, 191, 194, 199, 201, 209, 226, 254, 266], "affect": [24, 63, 175, 202], "__len__": [24, 164, 166], "tranpos": 24, "opton": 24, "disambigu": 24, "time_response_plot": [24, 67, 269], "evolut": [24, 63, 67, 81, 122, 163, 165, 175], "denomin": [26, 133, 145, 146, 147, 178, 219, 220, 221], "display_format": [26, 145, 219, 230], "zpk": [26, 145, 159, 160, 219], "displai": [26, 33, 145, 159, 182, 219, 230, 232, 236, 268, 269, 283], "attribu": 26, "delai": [26, 133, 145, 178, 219, 231, 281], "divid": [26, 27, 247, 259], "__rtruediv__": 26, "contin": [26, 228], "float64": [26, 77, 117, 129, 154, 158, 247, 259], "sixth": 26, "cancel": [26, 46, 127, 150, 217], "tfobject": 26, "different": 26, "express": [26, 82, 243, 246, 255, 258, 267], "placement": [28, 189, 231, 234], "ackermann": 28, "eigenvalu": [28, 31, 32, 35, 43, 44, 50, 51, 75, 77, 89, 90, 96, 99, 102, 103, 106, 107, 116, 117, 120, 121, 128, 135, 153, 188, 189, 231, 234], "place_varga": [28, 135, 188, 281], "sysn": [29, 95, 97, 131, 134, 140, 179, 206], "group": [29, 95], "augment": [29, 30, 95, 151, 277, 278], "togeth": [29, 82, 95, 269, 273, 282], "subsys_nam": [29, 55, 82, 95, 112, 129, 134, 140, 154, 179, 206], "state_nam": [29, 55, 82, 95, 112, 129, 134, 140, 154, 179, 206], "g1": [29, 95, 134, 140, 179, 206, 234], "g2": [29, 95, 134, 140, 179, 206], "w1": [30, 151], "w2": [30, 151], "w3": [30, 151], "mix": [30, 151, 233, 234, 274, 275], "sensit": [30, 71, 72, 115, 151, 159, 215, 269, 271, 272, 274, 275], "At": [30, 267, 269], "least": [30, 94, 126, 247, 259], "submiss": 30, "hinfsyn": [30, 151, 278], "h2syn": [30, 277], "mixsyn": [30, 274, 275], "truncat": [31, 94, 96, 126, 128, 153, 276], "reduc": [31, 54, 96, 110, 128, 153, 217, 276, 283], "elimin": [31, 96, 127, 128, 148, 150, 153, 224], "hankel": [31, 54, 77, 96, 110, 117, 231], "unstabl": [31, 75, 76, 78, 96, 116, 159, 160, 185, 234, 269], "mode": [31, 96, 191, 194, 202, 217, 235], "reinsert": [31, 96], "hsu": [31, 96], "hou": [31, 96], "1991": [31, 96], "schur": [31, 32, 96, 152, 189], "electron": [31, 96], "letter": [31, 96], "984": [31, 96], "986": [31, 96], "matchdc": [31, 96, 128, 153], "redefin": [31, 96], "modulu": [31, 96, 189], "slicot": [31, 96], "routin": [31, 75, 76, 78, 96, 116, 146, 220, 233], "ab09md": [31, 96], "ab09nd": [31, 96], "rsy": [31, 96, 127, 128, 150, 153, 276], "importerror": [31, 76, 78, 96], "ab09ad": [31, 96], "gr": [31, 96, 128, 153], "balr": [31, 276], "condmax": [32, 152], "diagon": [32, 270, 271], "decomposit": 32, "decompos": 32, "sqrt": [32, 216, 268, 277, 281, 282, 284], "1e8": 32, "amod": 32, "tmodal": 32, "similar": [32, 175, 208, 234, 267, 275], "relat": 32, "blksize": 32, "decreas": [32, 33, 159, 281], "log": [32, 43, 102, 163, 164, 165, 166, 167, 175, 267, 269, 275, 283], "fmt": [33, 130, 156, 209, 222, 236], "omega_limit": [33, 69, 71, 72, 114, 115, 141, 159, 160, 209, 210, 211], "omega_num": [33, 69, 71, 72, 114, 115, 141, 159, 160, 209, 210, 211, 269], "plot_magnitud": 33, "plot_phas": [33, 269], "overlay_output": [33, 269], "overlay_input": [33, 269], "phase_label": 33, "magnitude_label": 33, "display_margin": 33, "margins_method": 33, "best": [33, 215, 233], "sharex": [33, 222, 269], "sharei": [33, 222, 269], "optoin": 33, "proporti": 33, "draw": [33, 48, 130, 156, 159, 181, 182, 186, 191, 194, 199, 201, 209, 222], "margin": [33, 141, 211, 215, 231, 247, 259, 272], "top": [33, 141, 211, 222, 236, 269], "overlai": [33, 222, 269], "freq_label": 33, "initial_phas": [33, 269], "lowest": [33, 82], "closest": [33, 215], "wrap_phas": 33, "sysdata": [33, 67, 69, 79, 80, 93, 114, 125, 130, 156, 159, 160, 190, 199, 200, 201, 209, 210, 215, 216, 217], "legend_map": [33, 209, 222, 269], "legend_loc": [33, 130, 156, 159, 191, 194, 199, 201, 209, 222, 269], "stability_margin": 33, "frequeni": [33, 71, 72, 115, 159, 160, 209, 210], "onto": [33, 222, 269], "distinguish": 33, "respect": [33, 41, 44, 103, 155, 159, 202, 209, 234, 281, 282, 283], "rcparam": [33, 130, 156, 159, 181, 184, 185, 186, 187, 191, 192, 194, 198, 209, 222, 247, 259, 269], "ctrlplot": [33, 130, 156, 159, 181, 184, 185, 186, 187, 191, 192, 194, 209, 222], "share_frequ": [33, 269], "share": [33, 222, 269], "across": [33, 57, 69, 82, 114, 222, 239, 269, 284], "share_magnitud": [33, 269], "share_phas": [33, 269], "share_": 33, "show_legend": [33, 130, 156, 159, 191, 194, 199, 201, 209, 222, 269], "hidden": [33, 130, 156, 159, 191, 194, 199, 201, 209, 222], "title_fram": [33, 159, 209], "horizont": [33, 159, 209, 222, 281, 282, 283], "rel": [33, 54, 94, 110, 126, 158, 159, 209, 216], "faster": [33, 67, 122, 159, 209, 247, 259, 281, 283], "unwrap": 33, "increas": [33, 159, 274, 281, 284], "restrict": [33, 159, 246, 258], "offset": [33, 40, 41, 165, 234, 269, 281], "360": [33, 155, 272], "cplt": [33, 48, 71, 115, 130, 156, 159, 181, 191, 194, 199, 201, 209, 222, 269], "were": [33, 48, 71, 115, 130, 156, 159, 181, 191, 194, 199, 201, 202, 209, 222, 226, 234, 239, 247, 259, 273, 281], "controlplot": [33, 48, 71, 115, 130, 156, 159, 181, 191, 194, 199, 201, 209, 222, 269], "old": [33, 244, 247, 256, 259, 269], "branch": [33, 159, 160, 191, 194, 196, 202, 244, 247, 256, 259, 269], "xsy": [34, 152, 161, 195, 208], "reachabl": [34, 152, 195, 231], "canon": [34, 152, 161, 195, 276], "observ": [34, 50, 75, 77, 89, 94, 106, 116, 117, 120, 126, 132, 161, 162, 231, 271, 280], "modal": [34, 152], "zsy": [34, 152, 161, 195, 208], "gc": [34, 98, 152, 158, 161, 195, 204], "_a": [35, 44, 99, 103], "_b": [35, 44, 99, 103], "_q": [35, 44, 99, 103], "_r": [35, 44, 99, 103], "_ss": [35, 44, 99, 103], "_e": [35, 44, 99, 103], "riccati": [35, 44, 50, 51, 78, 89, 90, 99, 103, 106, 107, 120, 121], "further": [35, 44, 52, 82, 98, 99, 103, 108, 175, 204, 234, 267], "symmetr": [35, 44, 52, 91, 99, 103, 108, 123, 196], "ident": [35, 44, 99, 103, 141, 211, 270, 281], "try": [35, 44, 50, 51, 52, 89, 90, 91, 99, 103, 106, 107, 108, 120, 121, 123, 142, 146, 158, 191, 194, 199, 201, 202, 212, 220, 239, 247, 259, 267, 268, 270, 273, 283, 284], "unstabil": [35, 44, 99, 103], "Not": [35, 44, 63, 89, 99, 103, 120], "ricatti": [35, 44, 99, 103], "response_list": 36, "repons": [36, 274], "taken": [36, 65, 89, 94, 120, 126, 159, 160, 205, 234, 267, 282], "inputv": [37, 100], "outputv": [37, 100], "futur": [37, 160, 281], "trim": [37, 80, 100], "fed": [37, 100, 202], "commun": [37, 100], "extern": [37, 100, 234, 247, 259, 271], "tau": [39, 202, 208, 232, 281, 284], "cross": [39, 50, 51, 89, 90, 93, 106, 107, 120, 121, 125, 183, 215, 281], "rtau": 39, "offet": 39, "extra": [39, 281], "qn": [40, 50, 89, 106, 120], "rn": [40, 50, 89, 106, 120], "p0": [40, 236, 239, 273], "control_indic": [40, 41, 165], "disturbance_indic": [40, 165, 239], "estimate_label": [40, 165], "xhat": [40, 41, 165, 234, 236, 239, 267, 273], "covariance_label": 40, "measurement_label": [40, 165], "control_label": [40, 165], "quadrat": [40, 50, 51, 89, 90, 106, 107, 120, 121, 169, 174, 231, 267, 271, 283], "hat": [40, 234, 236, 239, 267, 273], "dp": 40, "q_n": 40, "r_n": 40, "r_e": 40, "covari": [40, 50, 89, 106, 120, 169, 228, 236, 239, 267, 273, 284], "nois": [40, 50, 89, 106, 120, 165, 169, 228, 236, 239, 267, 273, 284], "slice": [40, 41, 82, 165, 234, 239], "white": [40, 228, 236, 267, 284], "intens": [40, 228, 239, 273, 284], "overriden": [40, 165], "create_statefbk_iosystem": [40, 234, 239, 273, 282], "est": [40, 239, 281], "ctrl": [40, 41, 167, 234, 240, 269], "clsy": [40, 41, 234, 273, 281], "own": [40, 222], "noisi": [40, 236, 239, 267, 273], "resp": [40, 234, 239, 267, 273], "integral_act": [41, 51, 90, 107, 121, 234], "controller_typ": 41, "xd_label": 41, "ud_label": [41, 282], "gainsched_indic": [41, 234, 282], "gainsched_method": [41, 282], "state_indic": 41, "k_p": 41, "k_i": 41, "eg": 41, "mu": [41, 234], "k_j": 41, "mu_j": 41, "nearest": [41, 280], "cubic": 41, "griddata": 41, "outsid": 41, "convex": 41, "hull": 41, "modif": [41, 243, 244, 247, 255, 256, 259], "runtim": [41, 268], "formula": 41, "stack": [41, 65, 66, 81, 175, 222, 267], "ey": [41, 235, 236, 239, 240, 273, 274, 280, 281], "controllabilti": [42, 101], "maximum": [42, 101, 132, 159, 162, 215, 216, 234, 267, 269, 281], "matrix_rank": [42, 101, 132, 162], "int64": [42, 101, 132, 162, 205], "doprint": [43, 102], "decibel": [45, 92, 104, 124], "nanj": 46, "num_point": 47, "zero_check": 47, "try_method": 47, "except": [47, 81, 239, 247, 259, 267, 268, 269], "diod": 47, "df_valu": 47, "path": [48, 49, 202, 267, 281], "describingfunctionrespons": [48, 49], "refin": [48, 49], "point_label": 48, "2g": 48, "warn_nyquist": [48, 49, 159, 160], "nyquist_plot": [48, 49, 160, 269, 272, 281], "_check_kwarg": [49, 160, 184, 185, 186, 187], "343844998258643": 49, "4142293090899216": 49, "bu": [50, 89, 106, 120, 232, 280], "gw": [50, 89, 106, 120], "cx": [50, 89, 106, 120, 232, 270, 280], "du": [50, 89, 106, 120, 232, 280], "unbias": [50, 89, 106, 120], "nn": [50, 89, 106, 120], "stationari": [50, 89, 106, 120], "x_e": [50, 56, 89, 106, 120], "produc": [50, 65, 66, 81, 89, 106, 120, 182, 234, 244, 256, 269], "correl": [50, 89, 106, 120, 284], "eig": [50, 89, 106, 120, 281], "dlqr": [50, 89, 90, 106, 120, 121], "lqe": [50, 51, 90, 106, 107, 121], "sum_0": [51, 107, 175], "infti": [51, 90, 107, 121, 269, 271], "dsy": [51, 107, 239], "dlqe": [51, 89, 90, 107, 120, 121], "sylvest": [52, 91, 108, 123], "sylvestor": [52, 91, 108, 123], "strictly_prop": [53, 82, 109, 139, 203, 234], "random": [53, 109, 139, 203, 237, 239, 267, 273, 276, 284], "yy": [54, 94, 110, 126, 270, 271], "br": [54, 110], "dr": [54, 110], "samet": [54, 110], "oymak": [54, 110], "necmiy": [54, 110], "ozai": [54, 110], "asymptot": [54, 110], "identif": [54, 94, 110, 126], "arxiv": [54, 110], "org": [54, 94, 110, 126, 196, 240, 247, 254, 259, 266, 282], "1806": [54, 110], "05722": [54, 110], "notimplementederror": [55, 112], "ix": 56, "idx": [56, 159, 191, 194, 199, 201], "dx0": 56, "return_result": 56, "sought": 56, "search": 56, "yeq": 56, "optimizeresult": [56, 164, 166], "u_": [56, 175, 234, 241, 242, 271], "breakpoint": 57, "var": [57, 58, 59, 62, 235], "piecewis": 57, "On": [57, 269], "interv": [57, 280], "interior": 57, "spine": 57, "ith": [57, 58, 59, 62], "coeff": [57, 58, 59, 62, 63], "tlist": [57, 58, 59, 62, 63], "eval_deriv": [57, 58, 59, 62], "kth": [57, 58, 59, 62], "var_ncoef": [57, 58, 59, 62], "jth": 58, "nvar": 58, "foward": 60, "composit": 60, "undefin": [61, 64], "info": [61, 151, 244, 256, 274, 283], "flaglen": 63, "manner": 63, "mape": 64, "t0": 65, "trajectory_constraint": [65, 66, 163, 165, 175, 239], "prode": [65, 66], "twice": [65, 66], "linearconstraint": [65, 66, 163, 165, 175, 267], "nonlinearconstraint": [65, 66, 163, 165, 175, 267], "would": [65, 66, 175, 202, 232, 234, 247, 259, 271, 281, 284], "comparison": [65, 66, 175, 236, 239, 247, 259, 273, 276], "against": [65, 66, 163, 165, 175, 244, 256], "fun": [65, 66, 163, 165, 175], "minimize_kwarg": [65, 66, 163, 165, 235, 267], "fine": [65, 66, 167, 175, 247, 259], "tune": [65, 66, 81, 167, 175, 202, 269], "minimize_": [65, 66], "optimalcontrolproblem": [65, 66, 164, 166, 167, 175], "trajectory_cost": 66, "optimi": 66, "succeed": [66, 283], "failur": 66, "violat": [66, 244, 256], "overcom": [66, 70], "As": [67, 122, 163, 165, 234, 247, 259, 269, 273, 283], "infer": [67, 122], "yout": [67, 79, 80, 118, 119, 122, 144, 217, 279, 282], "xout": [67, 118, 119, 122, 144, 240], "evenli": [67, 81, 122], "undetermin": 67, "exponenti": [67, 182], "algorithm": [67, 81, 94, 122, 126, 133, 135, 178, 188, 189], "dlsim": 67, "copmut": [68, 113], "evalfr": [69, 114, 272], "ensur": [69, 114, 280], "factor": [69, 75, 114, 116, 270, 271, 272], "control_bode_plot": [69, 114], "55": [69, 114, 247, 259], "43747231": [69, 114], "47766549": [69, 114], "97225895": [69, 114], "12611087": [69, 114], "14294316": [69, 114], "5764547": [69, 114], "1i": [69, 114], "10i": [69, 114], "unchang": 70, "shift": [70, 272, 280, 281], "nl": [70, 196, 205], "enough": [70, 196, 217], "2x2": [71, 72, 115, 269, 274], "frequencyplotdata": [71, 115], "gangof4_respons": [71, 115, 269], "passiv": [73, 74, 85], "ifp": [73, 85], "ofp": [74, 85], "gramian": [75, 77, 116, 117], "choleski": [75, 116], "cf": [75, 116, 247, 259], "controlslycot": [75, 116], "sb03md": [75, 116], "sb03od": [75, 116], "wc": [75, 116, 281], "wo": [75, 116, 281], "rc": [75, 116], "ro": [75, 116, 267, 283], "nmea": [76, 78], "ncon": [76, 78], "h_2": [76, 277], "sb10hd": 76, "load": [76, 78], "sisi": [76, 78], "trivial": [76, 78, 274], "uniti": [76, 78, 234], "p11": [76, 78, 151], "p12": [76, 78, 151], "p21": [76, 78, 151], "p22": [76, 78], "synthes": [76, 78, 151], "gram": [77, 117], "practic": [77, 117], "product": [77, 117, 183, 243, 255, 282], "effici": [77, 117, 239, 270, 273], "soon": [77, 117], "hsvd": 77, "cl": [78, 151], "gam": [78, 241, 242], "norm": [78, 151, 274, 277, 278], "rcond": [78, 151, 278], "sb10ad": 78, "t_num": [79, 80, 216, 217], "implus": 79, "durat": [79, 80, 118, 119, 144, 216, 217, 241, 242], "autocomput": [79, 80, 118, 119, 144, 216, 217], "report": [79, 217, 277], "alter": 79, "aystem": 79, "ignore_error": 81, "solve_ivp_kwarg": [81, 163, 165, 283], "t_eval": [81, 239, 267], "treat": [81, 82, 86], "broadcast": [81, 163, 175, 234], "flatten": 81, "smaller": [81, 267, 273, 280], "pad": [81, 234], "dure": [81, 151, 164, 166, 247, 259], "runtimeerror": [81, 268], "do": [81, 86, 94, 118, 126, 134, 144, 179, 191, 194, 197, 199, 201, 207, 225, 226, 227, 234, 246, 254, 258, 266, 267, 269, 270, 271, 274, 282, 283], "solve_ivp_method": [81, 163, 165], "rk45": [81, 283], "xsys_0": 81, "discontinu": [81, 148, 224], "sometim": [81, 233, 234, 267], "erron": 81, "toler": [81, 127, 150, 158], "ivp_method": 81, "ivp_keyword": 81, "od": [81, 268], "solver": [81, 231, 283], "lsoda": 81, "rtol": [81, 283], "ivp_kwarg": 81, "check_unus": 82, "add_unus": 82, "debug": [82, 234, 283], "linearicsystem": [82, 231], "connection1": 82, "connection2": 82, "spec1": 82, "spec2": 82, "subsys_i": 82, "inp_j": 82, "recogn": [82, 234], "inp_j1": 82, "inp_jn": 82, "out_j": 82, "sum": [82, 141, 175, 211, 218, 267, 268, 274, 275], "namess": 82, "long": [82, 217, 280], "matach": 82, "summat": 82, "leav": [82, 189, 234, 271], "low": [82, 274, 283], "subsi": [82, 234], "neither": [82, 165, 175], "nor": [82, 175], "disabl": 82, "besid": 82, "duplic": 82, "detect": [82, 215, 254, 266], "understand": [82, 234, 247, 259], "why": [82, 247, 259], "someth": [82, 254, 266], "simplifi": [82, 234, 244, 256, 267, 271], "notat": [82, 163, 196, 234, 241, 242], "basenam": 82, "summing_junct": [82, 232, 234, 280], "sumblk": [82, 218, 234], "i1": [82, 234], "iN": [82, 234], "signal_j": 82, "unexpect": 82, "wrong": [82, 234, 281], "ofp_index": 85, "ifp_index": 85, "queri": 85, "sens": [85, 93, 125], "simultan": 85, "guarante": [85, 283], "mccourt": 85, "michael": [85, 245, 257], "pano": 85, "antsakli": 85, "dissip": 85, "obj": 87, "isinst": [87, 280], "kw": 88, "equlibrium": 88, "linearized_system_name_prefix": 88, "linearized_system_name_suffix": 88, "dx_e": [89, 120], "furthermor": [89, 90, 120, 121, 267], "int_0": [90, 121, 175, 267, 271], "gm": [93, 125, 215, 272], "pm": [93, 125, 215, 272], "wcg": [93, 125, 272], "wcp": [93, 125, 272], "smallest": [93, 125], "deviat": [93, 125, 234, 247, 259, 281], "likewis": [93, 125], "cb": [94, 126], "cab": [94, 126], "ill": [94, 126], "pose": [94, 126, 267], "arrang": [94, 126, 138, 199, 201], "juang": [94, 126], "phan": [94, 126], "horta": [94, 126], "longman": [94, 126], "experi": [94, 126], "journal": [94, 126], "guidanc": [94, 126], "320": [94, 126], "329": [94, 126], "2012": [94, 126], "doi": [94, 126], "2514": [94, 126], "21006": [94, 126], "interspers": 97, "plotstyle1": 97, "plotstylen": 97, "freq_rang": 97, "boolean": [97, 130, 137, 141, 156, 163, 165, 175, 211, 247, 259], "sysc": [98, 204], "gd": [98, 204, 275], "versu": [105, 236], "invert": [105, 208, 268, 269], "gangof4_plot": [115, 272], "imo": 119, "verbos": [127, 150, 182, 239], "sysr": [127, 150], "clean": [127, 150], "elim": [128, 153], "gn": [129, 154, 234], "chart": [130, 155, 156, 269], "imag": [131, 159, 160, 225, 236, 272], "numdeg": [133, 178], "golub": [133, 178], "van": [133, 178, 245, 257], "loan": [133, 178], "pp": [133, 135, 178, 188, 189, 268, 269], "572": [133, 178], "574": [133, 178], "vajta": [133, 178], "remark": [133, 178], "pad\u00e9": [133, 178], "tempu": [133, 178], "intcom": [133, 178], "symposium": [133, 178], "60": [133, 178, 240, 268, 274, 276, 279, 281], "18": [133, 178, 239, 240, 271, 273, 283], "sys3": [134, 140, 179, 206], "place_pol": [135, 188], "tit": [135, 188], "yang": [135, 188, 245, 257], "global": [135, 188, 269], "converg": [135, 188, 267], "ieee": [135, 188, 189, 277, 278], "transact": [135, 188], "vol": [135, 188, 189, 277, 278], "41": [135, 188, 239, 272, 273], "1432": [135, 188], "1452": [135, 188], "1996": [135, 188], "acker": [135, 188, 189], "xlim": [138, 191, 194, 199, 201, 274, 275, 281], "ylim": [138, 191, 194, 199, 201, 274, 275], "root_locus_plot": [138, 199, 269], "randomli": [139, 203], "miss": [139, 182, 203, 247, 259], "postiv": [139, 203], "unless": [140, 158, 206, 235], "initial_gain": [141, 191, 194, 199, 201, 211], "xlim_rlocu": [141, 211], "ylim_rlocu": [141, 211], "plotstr_rlocu": [141, 211], "c0": [141, 211], "rlocus_grid": [141, 211], "margins_bod": [141, 211], "tvect": [141, 211], "kvect": [141, 211], "inspir": [141, 211], "clickabl": [141, 211], "click": [141, 191, 194, 202, 211, 269], "bottom": [141, 211, 222, 234, 269], "bdgalg": [141, 211], "your": [141, 202, 211, 231, 233, 247, 259, 267, 280], "view": [141, 164, 166, 211, 247, 259, 269, 281], "accomod": [141, 211], "auto": [141, 191, 192, 194, 199, 201, 211], "timestep": [141, 211], "alreadi": [142, 145, 148, 155, 212, 219, 224, 233, 271, 280], "everyth": [142, 212, 231, 232, 244, 247, 256, 259, 282], "permiss": [142, 212, 243, 246, 255, 258], "too": [142, 212, 217, 267, 283], "y1": [142, 212, 232, 270, 271, 274, 275, 283], "yq": [142, 212], "feed": [142, 212], "sys_tf": [142, 143, 145, 146, 212, 213, 219, 220], "invalid": [143, 145, 146, 213, 219, 220], "sys_ss": [143, 145, 213, 219], "nest": [145, 219, 272], "unequ": [145, 146, 219, 220], "incorrect": [145, 146, 219, 220], "st": [145, 219], "denot": [145, 219, 267, 271], "appear": [146, 220, 233, 234, 269], "bug": [146, 220], "rare": [146, 220, 281], "283185307179586": [148, 224], "angle_out": [148, 224], "jump": [148, 224], "theta1": [148, 224], "theta2": [148, 224], "augw": 151, "bdschur": 152, "modr": 153, "cl_mag": 155, "cl_phase": 155, "line_styl": 155, "label_cl_phas": 155, "nichol": [155, 156, 269], "iso": [155, 254, 266], "gca": [155, 191, 194, 199, 201, 269, 272], "cl_mag_lin": 155, "cl_phase_lin": 155, "cl_mag_label": 155, "mcontour": 155, "cl_phase_label": 155, "ncontour": 155, "kincar_upd": 157, "kincar_output": 157, "kincar": [157, 235], "05": [157, 159, 160, 216, 239, 240, 241, 242, 269, 270, 271, 272, 275, 281, 284], "print_warn": 158, "accuraci": [158, 236], "uncertain": 158, "norm_valu": 158, "round": [158, 280, 284], "label_freq": 159, "unit_circl": 159, "mt_circl": 159, "ms_circl": 159, "nyqist": [159, 160], "segment": [159, 160], "mirror": [159, 160, 225], "reflect": [159, 160, 269], "small": [159, 160, 217, 267, 269, 271, 280, 281], "indent": [159, 160], "explicitli": [159, 160, 234, 269, 283], "nyquistresponsedata": [159, 160], "erspons": 159, "read": 159, "complementari": [159, 269, 271, 272, 275], "arrow": [159, 181, 182, 268, 269, 272], "arrow_s": 159, "arrowhead": 159, "arrow_styl": 159, "patch": [159, 273], "arrowstyl": 159, "encirclement_threshold": [159, 160], "threshold": [159, 160, 216], "net": [159, 160, 231], "indent_direct": [159, 160], "indent_point": [159, 160], "indent_radiu": [159, 160], "everi": [159, 232, 234, 267], "nth": [159, 239, 273], "max_curve_magnitud": [159, 269], "max_curve_offset": [159, 269], "overlap": 159, "unscal": 159, "primary_styl": [159, 160], "start_mark": 159, "marker": [159, 191, 194, 199, 201, 236], "mark": [159, 191, 194, 199, 201, 245, 257, 269], "start_marker_s": 159, "warn_encircl": [159, 160], "meet": [159, 160], "nsy": [159, 191, 194, 199, 201], "exactli": [159, 160, 267, 283], "exact": [159, 273, 280], "resul": [159, 160, 283], "dashdot": [159, 160], "elem": 160, "releas": [160, 226, 244, 254, 256, 266], "integral_cost": [163, 165, 283], "terminal_constraint": [163, 165, 167, 175, 267, 283], "trajectory_method": [163, 175], "kwargs_check": 163, "terminologi": 163, "hope": 163, "easier": 163, "rememb": [163, 247, 259], "carri": [163, 167, 175, 236, 239, 267, 269], "shoot": [163, 175, 239, 270, 273], "colloc": [163, 175], "ntimept": 163, "extens": [163, 175], "basicconfig": [163, 167, 283], "enabl": [163, 164, 166, 167, 202], "minimize_method": [163, 165, 175, 267, 283], "minimize_opt": [163, 165, 267, 283], "ocp": [163, 164], "compute_trajectori": 163, "_cost_funct": 163, "propos": [163, 165], "_constraint_funct": 163, "solve_ivp_opt": [163, 165], "compute_mpc": 163, "fail": 163, "return_st": [163, 164, 166, 175], "print_summari": [163, 164, 165, 166, 175], "our": [163, 175, 239, 267, 271, 280, 281, 283], "re": [163, 164, 165, 166, 175, 244, 256, 267, 270, 280], "optimalcontrolresult": [163, 175], "bundl": [163, 165, 175, 267], "create_mpc_iosystem": [163, 240], "mpc": [163, 165, 240], "exit": [164, 166], "system_simul": [164, 166], "eqconst": [164, 166], "_evalu": [164, 166], "inequ": [164, 166], "optimz": [164, 166], "_process_tim": [164, 166], "spent": [164, 166], "__class_getitem__": [164, 166], "pep": [164, 166], "585": [164, 166], "__contains__": [164, 166], "__delattr__": [164, 166], "delet": [164, 166, 244, 256], "__delitem__": [164, 166], "__dir__": [164, 166], "dir": [164, 166, 181, 186, 268, 269], "__eq__": [164, 166], "__ge__": [164, 166], "__getattribute__": [164, 166, 247, 259], "getattr": [164, 166], "__gt__": [164, 166], "__hash__": [164, 166], "__ior__": [164, 166], "__le__": [164, 166], "__lt__": [164, 166], "__ne__": [164, 166], "__new__": [164, 166, 247, 259], "__or__": [164, 166], "__reversed__": [164, 166], "__ror__": [164, 166], "__setattr__": [164, 166], "__setitem__": [164, 166], "__sizeof__": [164, 166], "memori": [164, 166], "byte": [164, 166], "fromkei": [164, 166], "unrepresent": [164, 166], "keyerror": [164, 166], "popitem": [164, 166], "lifo": [164, 166], "setdefault": [164, 166], "lack": [164, 166], "likelihood": [165, 169, 267], "apppli": 165, "complement": 165, "describedf": 165, "indici": 165, "oep": [165, 166, 239, 267], "compute_estim": [165, 239, 267], "underl": 165, "short": [165, 175, 280], "summari": [165, 175, 239, 248, 260], "optimalestimationresult": 165, "create_mhe_iosystem": [165, 239, 267], "estimationproblem": 166, "estiamt": 166, "put": [168, 247, 259, 269, 273], "disturbanc": 168, "rv": [169, 236], "rw": [169, 236], "gaussian": [169, 267, 284], "r_v": [169, 267, 284], "r_w": [169, 267], "cost_fun": [169, 174], "polytop": [170, 171, 172, 176], "mimim": 175, "formul": [175, 234, 236, 267, 282], "x_k": [175, 267], "u_k": [175, 267], "x_n": [175, 267], "t_n": 175, "t_0": 175, "u_n": 175, "henc": [175, 205, 271], "x_omega": 180, "x_gain": 180, "pointdata": [181, 184, 185, 186, 187], "timedata": [181, 185, 186, 268], "gridtyp": [181, 184, 185, 186, 187, 268, 269], "gridspec": [181, 184, 185, 186, 187, 268, 269], "plot_streamlin": [181, 268], "plot_vectorfield": [181, 268], "plot_equilpoint": [181, 269], "plot_separatric": [181, 268], "suppress_warn": [181, 185, 186, 187], "field": [181, 182, 184, 185, 186, 187, 247, 259, 268], "stream": [181, 182, 186], "xmin": [181, 184, 185, 186, 187, 191, 194], "xmax": [181, 184, 185, 186, 187, 191, 194], "ymin": [181, 184, 185, 186, 187, 191, 194], "ymax": [181, 184, 185, 186, 187, 191, 194], "streamlin": [181, 182, 185, 268, 269], "meshgrid": [181, 182, 184, 185, 186, 187, 268, 269], "mesh": [181, 184, 185, 186, 187, 269], "boxgrid": [181, 184, 185, 186, 187, 268], "edg": [181, 183, 184, 185, 186, 187], "circlegrid": [181, 184, 185, 186, 187, 268, 269], "plot_": 181, "fcn": 181, "flow": [181, 186, 269], "vectorfield": [181, 268], "equilpoint": 181, "separatric": [181, 269], "artist": 181, "quiver": [181, 187], "odefun": 182, "lingrid": 182, "lintim": 182, "logtim": 182, "parm": 182, "tfirst": 182, "phase_plane_plot": [182, 268, 269], "planar": [182, 184, 270, 271, 272, 273], "phase_plane_map": 182, "tmax": 182, "odeint": 182, "dxdt": 182, "npt": 182, "absent": [182, 233, 269], "box_grid": 182, "box": [182, 183, 272], "xval": 183, "yval": 183, "separatr": 185, "elmeent": 185, "dtime": 189, "untouch": 189, "sb01bd": 189, "varga": 189, "contrast": 189, "howev": [189, 243, 255, 280, 281], "tran": [189, 277, 278], "ac": 189, "26": [189, 239, 273], "517": 189, "519": 189, "1981": 189, "pzmap_data": 190, "polezeromap": [190, 199, 201], "marker_s": [191, 194], "marker_width": [191, 194], "polezerodata": [191, 194, 200], "pzmap_respons": [191, 194], "rootlocus_respons": [191, 194], "additon": [191, 194, 199, 201], "pzmap": [191, 272], "rlocu": [191, 194, 199, 201, 279], "marker_color": [191, 194], "behav": [191, 194, 199, 201, 247, 259, 280], "nrow": 192, "ncol": [192, 273], "ax_arrai": [192, 269], "hysteret": 196, "fbs2e": [196, 234, 235, 267, 268], "fbsbook": [196, 282], "switch": 196, "rldata": 200, "input_sign": 202, "kp0": 202, "ki0": 202, "kd0": 202, "deltak": 202, "001": [202, 232], "c_ff": 202, "derivative_in_feedback_path": 202, "pid": 202, "sisotool": 202, "investig": [202, 273], "One": [202, 269], "kd": 202, "repeatedli": [202, 267], "until": [202, 216, 247, 259], "Then": [202, 267], "previou": [202, 267, 274, 282, 283], "examin": 202, "intial": 202, "satisfactori": 202, "zoom": 202, "magnifi": 202, "glass": 202, "deactiv": 202, "magnif": 202, "abl": [202, 280], "inlin": [202, 271], "plote": 202, "c_f": 202, "c_b": 202, "subject": [202, 246, 258, 267], "der": 202, "perturb": 202, "keywoard": 202, "closedloop": [202, 240], "session": 202, "asymmetr": 205, "bia": 205, "care": [205, 234], "timescal": [208, 281], "invers": [208, 274, 275], "gt": [208, 236, 239, 240, 273], "singular_values_respons": [209, 269], "87": [210, 216, 284], "86": [210, 281, 284], "108": 210, "109": 210, "returnal": 215, "epsw": 215, "minimum": [215, 216, 234, 269, 281], "revert": 215, "inaccuraci": 215, "likei": 215, "aris": [215, 243, 246, 255, 258], "sm": 215, "wpc": [215, 272], "wgc": [215, 272], "wm": 215, "yfinal": 216, "settlingtimethreshold": 216, "02": [216, 240, 269, 271, 272, 280], "risetimelimit": 216, "rise": 216, "settl": [216, 281], "lower_threshold": 216, "upper_theshold": 216, "risetim": 216, "90": [216, 272], "settlingtim": 216, "settlingmin": 216, "settlingmax": 216, "overshoot": [216, 281], "percentag": 216, "undershoot": 216, "peaktim": 216, "steadystatevalu": 216, "th": 216, "256": 216, "071": 216, "9011": 216, "208": 216, "85": [216, 284], "88": [216, 284], "187": 216, "212": 216, "061": 216, "209": 216, "9184": 216, "28": [216, 239, 240, 273, 281], "242": 216, "fastest": 217, "tfinal": 217, "slowest": 217, "exclud": 217, "5000": 217, "junction": 218, "plot_output": 222, "overlay_trac": [222, 269], "overlay_sign": [222, 269], "add_initial_zero": 222, "relabel": [222, 280], "overlaid": [222, 269], "timeplot": 222, "input_prop": [222, 269], "output_prop": [222, 269], "time_label": 222, "trace_prop": [222, 269], "reus": 222, "font": 222, "convent": [225, 227, 231], "ten": 225, "whatev": 226, "linearli": 228, "nxn": 228, "p_j": 230, "z_1": 230, "z_2": 230, "z_m": 230, "p_1": 230, "p_2": 230, "p_n": 230, "overview": 231, "instal": [231, 244, 256], "subpackag": 231, "simplif": [231, 234], "usag": 231, "setup": [231, 234, 271], "tip": 231, "script": [231, 247, 259, 270, 272], "googl": 231, "colab": 231, "latest": [231, 254, 266], "git": [231, 244, 256], "clone": 231, "pytest": 231, "directori": [231, 233, 244, 247, 256, 259], "pyarg": 231, "contribut": 231, "welcom": [231, 233], "fork": 231, "send": 231, "pull": [231, 244, 256, 271], "request": 231, "pleas": [231, 247, 259], "wiki": [231, 247, 259, 271], "instruct": 231, "link": [231, 234, 247, 259, 268], "tracker": [231, 254, 266], "mail": 231, "sourceforg": 231, "mailman": 231, "sawyer": [232, 280], "fuller": [232, 280], "2023": [232, 239, 241, 242, 280], "04": [232, 281], "rout": 232, "y2": [232, 270, 271, 274, 275, 283], "arbitrari": [232, 234], "rllrll": 232, "rll": [232, 280], "hspace": [232, 280], "1em": [232, 280], "phantom": [232, 280], "hline": [232, 241, 242, 280], "summer": 232, "zc": [232, 281], "pc": [232, 236], "lopass": 232, "thetadot": 232, "thetaref": 232, "rllrllrllrll": 232, "sys_thetaref_to_theta": 232, "sys_d_to_theta": 232, "goal": [233, 272, 283], "thing": [233, 234, 239, 247, 259, 267, 284], "mind": 233, "comma": 233, "brace": 233, "conda": 233, "pip": [233, 244, 256], "advanc": 233, "anaconda": 233, "forg": 233, "openbla": 233, "channel": [233, 269], "ll": 233, "fortran": 233, "compil": [233, 244, 256], "window": [233, 254, 266, 267], "recommend": 233, "insur": [233, 280], "verifi": [233, 239, 244, 256], "project": 233, "download": 233, "unpack": 233, "home": 233, "nlsy": [234, 241, 242, 268, 269], "predat": 234, "prei": 234, "predprey_rh": 234, "56": 234, "125": 234, "local": [234, 236, 239, 240, 267, 271], "food": 234, "u_0": 234, "dh": 234, "dl": 234, "io_predprei": 234, "predprei": 234, "year": 234, "hare": 234, "lynx": 234, "popul": 234, "eqpt": 234, "lin_predprei": 234, "build": 234, "affin": 234, "io_control": [234, 241, 242], "ld": 234, "predatori": 234, "io_clos": [234, 241, 242], "commonli": 234, "x1eq": 234, "x2eq": 234, "proc": [234, 269], "four": [234, 269, 272, 281], "cumbersom": 234, "especi": 234, "receiv": [234, 248, 260], "unconnect": 234, "lookup": 234, "despit": 234, "simplfi": 234, "explict": 234, "clsys1": 234, "clsys2": 234, "simpler": [234, 267], "clsys3": 234, "clsys4": 234, "could": [234, 247, 259], "clsys5": 234, "go": [234, 272, 281], "p1": [234, 275], "pn": 234, "s1": [234, 274, 275], "sq": 234, "chapter": [235, 269, 270, 271, 272], "jul": [235, 281], "differneti": 235, "bicycl": [235, 236, 281, 282, 283], "thdot_v": [235, 281], "rh": 235, "xy": [235, 270, 281, 283], "plot_result": [235, 239, 273], "approach": [235, 267, 280, 283], "traj1": [235, 281], "quicker": 235, "timepoint": 235, "plu": [235, 282, 283], "later": [235, 236, 239, 247, 259, 270, 272, 282, 283], "traj2": [235, 281], "penalti": [235, 240], "resolv": [235, 283], "input_range_constraint": [235, 240, 267, 281, 283], "traj3": [235, 281], "batch": 235, "bring": [235, 280], "traj4": 235, "trust": [235, 283], "constr": [235, 283], "feb": [236, 239, 240, 273, 283, 284], "2022": [236, 273, 284], "longitudin": 236, "sp": [236, 239, 284], "opt": [236, 239, 267, 281], "ebarstyl": 236, "elinewidth": 236, "capsiz": 236, "xdstyle": 236, "linewidth": [236, 239, 269, 273, 281], "markers": 236, "automobil": 236, "align": [236, 239, 273], "phi": [236, 267, 281, 282, 283], "orient": [236, 239, 271, 273, 282], "maxsteer": [236, 267, 281, 282, 283], "plot_lanechang": [236, 283], "lt": [236, 239, 240, 273], "39": [236, 239, 240, 273], "_vehicle_upd": 236, "0x16603bd90": 236, "_vehicle_output": 236, "0x16605c0d0": 236, "_vehicle_flat_forward": 236, "0x10dba2f80": 236, "_vehicle_flat_revers": 236, "0x16603bd00": 236, "motion": [236, 271, 281], "arang": [236, 237, 239, 240, 241, 242, 280], "bd": 236, "discsi": 236, "0000000e": 236, "0004445e": 236, "07": [236, 273, 274, 281], "33333333": 236, "c_lon": 236, "rw_lon": 236, "w_lon": 236, "white_nois": [236, 239, 273, 284], "c_lat": 236, "rw_lat": 236, "w_lat": 236, "vstack": [236, 239, 269, 273], "block_diag": 236, "create_estimator_iosystem": [236, 239], "_estim_upd": [236, 239], "0x166ac1120": 236, "_estim_output": [236, 239], "0x166ac0dc0": 236, "comment": 236, "hstack": [236, 239, 267, 273], "reshap": [236, 239, 273], "estim_resp": 236, "t_predict": 236, "u_predict": 236, "ones_lik": [236, 239, 273, 280, 283], "predict_resp": 236, "errorbar": 236, "lim": 236, "insight": [236, 269], "focus": 236, "bit": [236, 280, 281], "fashion": 236, "xkkm1": 236, "pkkm1": 236, "xkk": 236, "pkk": 236, "save": [236, 281], "markov": 237, "create_impulse_respons": 237, "helper": [237, 269, 280], "ndmin": 237, "randn": 237, "ir_tru": 237, "ir_est": 237, "emul": 238, "intent": 238, "peopl": 238, "who": 238, "familiar": [238, 247, 259, 275], "ddot": [239, 273], "f_1": [239, 271, 273], "f_2": [239, 271, 273], "d_x": [239, 273], "d_y": [239, 273], "n_x": [239, 273, 278], "n_y": [239, 273, 277, 278], "n_": [239, 273], "vec": [239, 273], "n_z": [239, 273], "pvtol": [239, 267, 270, 271, 272, 273], "noisy_pvtol": 239, "pvtol_noisi": [239, 273], "pvt": 239, "equiblirum": [239, 273], "xe": [239, 270, 271, 273], "ue": [239, 270, 271, 273], "meter": 239, "pvtol_lin": [239, 273], "f1": [239, 273], "f2": [239, 273], "x3": [239, 242, 273], "x4": [239, 242, 273], "x5": [239, 273], "_pvtol_upd": 239, "0x113697ac0": 239, "_pvtol_output": 239, "0x113697a30": 239, "_pvtol_flat_forward": 239, "0x167b2fd00": 239, "_pvtol_flat_revers": 239, "0x167b2fbe0": 239, "nx": [239, 273], "_noisy_upd": 239, "0x167b2fc70": 239, "_noisy_output": 239, "0x167b2ff40": 239, "physic": [239, 270, 273, 281], "motiv": [239, 270, 273], "cm": [239, 241, 242, 270, 273, 281], "loss": [239, 243, 255, 270, 273], "qx": [239, 270, 273], "qu": [239, 273], "lqr_ctrl": [239, 273], "lqr_clsy": [239, 273], "pvtol_noisy_x0": [239, 273], "pvtol_noisy_x1": [239, 273], "pvtol_noisy_x2": [239, 273], "pvtol_noisy_x3": [239, 273], "pvtol_noisy_x4": [239, 273], "pvtol_noisy_x5": [239, 273], "0x167b58dc0": 239, "0x167b58e50": 239, "statefbk": [239, 273], "783": 239, "userwarn": 239, "34": [239, 247, 259, 273], "qv": [239, 273], "qw": [239, 273], "seed": [239, 273, 284], "117": [239, 273], "v0": [239, 281], "uvec": 239, "lqr_resp": [239, 273], "lqr0_resp": 239, "lqr0_fine": 239, "640x480": 239, "plot_state_comparison": 239, "est_stat": 239, "act_stat": 239, "estimated_label": 239, "actual_label": 239, "plot_estimator_respons": 239, "kf_resp": 239, "0x1685997e0": 239, "0x16859a4d0": 239, "000000e": 239, "766654e": 239, "qwinv": [239, 273], "estimator_upd": [239, 273], "grab": [239, 271, 273], "xhatdot": [239, 273], "pdot": [239, 273], "estimator_output": 239, "ekf": 239, "xh": [239, 273], "xh0": [239, 273], "xh1": [239, 273], "xh2": [239, 273], "xh3": [239, 273], "xh4": [239, 273], "xh5": [239, 273], "19": [239, 271, 273], "21": [239, 247, 259, 273], "22": [239, 269, 273, 281], "23": [239, 247, 259, 273, 281], "29": [239, 240, 273], "31": [239, 273], "33": [239, 273], "35": [239, 272, 273, 281], "36": [239, 272, 273], "37": [239, 273], "38": [239, 273], "0x1685100d0": 239, "0x168512170": 239, "ekf_resp": 239, "gaussian_likelihood_cost": 239, "init_cost": 239, "optimalestimationproblem": [239, 267], "statist": 239, "5051": 239, "354": 239, "3319137685172": 239, "free": [239, 246, 258, 267], "perfect": 239, "noisefree_cost": 239, "oep0": 239, "est0": 239, "9464": 239, "212754409": 239, "97292745": 239, "v_clip": 239, "clipped_resp": 239, "u_clip": 239, "y_clip": 239, "traj_constraint": 239, "disturbance_range_constraint": 239, "oep_clip": 239, "est_clip": 239, "ekf_unclip": 239, "3572": 239, "3756": 239, "531": 239, "7451775567271": 239, "shorter": [239, 280], "mhe_timept": 239, "est_mh": 239, "0x168af1360": 239, "0x168598940": 239, "mhe_resp": 239, "resimul": 239, "replic": 240, "mpt3": 240, "regulationproblem": 240, "99": 240, "09": [240, 272, 279], "94": 240, "81": 240, "95": [240, 281], "_x": [240, 273], "0x167dff0a0": 240, "0x167dff130": 240, "nsim": 240, "tout": [240, 282], "414": 240, "66523705": 240, "01149905": 240, "23159795": 240, "03076594": 240, "00674534": 240, "mrac_siso_lyapunov": 241, "ex": [241, 242, 277, 278, 282], "astr\u00f6m": [241, 242], "wittenmark": [241, 242], "2008": [241, 242], "nhan": [241, 242], "nguyen": [241, 242], "2018": [241, 242], "io_plant": [241, 242], "am": [241, 242], "bm": [241, 242], "dm": [241, 242, 245, 247, 257, 259], "io_ref_model": [241, 242], "xm": [241, 242], "ref_model": [241, 242], "kx": [241, 242], "kr": [241, 242, 281], "kr_star": [241, 242], "kx_star": [241, 242], "adaptive_controller_st": [241, 242], "_t": 241, "xc": [241, 242], "uc": [241, 242], "signb": [241, 242], "d_x1": [241, 242], "d_x2": [241, 242], "adaptive_controller_output": [241, 242], "tend": [241, 242], "t_vec": [241, 242], "r_vec": [241, 242], "rect": [241, 269], "tout1": [241, 242], "yout1": [241, 242], "xout1": [241, 242], "tout2": [241, 242], "yout2": [241, 242], "xout2": [241, 242], "tout3": [241, 242], "yout3": [241, 242], "xout3": [241, 242], "black": [241, 242], "fontsiz": [241, 242, 269], "x_m": [241, 242], "k_r": [241, 242], "ast": [241, 242], "k_x": [241, 242], "mrac_siso_mit": 242, "d_x3": 242, "d_x4": 242, "copyright": [243, 246, 255, 258], "2020": [243, 255], "jeff": [243, 255], "forcier": [243, 255], "2011": [243, 255], "kenneth": [243, 255], "reitz": [243, 255], "2010": [243, 255], "armin": [243, 255], "ronach": [243, 255], "reserv": [243, 255], "redistribut": [243, 255], "binari": [243, 255], "theme": [243, 255], "permit": [243, 246, 255, 258], "met": [243, 255, 272], "retain": [243, 255], "notic": [243, 246, 255, 258, 281], "disclaim": [243, 255], "reproduc": [243, 244, 247, 255, 256, 259], "contributor": [243, 255], "endors": [243, 255], "promot": [243, 255], "softwar": [243, 246, 255, 258], "prior": [243, 255], "BY": [243, 255], "THE": [243, 246, 255, 258], "holder": [243, 246, 255, 258], "AND": [243, 246, 255, 258], "AS": [243, 246, 255, 258], "OR": [243, 246, 255, 258], "impli": [243, 246, 255, 258, 281, 284], "warranti": [243, 246, 255, 258], "BUT": [243, 246, 255, 258], "NOT": [243, 246, 255, 258], "TO": [243, 246, 255, 258], "OF": [243, 246, 255, 258], "merchant": [243, 246, 255, 258], "fit": [243, 246, 255, 258], "FOR": [243, 246, 255, 258], "purpos": [243, 246, 247, 255, 258, 259, 271], "NO": [243, 246, 255, 258], "event": [243, 246, 255, 258], "owner": [243, 255], "BE": [243, 246, 255, 258], "liabl": [243, 246, 255, 258], "indirect": [243, 255], "incident": [243, 255], "exemplari": [243, 255], "consequenti": [243, 255], "damag": [243, 246, 255, 258], "procur": [243, 255], "substitut": [243, 255], "servic": [243, 255], "profit": [243, 255], "busi": [243, 255], "interrupt": [243, 255], "ON": [243, 255], "liabil": [243, 246, 255, 258], "contract": [243, 246, 255, 258], "tort": [243, 246, 255, 258], "neglig": [243, 255], "IF": [243, 255], "advis": [243, 255], "SUCH": [243, 255], "bleach": [244, 256], "certain": [244, 256], "pure": [244, 256, 280], "libari": [244, 256], "licens": [244, 254, 256, 266], "repo": [244, 256], "becom": [244, 247, 256, 259, 267], "txt": [244, 256], "hash": [244, 256], "hashin": [244, 256], "pip_install_vendor": [244, 256], "sh": [244, 256], "dist": [244, 256], "content": [244, 254, 256, 266], "minor": [244, 256], "down": [244, 247, 256, 259, 281], "diff": [244, 256], "nb": [244, 256], "reason": [244, 256, 267, 269, 281], "resourc": [244, 256], "qa": [244, 256], "previous": [244, 256, 267], "install_vendor": [244, 256], "html5lib": [245, 257], "jame": [245, 257], "graham": [245, 257], "sam": [245, 257], "sneddon": [245, 257], "\u0142ukasz": [245, 257], "langa": [245, 257], "Will": [245, 257], "kahn": [245, 257], "chronolog": [245, 257], "commit": [245, 257], "ann": [245, 257], "kesteren": [245, 257], "lachlan": [245, 257], "hunt": [245, 257], "lantis63": [245, 257], "rubi": [245, 257], "thoma": [245, 257], "broyer": [245, 257], "tim": [245, 257], "fletcher": [245, 257], "pilgrim": [245, 257], "ryan": [245, 257], "king": [245, 257], "philip": [245, 257], "taylor": [245, 257], "edward": [245, 257], "fantasai": [245, 257], "j\u00e4genstedt": [245, 257], "ms2ger": [245, 257], "mohammad": [245, 257], "taha": [245, 257], "jahangir": [245, 257], "andi": [245, 257], "wingo": [245, 257], "andrea": [245, 257], "madsack": [245, 257], "karim": [245, 257], "valiev": [245, 257], "juan": [245, 257], "carlo": [245, 257], "garcia": [245, 257], "segovia": [245, 257], "mike": [245, 257], "west": [245, 257], "marc": [245, 257], "simon": [245, 257], "sapin": [245, 257], "smith": [245, 257], "ritwik": [245, 257], "gupta": [245, 257], "abramowitz": [245, 257], "toni": [245, 257], "lope": [245, 257], "lilbludevil": [245, 257], "kevin": [245, 257], "drew": [245, 257], "hubl": [245, 257], "austin": [245, 257], "kumbera": [245, 257], "jim": [245, 257], "baker": [245, 257], "jon": [245, 257], "dufresn": [245, 257], "donald": [245, 257], "stufft": [245, 257], "alex": [245, 257], "gaynor": [245, 257], "nik": [245, 257], "nybi": [245, 257], "jakub": [245, 257], "wilk": [245, 257], "sigmund": [245, 257], "cherem": [245, 257], "gabi": [245, 257], "davar": [245, 257], "florian": [245, 257], "mounier": [245, 257], "neumond": [245, 257], "vitalik": [245, 257], "verhovodov": [245, 257], "kovid": [245, 257], "goyal": [245, 257], "adam": [245, 257], "chainz": [245, 257], "john": [245, 257], "vandenberg": [245, 257], "eric": [245, 247, 257, 259], "amord": [245, 257], "benedikt": [245, 257], "morbach": [245, 257], "jonathan": [245, 250, 257, 262], "vanasco": [245, 257], "tom": [245, 257], "vill": [245, 257], "skytt\u00e4": [245, 257], "hugo": [245, 257], "kemenad": [245, 257], "vasilkov": [245, 257], "2016": [246, 258], "yoshiki": [246, 258], "shibukawa": [246, 258], "herebi": [246, 258], "grant": [246, 258], "charg": [246, 258], "person": [246, 258], "deal": [246, 258], "merg": [246, 258], "publish": [246, 258], "sublicens": [246, 258], "sell": [246, 258], "whom": [246, 258], "furnish": [246, 258], "substanti": [246, 247, 258, 259], "kind": [246, 258], "noninfring": [246, 258], "author": [246, 258], "claim": [246, 258], "WITH": [246, 258], "dead": [247, 259], "regular": [247, 259], "pierr": [247, 259], "gerard": [247, 259], "marchant": [247, 259], "becam": [247, 259], "increasingli": [247, 259], "frustrat": [247, 259], "blame": [247, 259], "my": [247, 259], "inexperi": [247, 259], "pictur": [247, 259, 269], "date": [247, 259], "timeseri": [247, 259], "scikit": [247, 259], "disappear": [247, 259], "subarrai": [247, 259], "eras": [247, 259], "ufunc": [247, 259], "went": [247, 259], "lost": [247, 259], "culprit": [247, 259], "prepar": [247, 259], "myself": [247, 259], "rewrit": [247, 259], "learn": [247, 259], "__array_finalize__": [247, 259], "wonder": [247, 259], "wouldn": [247, 259], "did": [247, 259], "eventu": [247, 259], "come": [247, 259], "_data": [247, 259], "apart": [247, 259], "coupl": [247, 259], "slower": [247, 259], "underwai": [247, 259], "propag": [247, 259], "realli": [247, 259], "slow": [247, 259], "recarrai": [247, 259], "fill_valu": [247, 259], "nomask": [247, 259], "notabl": [247, 259], "unpickl": [247, 259], "got": [247, 259], "rid": [247, 259], "share_mask": [247, 259], "never": [247, 259], "understood": [247, 259], "putmask": [247, 259], "mimic": [247, 259], "unpleas": [247, 259], "surpris": [247, 259], "moreov": [247, 259], "contigu": [247, 259], "easi": [247, 259], "me": [247, 259], "cumsum": [247, 259], "cumprod": [247, 259], "exhaust": [247, 259], "mr_": [247, 259], "r_": [247, 259, 281], "anom": [247, 259], "anomali": [247, 259], "averag": [247, 259], "tri": [247, 259], "unfortun": [247, 259], "upward": [247, 259], "old_ma": [247, 259], "new_ma": [247, 259], "999999": [247, 259], "getmask": [247, 259], "91": [247, 259], "still": [247, 259, 269], "matplotlibrc": [247, 259], "temporari": [247, 259], "uncom": [247, 259], "everywher": [247, 259], "simple_plot": [247, 259], "mrecord": [247, 259], "sandbox": [247, 259], "maskedrecord": [247, 259], "fieldmask": [247, 259], "few": [247, 259, 267], "experiment": [247, 259], "dtype": [247, 259], "d1": [247, 259], "d2": [247, 259], "mask_or": [247, 259], "masked_arrai": [247, 259], "_mask": [247, 259], "logical_or": [247, 259], "again": [247, 259, 273, 284], "quick": [247, 259], "benchmark": [247, 259], "69": [247, 259], "classic": [247, 259], "prefil": [247, 259], "worth": [247, 259], "beforehand": [247, 259], "ye": [247, 259], "interest": [247, 259, 270, 271, 281, 282], "paul": [247, 259], "duboi": [247, 259], "travi": [247, 259], "oliph": [247, 259], "sasha": [247, 259], "argu": [247, 259], "shouldn": [247, 259], "anywai": [247, 259], "stori": [247, 259], "reggi": [247, 259], "dugard": [247, 259], "fire": [247, 259], "suggest": [247, 259], "08": [247, 259, 273], "2007": [247, 259], "regularli": [247, 259], "svn": [247, 259], "extended_summari": [248, 260], "yield": [248, 260, 267, 269], "other_paramet": [248, 260], "see_also": [248, 260], "slender": [250, 262], "AT": [250, 262], "amjith": [250, 262], "ramanujam": [250, 262], "gmail": [250, 262], "fullnam": [251, 252, 253, 263, 264, 265], "escap": [251, 252, 253, 263, 264, 265], "underlin": [251, 252, 253, 263, 264, 265], "rubric": [253, 265], "endfor": [253, 265], "endif": [253, 265], "endblock": [253, 265], "whatwg": [254, 266], "encod": [254, 266], "gsnedder": [254, 266], "pypi": [254, 266], "bsd": [254, 266], "interpret": [254, 266], "charset": [254, 266], "latin1": [254, 266], "alias": [254, 266], "ascii": [254, 266], "8859": [254, 266], "1252": [254, 266], "utf": [254, 266], "bom": [254, 266], "preced": [254, 266], "declar": [254, 266], "decod": [254, 266], "min_": 267, "abstractli": 267, "constrain": 267, "formal": 267, "l_2": [267, 269], "ask": 267, "fulli": 267, "x_i": 267, "leq": 267, "g_i": 267, "instant": [267, 280], "techniqu": 267, "reced": 267, "repeat": [267, 276], "u_t": 267, "x_t": 267, "evolv": 267, "uncertainti": 267, "realiti": 267, "diverg": 267, "recomput": 267, "supplement": [267, 282], "probabl": [267, 275], "mid": 267, "max_": 267, "reappli": 267, "mhe": 267, "veri": [267, 274, 283], "captur": 267, "p_": 267, "prod_": 267, "p_v": 267, "maxim": 267, "p_w": 267, "p_0": 267, "histori": 267, "reconstruct": [267, 273], "quad": 267, "successfulli": 267, "io": 267, "compute_optim": 267, "phimax": [267, 282, 283], "vehicle_output": [267, 281, 282, 283], "sharpli": 267, "015": 267, "manuev": 267, "tricki": 267, "seem": [267, 284], "answer": [267, 283, 284], "larger": [267, 274, 280, 283, 284], "neighborhood": 267, "larg": 267, "resampl": 267, "tweak": 267, "walk": 267, "aggress": [267, 281], "portrait": 268, "mar": 268, "dampl": 268, "oscil": [268, 269], "damposc_param": 268, "damposc_upd": 268, "damposc": 268, "ax1": 268, "ax2": 268, "ax3": 268, "ax4": 268, "set_tight_layout": 268, "set_titl": [268, 269], "pendulum": [268, 269], "invpend_upd": [268, 269], "invpend": [268, 269], "denser": 268, "oscillator_upd": [268, 269], "set_aspect": [268, 269], "inst": 268, "__str__": 268, "saddl": [268, 269, 277], "saddle_upd": 268, "internet": 268, "congest": 268, "_congctrl_upd": 268, "assert": [268, 280, 283], "noth": 268, "funni": 268, "2e": [268, 273], "pbar": 268, "bupper": 268, "blower": 268, "capac": 268, "mp": 268, "bdot": 268, "congctrl": 268, "250": [268, 279], "4e": [268, 281], "300": 268, "_plot": 269, "aspect": 269, "suit": 269, "root_locus_map": 269, "remaind": 269, "sys_mimo": 269, "reposit": 269, "resp1": 269, "resp2": 269, "combine_time_respons": 269, "scenario": 269, "graphic": 269, "cover": 269, "semicircl": 269, "far": 269, "nyqresp": 269, "925": 269, "wmin": 269, "wmax": 269, "1e2": [269, 274, 275], "pole_zero_map": 269, "arc": 269, "axis_limit": 269, "5x8": 269, "goe": 269, "topolog": 269, "built": [269, 282], "unlik": 269, "sequenti": 269, "easiest": 269, "accomplish": 269, "labels": 269, "titles": 269, "medium": 269, "xtick": [269, 272], "ytick": [269, 272], "restor": 269, "reset_rcparam": 269, "servomechan": 269, "l1": [269, 281], "l2": 269, "ax_mag": 269, "add_subplot": 269, "ax_phas": 269, "ax_nyquist": 269, "l_1": 269, "tick_param": 269, "labelbottom": 269, "align_label": 269, "intermix": 269, "workaround": 269, "pole_zero_subplot": 269, "layout": [269, 281], "thrust": [270, 271, 272, 273], "pvtol_lqr": 270, "03": [270, 280], "0475": [270, 271, 272], "inertia": [270, 271, 272], "pitch": [270, 271, 272], "subsequ": 270, "cy": 270, "bk": 270, "lat": 270, "alt": 270, "decoupl": 270, "ix_": 270, "bx": 270, "ai": 270, "clf": [270, 272], "qx1": [270, 271], "qu1a": [270, 271], "k1a": [270, 271], "h1a": 270, "h1ax": [270, 271], "tx": 270, "yx": [270, 271], "h1ai": 270, "ty": 270, "221": 270, "qu1b": [270, 271], "k1b": [270, 271], "h1bx": [270, 271], "qu1c": [270, 271], "k1c": [270, 271], "h1cx": [270, 271], "y3": [270, 271, 283], "222": 270, "arcarrow": 270, "45": [270, 276], "qx2": 270, "qu2": 270, "h2x": 270, "h2y": 270, "223": 270, "t2x": 270, "y2x": 270, "t2y": 270, "y2y": 270, "qx3": 270, "qu3": 270, "h3x": 270, "h3y": 270, "224": 270, "t3x": 270, "y3x": 270, "t3y": 270, "y3y": 270, "edu": 271, "php": 271, "_vertical_takeoff_and_landing_aircraft": 271, "moment": 271, "downward": 271, "thruster": 271, "maneuv": [271, 283], "act": 271, "geometri": 271, "dz": 271, "z_4": 271, "z_5": 271, "z_6": 271, "mg": 271, "z_e": 271, "z_3": 271, "xi": 271, "q_": 271, "q_v": 271, "z_d": 271, "y_d": 271, "hardcod": 271, "cascad": 271, "didact": 271, "cheat": 271, "introduc": 271, "sluggish": 271, "methodologi": 271, "split": 271, "p_i": 271, "p_o": 271, "c_o": 271, "h_i": 271, "po": [271, 272, 282], "lead": [271, 272], "ci": [271, 272, 283], "li": [271, 272], "hi": [271, 272], "compenstor": 271, "lo": [271, 272], "character": 271, "0001": 271, "sep": 272, "fairli": 272, "fast": [272, 274], "ti": 272, "v1": 272, "l8": 272, "v2": 272, "211": 272, "loglog": 272, "gcf": 272, "break": 272, "semilogx": [272, 274, 275], "replot": 272, "recreat": 272, "270": 272, "expand": 272, "h1": [272, 273], "am_normal_arrows": 272, "edgecolor": 272, "facecolor": 272, "tvec": 272, "yvec": 272, "aircraf": 273, "16227766e": 273, "31948924e": 273, "67680175e": 273, "35855555e": 273, "98881806e": 273, "91220852e": 273, "00000000e": 273, "31948923e": 273, "32324805e": 273, "36396241e": 273, "97998224e": 273, "90913288e": 273, "48": 273, "h3": 273, "h4": 273, "0x7fa431d8b3a0": 273, "robust_mimo": 274, "postlethwait": [274, 275], "wb": [274, 275], "wf": 274, "high": [274, 280], "rhp": 274, "gtf": 274, "2017": 274, "doesn": [274, 275], "sigma": 274, "stand": 274, "triv_sigma": 274, "sjw": 274, "sv": 274, "svd": 274, "compute_uv": 274, "yu1": 274, "yu2": 274, "yuz": 274, "y_2": [274, 275], "nto": 274, "synth": 274, "wb1": 274, "wb2": 274, "wu": [274, 275], "wp1": 274, "wp2": 274, "wp": 274, "step_opposit": 274, "gam1": 274, "gam2": 274, "heavili": 274, "won": 274, "gam3": 274, "80": [274, 275, 281], "92": 274, "73": 274, "s2": [274, 275], "sv1": 274, "sv2": 274, "sigma_1": 274, "s_1": [274, 275], "sigma_2": 274, "s_2": [274, 275], "301": 274, "de": 274, "robust_siso": 275, "ws1": 275, "cl1": 275, "info1": 275, "ws2": 275, "cl2": 275, "info2": 275, "ws1mag": 275, "s1mag": 275, "ws2mag": 275, "s2mag": 275, "w_": 275, "p2": 275, "201": 275, "y1d": 275, "y2d": 275, "usr": 276, "bin": 276, "modelsimp": 276, "msimp": 276, "mt": 276, "875": 276, "6875": 276, "7031": 276, "fsy": 276, "tr": 276, "sysrand": 276, "rsysrand": 276, "yrand": 276, "trand": 276, "yrandr": 276, "trandr": 276, "gahinet": [277, 278], "chilali": [277, 278], "multiobject": [277, 278], "lmi": [277, 278], "zhou": 277, "doyl": 277, "essenti": 277, "prentic": 277, "hall": 277, "river": 277, "nj": 277, "1998": 277, "b1": [277, 278], "b2": [277, 278], "d21": [277, 278], "d22": [277, 278], "d11": [277, 278], "d12": [277, 278], "n_u": [277, 278], "baug": [277, 278], "caug": [277, 278], "daug": [277, 278], "paug": [277, 278], "extarct": 277, "a_k": 277, "b_k": 277, "c_k": 277, "d_k": 277, "tzw": [277, 278], "azw": 277, "bzw": 277, "czw": 277, "dzw": 277, "lemma": 277, "pg": 277, "53": 277, "qzw": 277, "lyap": 277, "748350599360575": 277, "h_inf": 278, "om": 279, "lcou": 279, "precis": 280, "addition": 280, "conjunct": 280, "simulink": 280, "constitu": 280, "simulation_dt": 280, "With": [280, 281], "inlinebackend": 280, "figure_format": 280, "retina": 280, "plantcont": 280, "continou": 280, "plant_simul": 280, "c2d": 280, "sampled_data_control": 280, "plant_dt": 280, "digit": 280, "sampler": 280, "analog": 280, "one_plus_ep": 280, "finfo": 280, "isclos": 280, "nstep": 280, "updatefunct": 280, "nonloc": 280, "outputfunct": 280, "controller_t": 280, "controller_simul": 280, "staircas": 280, "step_input": 280, "u_summ": 280, "gyr_simul": 280, "respon": 280, "choic": [280, 281], "arbitrarili": 280, "time_delay_system": 280, "whole": 280, "delay": 280, "rllrllrllrllrll": 280, "incorpor": 280, "closer": 280, "instabl": 280, "nonlinear_plant_dynam": 280, "nonlinear_plant_output": 280, "nonlinear_pl": 280, "plant2": 280, "discrete_nonlinear_plant_dynam": 280, "nonlinear_plant_simul": 280, "nonlinear_gyr_simul": 280, "use_fbs_default": 281, "refoffset": 281, "slip": 281, "rotat": 281, "tire": 281, "slide": 281, "pavement": 281, "approx": 281, "kph": 281, "vehicle_param": 281, "t_curvi": 281, "v_curvi": 281, "delta_curvi": 281, "0025": 281, "u_curvi": 281, "x0_curvi": 281, "y_curvi": 281, "x_curvi": 281, "bigger": 281, "theta_0": 281, "v_0": 281, "neq": 281, "focu": [281, 284], "simplic": 281, "theta_": 281, "lateral_linear": 281, "lateral_transform": 281, "similarity_transform": 281, "lateral_norm": 281, "zeta_": 281, "omega_": 281, "transit": 281, "recal": 281, "travel": 281, "gentl": 281, "600": 281, "005": 281, "302": 281, "translat": 281, "omega_c": 281, "conclud": 281, "normalized_plac": 281, "normalized_plot": 281, "inpfig": 281, "outfig": 281, "normalized_label": 281, "zeta_c": 281, "specififi": 281, "zo": 281, "x_ref": 281, "y_ref": 281, "theta_ref": 281, "y_est": 281, "x_est": 281, "707": 281, "calcalu": 281, "u_sfb": 281, "u_ofb": 281, "49": 281, "7448": 281, "4899999999999182": 281, "plot_vehicle_lanechang": 281, "significantli": 281, "front": 281, "msteer": 281, "forward_later": 281, "forward_tf": 281, "reveris": 281, "reverse_later": 281, "reverse_tf": 281, "333": 281, "828e": 281, "848e": 281, "nice": 281, "therefor": 281, "f_": 281, "govern": 281, "fm": 281, "y_ffwd": 281, "delta_ffwd": 281, "overhead": 281, "400": 281, "152e": 281, "6658": 281, "3628": 281, "156": 281, "gainsch": 282, "avali": 282, "cmath": 282, "ei": 282, "etheta": 282, "vd": 282, "phid": 282, "longpol": 282, "latpole1": 282, "latpole2": 282, "control_output": 282, "alpha1": 282, "alpha2": 282, "feedfwd": 282, "aren": 282, "yref": 282, "thetad": 282, "trajgen_output": 282, "trajgen": 282, "summar": 282, "y_index": 282, "v_index": 282, "y_line": 282, "v_line": 282, "vel": 282, "itertool": 282, "yf": 283, "exert": 283, "effort": 283, "achiev": 283, "quad_cost": 283, "straight_lin": 283, "filenam": 283, "filemod": 283, "gradient": 283, "start_tim": 283, "process_tim": 283, "result1": 283, "finite_diff_rel_step": 283, "5g": 283, "impos": 283, "graduat": 283, "napproach": 283, "guesss": 283, "input_guess": 283, "state_guess": 283, "result2": 283, "slsqp": 283, "cost3": 283, "state_range_constraint": 283, "result3": 283, "atol": 283, "u3": 283, "resolut": 283, "result4": 283, "disp": 283, "t4": 283, "u4": 283, "y4": 283, "83": 284, "spuriou": 284, "regener": 284, "84": 284, "t_1": 284, "t_2": 284, "cov": 284, "decim": 284, "17348786109316244": 284, "09633133133133133": 284, "165": 284, "0151": 284, "89": 284, "r_y": 284, "lot": 284}, "objects": {"": [[1, 0, 0, "-", "control"]], "control": [[10, 1, 1, "", "ControlPlot"], [11, 1, 1, "", "DescribingFunctionNonlinearity"], [12, 1, 1, "", "DescribingFunctionResponse"], [13, 1, 1, "", "FrequencyResponseData"], [14, 1, 1, "", "FrequencyResponseList"], [15, 1, 1, "", "InputOutputSystem"], [16, 1, 1, "", "InterconnectedSystem"], [17, 1, 1, "", "LTI"], [18, 1, 1, "", "LinearICSystem"], [19, 1, 1, "", "NonlinearIOSystem"], [20, 1, 1, "", "NyquistResponseData"], [21, 1, 1, "", "PoleZeroData"], [22, 1, 1, "", "StateSpace"], [24, 1, 1, "", "TimeResponseData"], [25, 1, 1, "", "TimeResponseList"], [26, 1, 1, "", "TransferFunction"], [28, 5, 1, "", "acker"], [29, 5, 1, "", "append"], [30, 5, 1, "", "augw"], [31, 5, 1, "", "balanced_reduction"], [32, 5, 1, "", "bdschur"], [33, 5, 1, "", "bode_plot"], [34, 5, 1, "", "canonical_form"], [35, 5, 1, "", "care"], [36, 5, 1, "", "combine_time_responses"], [37, 5, 1, "", "connect"], [38, 5, 1, "", "connection_table"], [39, 5, 1, "", "correlation"], [40, 5, 1, "", "create_estimator_iosystem"], [41, 5, 1, "", "create_statefbk_iosystem"], [42, 5, 1, "", "ctrb"], [43, 5, 1, "", "damp"], [44, 5, 1, "", "dare"], [45, 5, 1, "", "db2mag"], [46, 5, 1, "", "dcgain"], [47, 5, 1, "", "describing_function"], [48, 5, 1, "", "describing_function_plot"], [49, 5, 1, "", "describing_function_response"], [50, 5, 1, "", "dlqe"], [51, 5, 1, "", "dlqr"], [52, 5, 1, "", "dlyap"], [53, 5, 1, "", "drss"], [54, 5, 1, "", "eigensys_realization"], [55, 5, 1, "", "feedback"], [56, 5, 1, "", "find_eqpt"], [9, 0, 0, "-", "flatsys"], [67, 5, 1, "", "forced_response"], [68, 5, 1, "", "frd"], [69, 5, 1, "", "frequency_response"], [70, 1, 1, "", "friction_backlash_nonlinearity"], [71, 5, 1, "", "gangof4_plot"], [72, 5, 1, "", "gangof4_response"], [73, 5, 1, "", "get_input_ff_index"], [74, 5, 1, "", "get_output_fb_index"], [75, 5, 1, "", "gram"], [76, 5, 1, "", "h2syn"], [77, 5, 1, "", "hankel_singular_values"], [78, 5, 1, "", "hinfsyn"], [79, 5, 1, "", "impulse_response"], [80, 5, 1, "", "initial_response"], [81, 5, 1, "", "input_output_response"], [82, 5, 1, "", "interconnect"], [83, 5, 1, "", "isctime"], [84, 5, 1, "", "isdtime"], [85, 5, 1, "", "ispassive"], [86, 5, 1, "", "issiso"], [87, 5, 1, "", "issys"], [88, 5, 1, "", "linearize"], [89, 5, 1, "", "lqe"], [90, 5, 1, "", "lqr"], [91, 5, 1, "", "lyap"], [92, 5, 1, "", "mag2db"], [93, 5, 1, "", "margin"], [94, 5, 1, "", "markov"], [238, 0, 0, "-", "matlab"], [150, 5, 1, "", "minimal_realization"], [151, 5, 1, "", "mixsyn"], [152, 5, 1, "", "modal_form"], [153, 5, 1, "", "model_reduction"], [154, 5, 1, "", "negate"], [155, 5, 1, "", "nichols_grid"], [156, 5, 1, "", "nichols_plot"], [157, 5, 1, "", "nlsys"], [158, 5, 1, "", "norm"], [159, 5, 1, "", "nyquist_plot"], [160, 5, 1, "", "nyquist_response"], [161, 5, 1, "", "observable_form"], [162, 5, 1, "", "obsv"], [267, 0, 0, "-", "optimal"], [178, 5, 1, "", "pade"], [179, 5, 1, "", "parallel"], [180, 5, 1, "", "phase_crossover_frequencies"], [181, 5, 1, "", "phase_plane_plot"], [182, 5, 1, "", "phase_plot"], [188, 5, 1, "", "place"], [189, 5, 1, "", "place_varga"], [190, 5, 1, "", "pole_zero_map"], [191, 5, 1, "", "pole_zero_plot"], [192, 5, 1, "", "pole_zero_subplots"], [193, 5, 1, "", "poles"], [194, 5, 1, "", "pzmap"], [195, 5, 1, "", "reachable_form"], [196, 1, 1, "", "relay_hysteresis_nonlinearity"], [197, 5, 1, "", "reset_defaults"], [198, 5, 1, "", "reset_rcParams"], [199, 5, 1, "", "root_locus"], [200, 5, 1, "", "root_locus_map"], [201, 5, 1, "", "root_locus_plot"], [202, 5, 1, "", "rootlocus_pid_designer"], [203, 5, 1, "", "rss"], [204, 5, 1, "", "sample_system"], [205, 1, 1, "", "saturation_nonlinearity"], [206, 5, 1, "", "series"], [207, 5, 1, "", "set_defaults"], [208, 5, 1, "", "similarity_transform"], [209, 5, 1, "", "singular_values_plot"], [210, 5, 1, "", "singular_values_response"], [211, 5, 1, "", "sisotool"], [212, 5, 1, "", "ss"], [213, 5, 1, "", "ss2tf"], [214, 5, 1, "", "ssdata"], [215, 5, 1, "", "stability_margins"], [216, 5, 1, "", "step_info"], [217, 5, 1, "", "step_response"], [218, 5, 1, "", "summing_junction"], [219, 5, 1, "", "tf"], [220, 5, 1, "", "tf2ss"], [221, 5, 1, "", "tfdata"], [222, 5, 1, "", "time_response_plot"], [223, 5, 1, "", "timebase"], [224, 5, 1, "", "unwrap"], [225, 5, 1, "", "use_fbs_defaults"], [226, 5, 1, "", "use_legacy_defaults"], [227, 5, 1, "", "use_matlab_defaults"], [228, 5, 1, "", "white_noise"], [229, 5, 1, "", "zeros"], [230, 5, 1, "", "zpk"]], "control.ControlPlot": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "axes"], [10, 3, 1, "", "figure"], [10, 3, 1, "", "legend"], [10, 3, 1, "", "lines"], [10, 2, 1, "", "set_plot_title"]], "control.DescribingFunctionNonlinearity": [[11, 2, 1, "", "__call__"], [11, 2, 1, "", "describing_function"]], "control.DescribingFunctionResponse": [[12, 3, 1, "", "N_vals"], [12, 2, 1, "", "__init__"], [12, 3, 1, "", "intersections"], [12, 2, 1, "", "plot"], [12, 3, 1, "", "positions"], [12, 3, 1, "", "response"]], "control.FrequencyResponseData": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "bandwidth"], [13, 2, 1, "", "copy"], [13, 2, 1, "", "damp"], [13, 2, 1, "", "dcgain"], [13, 3, 1, "", "dt"], [13, 2, 1, "", "eval"], [13, 2, 1, "", "feedback"], [13, 2, 1, "", "find_input"], [13, 2, 1, "", "find_inputs"], [13, 2, 1, "", "find_output"], [13, 2, 1, "", "find_outputs"], [13, 2, 1, "", "find_state"], [13, 2, 1, "", "find_states"], [13, 2, 1, "", "freqresp"], [13, 2, 1, "", "frequency_response"], [13, 3, 1, "", "fresp"], [13, 2, 1, "", "isctime"], [13, 2, 1, "", "isdtime"], [13, 2, 1, "", "issiso"], [13, 3, 1, "", "ninputs"], [13, 3, 1, "", "noutputs"], [13, 3, 1, "", "nstates"], [13, 3, 1, "", "omega"], [13, 2, 1, "", "plot"], [13, 2, 1, "", "set_inputs"], [13, 2, 1, "", "set_outputs"], [13, 2, 1, "", "set_states"], [13, 2, 1, "", "to_pandas"], [13, 2, 1, "", "update_names"]], "control.FrequencyResponseList": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "append"], [14, 2, 1, "", "clear"], [14, 2, 1, "", "copy"], [14, 2, 1, "", "count"], [14, 2, 1, "", "extend"], [14, 2, 1, "", "index"], [14, 2, 1, "", "insert"], [14, 2, 1, "", "pop"], [14, 2, 1, "", "remove"], [14, 2, 1, "", "reverse"], [14, 2, 1, "", "sort"]], "control.InputOutputSystem": [[15, 2, 1, "", "copy"], [15, 3, 1, "", "dt"], [15, 2, 1, "", "find_input"], [15, 2, 1, "", "find_inputs"], [15, 2, 1, "", "find_output"], [15, 2, 1, "", "find_outputs"], [15, 2, 1, "", "find_state"], [15, 2, 1, "", "find_states"], [15, 2, 1, "", "isctime"], [15, 2, 1, "", "isdtime"], [15, 2, 1, "", "issiso"], [15, 3, 1, "", "name"], [15, 3, 1, "", "ninputs"], [15, 3, 1, "", "noutputs"], [15, 3, 1, "", "nstates"], [15, 3, 1, "", "params"], [15, 2, 1, "", "set_inputs"], [15, 2, 1, "", "set_outputs"], [15, 2, 1, "", "set_states"], [15, 2, 1, "", "update_names"]], "control.InterconnectedSystem": [[16, 2, 1, "", "__add__"], [16, 2, 1, "", "__call__"], [16, 2, 1, "", "__mul__"], [16, 2, 1, "", "__neg__"], [16, 2, 1, "", "__radd__"], [16, 2, 1, "", "__rmul__"], [16, 2, 1, "", "__rsub__"], [16, 2, 1, "", "__sub__"], [16, 2, 1, "", "__truediv__"], [16, 2, 1, "", "check_unused_signals"], [16, 2, 1, "", "connection_table"], [16, 2, 1, "", "copy"], [16, 2, 1, "", "dynamics"], [16, 2, 1, "", "feedback"], [16, 2, 1, "", "find_input"], [16, 2, 1, "", "find_inputs"], [16, 2, 1, "", "find_output"], [16, 2, 1, "", "find_outputs"], [16, 2, 1, "", "find_state"], [16, 2, 1, "", "find_states"], [16, 2, 1, "", "isctime"], [16, 2, 1, "", "isdtime"], [16, 2, 1, "", "issiso"], [16, 2, 1, "", "linearize"], [16, 3, 1, "", "ninputs"], [16, 3, 1, "", "noutputs"], [16, 3, 1, "", "nstates"], [16, 2, 1, "", "output"], [16, 2, 1, "", "set_connect_map"], [16, 2, 1, "", "set_input_map"], [16, 2, 1, "", "set_inputs"], [16, 2, 1, "", "set_output_map"], [16, 2, 1, "", "set_outputs"], [16, 2, 1, "", "set_states"], [16, 2, 1, "", "unused_signals"], [16, 2, 1, "", "update_names"]], "control.LTI": [[17, 2, 1, "", "bandwidth"], [17, 2, 1, "", "copy"], [17, 2, 1, "", "damp"], [17, 2, 1, "", "dcgain"], [17, 2, 1, "", "find_input"], [17, 2, 1, "", "find_inputs"], [17, 2, 1, "", "find_output"], [17, 2, 1, "", "find_outputs"], [17, 2, 1, "", "find_state"], [17, 2, 1, "", "find_states"], [17, 2, 1, "", "frequency_response"], [17, 2, 1, "", "isctime"], [17, 2, 1, "", "isdtime"], [17, 2, 1, "", "issiso"], [17, 3, 1, "", "ninputs"], [17, 3, 1, "", "noutputs"], [17, 3, 1, "", "nstates"], [17, 2, 1, "", "set_inputs"], [17, 2, 1, "", "set_outputs"], [17, 2, 1, "", "set_states"], [17, 2, 1, "", "update_names"]], "control.LinearICSystem": [[18, 3, 1, "", "A"], [18, 3, 1, "", "B"], [18, 3, 1, "", "C"], [18, 3, 1, "", "D"], [18, 2, 1, "", "__add__"], [18, 2, 1, "", "__call__"], [18, 2, 1, "", "__getitem__"], [18, 2, 1, "", "__mul__"], [18, 2, 1, "", "__neg__"], [18, 2, 1, "", "__radd__"], [18, 2, 1, "", "__rmul__"], [18, 2, 1, "", "__rsub__"], [18, 2, 1, "", "__sub__"], [18, 2, 1, "", "__truediv__"], [18, 2, 1, "", "append"], [18, 2, 1, "", "bandwidth"], [18, 2, 1, "", "check_unused_signals"], [18, 2, 1, "", "connection_table"], [18, 2, 1, "", "copy"], [18, 2, 1, "", "damp"], [18, 2, 1, "", "dcgain"], [18, 2, 1, "", "dynamics"], [18, 2, 1, "", "feedback"], [18, 2, 1, "", "find_input"], [18, 2, 1, "", "find_inputs"], [18, 2, 1, "", "find_output"], [18, 2, 1, "", "find_outputs"], [18, 2, 1, "", "find_state"], [18, 2, 1, "", "find_states"], [18, 2, 1, "", "freqresp"], [18, 2, 1, "", "frequency_response"], [18, 2, 1, "", "horner"], [18, 2, 1, "", "isctime"], [18, 2, 1, "", "isdtime"], [18, 2, 1, "", "issiso"], [18, 2, 1, "", "lft"], [18, 2, 1, "", "linearize"], [18, 2, 1, "", "minreal"], [18, 3, 1, "", "ninputs"], [18, 3, 1, "", "noutputs"], [18, 3, 1, "", "nstates"], [18, 2, 1, "", "output"], [18, 2, 1, "", "poles"], [18, 2, 1, "", "returnScipySignalLTI"], [18, 2, 1, "", "sample"], [18, 2, 1, "", "set_connect_map"], [18, 2, 1, "", "set_input_map"], [18, 2, 1, "", "set_inputs"], [18, 2, 1, "", "set_output_map"], [18, 2, 1, "", "set_outputs"], [18, 2, 1, "", "set_states"], [18, 2, 1, "", "slycot_laub"], [18, 4, 1, "", "states"], [18, 2, 1, "", "unused_signals"], [18, 2, 1, "", "update_names"], [18, 2, 1, "", "zeros"]], "control.NonlinearIOSystem": [[19, 2, 1, "", "__add__"], [19, 2, 1, "", "__call__"], [19, 2, 1, "", "__mul__"], [19, 2, 1, "", "__neg__"], [19, 2, 1, "", "__radd__"], [19, 2, 1, "", "__rmul__"], [19, 2, 1, "", "__rsub__"], [19, 2, 1, "", "__sub__"], [19, 2, 1, "", "__truediv__"], [19, 2, 1, "", "copy"], [19, 2, 1, "", "dynamics"], [19, 2, 1, "", "feedback"], [19, 2, 1, "", "find_input"], [19, 2, 1, "", "find_inputs"], [19, 2, 1, "", "find_output"], [19, 2, 1, "", "find_outputs"], [19, 2, 1, "", "find_state"], [19, 2, 1, "", "find_states"], [19, 2, 1, "", "isctime"], [19, 2, 1, "", "isdtime"], [19, 2, 1, "", "issiso"], [19, 2, 1, "", "linearize"], [19, 3, 1, "", "ninputs"], [19, 3, 1, "", "noutputs"], [19, 3, 1, "", "nstates"], [19, 2, 1, "", "output"], [19, 2, 1, "", "set_inputs"], [19, 2, 1, "", "set_outputs"], [19, 2, 1, "", "set_states"], [19, 2, 1, "", "update_names"]], "control.NyquistResponseData": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "contour"], [20, 3, 1, "", "count"], [20, 3, 1, "", "dt"], [20, 3, 1, "", "response"], [20, 3, 1, "", "return_contour"], [20, 3, 1, "", "sysname"]], "control.PoleZeroData": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "gains"], [21, 3, 1, "", "loci"], [21, 2, 1, "", "plot"], [21, 3, 1, "", "poles"], [21, 3, 1, "", "sys"], [21, 3, 1, "", "sysname"], [21, 3, 1, "", "zeros"]], "control.StateSpace": [[22, 3, 1, "", "A"], [22, 3, 1, "", "B"], [22, 3, 1, "", "C"], [22, 3, 1, "", "D"], [22, 2, 1, "", "__add__"], [23, 2, 1, "", "__call__"], [22, 2, 1, "", "__getitem__"], [22, 2, 1, "", "__mul__"], [22, 2, 1, "", "__neg__"], [22, 2, 1, "", "__radd__"], [22, 2, 1, "", "__rmul__"], [22, 2, 1, "", "__rsub__"], [22, 2, 1, "", "__sub__"], [22, 2, 1, "", "__truediv__"], [22, 2, 1, "", "append"], [22, 2, 1, "", "bandwidth"], [22, 2, 1, "", "copy"], [22, 2, 1, "", "damp"], [22, 2, 1, "", "dcgain"], [22, 3, 1, "", "dt"], [22, 2, 1, "", "dynamics"], [22, 2, 1, "", "feedback"], [22, 2, 1, "", "find_input"], [22, 2, 1, "", "find_inputs"], [22, 2, 1, "", "find_output"], [22, 2, 1, "", "find_outputs"], [22, 2, 1, "", "find_state"], [22, 2, 1, "", "find_states"], [22, 2, 1, "", "freqresp"], [22, 2, 1, "", "frequency_response"], [22, 2, 1, "", "horner"], [22, 2, 1, "", "isctime"], [22, 2, 1, "", "isdtime"], [22, 2, 1, "", "issiso"], [22, 2, 1, "", "lft"], [22, 2, 1, "", "linearize"], [22, 2, 1, "", "minreal"], [22, 3, 1, "", "ninputs"], [22, 3, 1, "", "noutputs"], [22, 3, 1, "", "nstates"], [22, 2, 1, "", "output"], [22, 2, 1, "", "poles"], [22, 2, 1, "", "returnScipySignalLTI"], [22, 2, 1, "", "sample"], [22, 2, 1, "", "set_inputs"], [22, 2, 1, "", "set_outputs"], [22, 2, 1, "", "set_states"], [22, 2, 1, "", "slycot_laub"], [22, 4, 1, "", "states"], [22, 2, 1, "", "update_names"], [22, 2, 1, "", "zeros"]], "control.TimeResponseData": [[24, 2, 1, "", "__init__"], [24, 4, 1, "", "inputs"], [24, 3, 1, "", "issiso"], [24, 3, 1, "", "message"], [24, 3, 1, "", "ntraces"], [24, 4, 1, "", "outputs"], [24, 3, 1, "", "params"], [24, 2, 1, "", "plot"], [24, 3, 1, "", "plot_inputs"], [24, 3, 1, "", "squeeze"], [24, 4, 1, "", "states"], [24, 3, 1, "", "success"], [24, 3, 1, "", "sysname"], [24, 3, 1, "", "t"], [24, 4, 1, "", "time"], [24, 3, 1, "", "title"], [24, 2, 1, "", "to_pandas"], [24, 3, 1, "", "trace_labels"], [24, 3, 1, "", "trace_types"], [24, 3, 1, "", "transpose"], [24, 3, 1, "", "u"], [24, 3, 1, "", "x"], [24, 3, 1, "", "y"]], "control.TimeResponseList": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "append"], [25, 2, 1, "", "clear"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "count"], [25, 2, 1, "", "extend"], [25, 2, 1, "", "index"], [25, 2, 1, "", "insert"], [25, 2, 1, "", "pop"], [25, 2, 1, "", "remove"], [25, 2, 1, "", "reverse"], [25, 2, 1, "", "sort"]], "control.TransferFunction": [[26, 2, 1, "", "__add__"], [27, 2, 1, "", "__call__"], [26, 2, 1, "", "__mul__"], [26, 2, 1, "", "__neg__"], [26, 2, 1, "", "__radd__"], [26, 2, 1, "", "__rmul__"], [26, 2, 1, "", "__rsub__"], [26, 2, 1, "", "__rtruediv__"], [26, 2, 1, "", "__sub__"], [26, 2, 1, "", "__truediv__"], [26, 2, 1, "", "bandwidth"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "damp"], [26, 2, 1, "", "dcgain"], [26, 3, 1, "", "den"], [26, 3, 1, "", "dt"], [26, 2, 1, "", "feedback"], [26, 2, 1, "", "find_input"], [26, 2, 1, "", "find_inputs"], [26, 2, 1, "", "find_output"], [26, 2, 1, "", "find_outputs"], [26, 2, 1, "", "find_state"], [26, 2, 1, "", "find_states"], [26, 2, 1, "", "freqresp"], [26, 2, 1, "", "frequency_response"], [26, 2, 1, "", "horner"], [26, 2, 1, "", "isctime"], [26, 2, 1, "", "isdtime"], [26, 2, 1, "", "issiso"], [26, 2, 1, "", "minreal"], [26, 3, 1, "", "ninputs"], [26, 3, 1, "", "noutputs"], [26, 3, 1, "", "nstates"], [26, 3, 1, "", "num"], [26, 2, 1, "", "poles"], [26, 2, 1, "", "returnScipySignalLTI"], [26, 3, 1, "", "s"], [26, 2, 1, "", "sample"], [26, 2, 1, "", "set_inputs"], [26, 2, 1, "", "set_outputs"], [26, 2, 1, "", "set_states"], [26, 2, 1, "", "update_names"], [26, 3, 1, "", "z"], [26, 2, 1, "", "zeros"]], "control.flatsys": [[57, 1, 1, "", "BSplineFamily"], [58, 1, 1, "", "BasisFamily"], [59, 1, 1, "", "BezierFamily"], [60, 1, 1, "", "FlatSystem"], [61, 1, 1, "", "LinearFlatSystem"], [62, 1, 1, "", "PolyFamily"], [63, 1, 1, "", "SystemTrajectory"], [64, 5, 1, "", "flatsys"], [65, 5, 1, "", "point_to_point"], [66, 5, 1, "", "solve_flat_ocp"]], "control.flatsys.BSplineFamily": [[57, 2, 1, "", "__call__"], [57, 2, 1, "", "eval"], [57, 2, 1, "", "eval_deriv"], [57, 2, 1, "", "var_ncoefs"]], "control.flatsys.BasisFamily": [[58, 3, 1, "", "N"], [58, 2, 1, "", "__call__"], [58, 2, 1, "", "eval"], [58, 2, 1, "", "eval_deriv"], [58, 2, 1, "", "var_ncoefs"]], "control.flatsys.BezierFamily": [[59, 2, 1, "", "__call__"], [59, 2, 1, "", "eval"], [59, 2, 1, "", "eval_deriv"], [59, 2, 1, "", "var_ncoefs"]], "control.flatsys.FlatSystem": [[60, 2, 1, "", "__add__"], [60, 2, 1, "", "__call__"], [60, 2, 1, "", "__mul__"], [60, 2, 1, "", "__neg__"], [60, 2, 1, "", "__radd__"], [60, 2, 1, "", "__rmul__"], [60, 2, 1, "", "__rsub__"], [60, 2, 1, "", "__sub__"], [60, 2, 1, "", "__truediv__"], [60, 2, 1, "", "copy"], [60, 2, 1, "", "dynamics"], [60, 2, 1, "", "feedback"], [60, 2, 1, "", "find_input"], [60, 2, 1, "", "find_inputs"], [60, 2, 1, "", "find_output"], [60, 2, 1, "", "find_outputs"], [60, 2, 1, "", "find_state"], [60, 2, 1, "", "find_states"], [60, 2, 1, "", "forward"], [60, 2, 1, "", "isctime"], [60, 2, 1, "", "isdtime"], [60, 2, 1, "", "issiso"], [60, 2, 1, "", "linearize"], [60, 3, 1, "", "ninputs"], [60, 3, 1, "", "noutputs"], [60, 3, 1, "", "nstates"], [60, 2, 1, "", "output"], [60, 2, 1, "", "reverse"], [60, 2, 1, "", "set_inputs"], [60, 2, 1, "", "set_outputs"], [60, 2, 1, "", "set_states"], [60, 2, 1, "", "update_names"]], "control.flatsys.LinearFlatSystem": [[61, 3, 1, "", "A"], [61, 3, 1, "", "B"], [61, 3, 1, "", "C"], [61, 3, 1, "", "D"], [61, 2, 1, "", "__add__"], [61, 2, 1, "", "__call__"], [61, 2, 1, "", "__getitem__"], [61, 2, 1, "", "__mul__"], [61, 2, 1, "", "__neg__"], [61, 2, 1, "", "__radd__"], [61, 2, 1, "", "__rmul__"], [61, 2, 1, "", "__rsub__"], [61, 2, 1, "", "__sub__"], [61, 2, 1, "", "__truediv__"], [61, 2, 1, "", "append"], [61, 2, 1, "", "bandwidth"], [61, 2, 1, "", "copy"], [61, 2, 1, "", "damp"], [61, 2, 1, "", "dcgain"], [61, 2, 1, "", "dynamics"], [61, 2, 1, "", "feedback"], [61, 2, 1, "", "find_input"], [61, 2, 1, "", "find_inputs"], [61, 2, 1, "", "find_output"], [61, 2, 1, "", "find_outputs"], [61, 2, 1, "", "find_state"], [61, 2, 1, "", "find_states"], [61, 2, 1, "", "forward"], [61, 2, 1, "", "freqresp"], [61, 2, 1, "", "frequency_response"], [61, 2, 1, "", "horner"], [61, 2, 1, "", "isctime"], [61, 2, 1, "", "isdtime"], [61, 2, 1, "", "issiso"], [61, 2, 1, "", "lft"], [61, 2, 1, "", "linearize"], [61, 2, 1, "", "minreal"], [61, 3, 1, "", "ninputs"], [61, 3, 1, "", "noutputs"], [61, 3, 1, "", "nstates"], [61, 2, 1, "", "output"], [61, 2, 1, "", "poles"], [61, 2, 1, "", "returnScipySignalLTI"], [61, 2, 1, "", "reverse"], [61, 2, 1, "", "sample"], [61, 2, 1, "", "set_inputs"], [61, 2, 1, "", "set_outputs"], [61, 2, 1, "", "set_states"], [61, 2, 1, "", "slycot_laub"], [61, 4, 1, "", "states"], [61, 2, 1, "", "update_names"], [61, 2, 1, "", "zeros"]], "control.flatsys.PolyFamily": [[62, 2, 1, "", "__call__"], [62, 2, 1, "", "eval"], [62, 2, 1, "", "eval_deriv"], [62, 2, 1, "", "var_ncoefs"]], "control.flatsys.SystemTrajectory": [[63, 2, 1, "", "eval"], [63, 2, 1, "", "response"]], "control.friction_backlash_nonlinearity": [[70, 2, 1, "", "__call__"], [70, 2, 1, "", "describing_function"]], "control.matlab": [[95, 5, 1, "", "append"], [96, 5, 1, "", "balred"], [97, 5, 1, "", "bode"], [98, 5, 1, "", "c2d"], [99, 5, 1, "", "care"], [100, 5, 1, "", "connect"], [101, 5, 1, "", "ctrb"], [102, 5, 1, "", "damp"], [103, 5, 1, "", "dare"], [104, 5, 1, "", "db2mag"], [105, 5, 1, "", "dcgain"], [106, 5, 1, "", "dlqe"], [107, 5, 1, "", "dlqr"], [108, 5, 1, "", "dlyap"], [109, 5, 1, "", "drss"], [110, 5, 1, "", "era"], [111, 5, 1, "", "evalfr"], [112, 5, 1, "", "feedback"], [113, 5, 1, "", "frd"], [114, 5, 1, "", "freqresp"], [115, 5, 1, "", "gangof4"], [116, 5, 1, "", "gram"], [117, 5, 1, "", "hsvd"], [118, 5, 1, "", "impulse"], [119, 5, 1, "", "initial"], [120, 5, 1, "", "lqe"], [121, 5, 1, "", "lqr"], [122, 5, 1, "", "lsim"], [123, 5, 1, "", "lyap"], [124, 5, 1, "", "mag2db"], [125, 5, 1, "", "margin"], [126, 5, 1, "", "markov"], [127, 5, 1, "", "minreal"], [128, 5, 1, "", "modred"], [129, 5, 1, "", "negate"], [130, 5, 1, "", "nichols"], [131, 5, 1, "", "nyquist"], [132, 5, 1, "", "obsv"], [133, 5, 1, "", "pade"], [134, 5, 1, "", "parallel"], [135, 5, 1, "", "place"], [136, 5, 1, "", "pole"], [137, 5, 1, "", "pzmap"], [138, 5, 1, "", "rlocus"], [139, 5, 1, "", "rss"], [140, 5, 1, "", "series"], [141, 5, 1, "", "sisotool"], [142, 5, 1, "", "ss"], [143, 5, 1, "", "ss2tf"], [144, 5, 1, "", "step"], [145, 5, 1, "", "tf"], [146, 5, 1, "", "tf2ss"], [147, 5, 1, "", "tfdata"], [148, 5, 1, "", "unwrap"], [149, 5, 1, "", "zero"]], "control.optimal": [[163, 1, 1, "", "OptimalControlProblem"], [164, 1, 1, "", "OptimalControlResult"], [165, 1, 1, "", "OptimalEstimationProblem"], [166, 1, 1, "", "OptimalEstimationResult"], [167, 5, 1, "", "create_mpc_iosystem"], [168, 5, 1, "", "disturbance_range_constraint"], [169, 5, 1, "", "gaussian_likelihood_cost"], [170, 5, 1, "", "input_poly_constraint"], [171, 5, 1, "", "input_range_constraint"], [172, 5, 1, "", "output_poly_constraint"], [173, 5, 1, "", "output_range_constraint"], [174, 5, 1, "", "quadratic_cost"], [175, 5, 1, "", "solve_ocp"], [176, 5, 1, "", "state_poly_constraint"], [177, 5, 1, "", "state_range_constraint"]], "control.optimal.OptimalControlProblem": [[163, 2, 1, "", "compute_mpc"], [163, 2, 1, "", "compute_trajectory"], [163, 2, 1, "", "create_mpc_iosystem"]], "control.optimal.OptimalControlResult": [[164, 2, 1, "", "__class_getitem__"], [164, 2, 1, "", "__contains__"], [164, 2, 1, "", "__delattr__"], [164, 2, 1, "", "__delitem__"], [164, 2, 1, "", "__dir__"], [164, 2, 1, "", "__eq__"], [164, 2, 1, "", "__ge__"], [164, 2, 1, "", "__getattribute__"], [164, 2, 1, "", "__getitem__"], [164, 2, 1, "", "__gt__"], [164, 3, 1, "", "__hash__"], [164, 2, 1, "", "__ior__"], [164, 2, 1, "", "__iter__"], [164, 2, 1, "", "__le__"], [164, 2, 1, "", "__len__"], [164, 2, 1, "", "__lt__"], [164, 2, 1, "", "__ne__"], [164, 2, 1, "", "__new__"], [164, 2, 1, "", "__or__"], [164, 2, 1, "", "__reversed__"], [164, 2, 1, "", "__ror__"], [164, 2, 1, "", "__setattr__"], [164, 2, 1, "", "__setitem__"], [164, 2, 1, "", "__sizeof__"], [164, 2, 1, "", "clear"], [164, 2, 1, "", "copy"], [164, 3, 1, "", "cost"], [164, 2, 1, "", "fromkeys"], [164, 2, 1, "", "get"], [164, 3, 1, "", "inputs"], [164, 2, 1, "", "items"], [164, 2, 1, "", "keys"], [164, 2, 1, "", "pop"], [164, 2, 1, "", "popitem"], [164, 3, 1, "", "problem"], [164, 2, 1, "", "setdefault"], [164, 3, 1, "", "states"], [164, 3, 1, "", "success"], [164, 2, 1, "", "update"], [164, 2, 1, "", "values"]], "control.optimal.OptimalEstimationProblem": [[165, 2, 1, "", "compute_estimate"], [165, 2, 1, "", "create_mhe_iosystem"]], "control.optimal.OptimalEstimationResult": [[166, 2, 1, "", "__class_getitem__"], [166, 2, 1, "", "__contains__"], [166, 2, 1, "", "__delattr__"], [166, 2, 1, "", "__delitem__"], [166, 2, 1, "", "__dir__"], [166, 2, 1, "", "__eq__"], [166, 2, 1, "", "__ge__"], [166, 2, 1, "", "__getattribute__"], [166, 2, 1, "", "__getitem__"], [166, 2, 1, "", "__gt__"], [166, 3, 1, "", "__hash__"], [166, 2, 1, "", "__ior__"], [166, 2, 1, "", "__iter__"], [166, 2, 1, "", "__le__"], [166, 2, 1, "", "__len__"], [166, 2, 1, "", "__lt__"], [166, 2, 1, "", "__ne__"], [166, 2, 1, "", "__new__"], [166, 2, 1, "", "__or__"], [166, 2, 1, "", "__reversed__"], [166, 2, 1, "", "__ror__"], [166, 2, 1, "", "__setattr__"], [166, 2, 1, "", "__setitem__"], [166, 2, 1, "", "__sizeof__"], [166, 2, 1, "", "clear"], [166, 2, 1, "", "copy"], [166, 3, 1, "", "cost"], [166, 2, 1, "", "fromkeys"], [166, 2, 1, "", "get"], [166, 3, 1, "", "inputs"], [166, 2, 1, "", "items"], [166, 2, 1, "", "keys"], [166, 3, 1, "", "outputs"], [166, 2, 1, "", "pop"], [166, 2, 1, "", "popitem"], [166, 3, 1, "", "problem"], [166, 2, 1, "", "setdefault"], [166, 3, 1, "", "states"], [166, 3, 1, "", "success"], [166, 2, 1, "", "update"], [166, 2, 1, "", "values"]], "control.phaseplot": [[183, 5, 1, "", "boxgrid"], [184, 5, 1, "", "equilpoints"], [185, 5, 1, "", "separatrices"], [186, 5, 1, "", "streamlines"], [187, 5, 1, "", "vectorfield"]], "control.relay_hysteresis_nonlinearity": [[196, 2, 1, "", "__call__"], [196, 2, 1, "", "describing_function"]], "control.saturation_nonlinearity": [[205, 2, 1, "", "__call__"], [205, 2, 1, "", "describing_function"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"control": [0, 1, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 240, 241, 242, 267, 269, 270, 271, 272, 273, 274, 275, 281, 282, 283], "system": [0, 1, 2, 3, 4, 6, 7, 9, 231, 232, 234, 235, 236, 238, 239, 271, 273, 279, 280, 281, 282], "class": [0, 5, 9, 234, 267, 269], "addit": [0, 234, 238], "function": [1, 2, 5, 6, 9, 234, 238, 267, 269, 281], "refer": [1, 241, 242], "avail": 1, "subpackag": 1, "creation": [1, 234], "interconnect": [1, 82, 232, 238, 280], "frequenc": [1, 2, 238, 269], "domain": [1, 238], "plot": [1, 268, 269], "time": [1, 2, 6, 236, 238, 269, 280], "simul": [1, 2, 273, 280], "analysi": [1, 6, 238], "matrix": [1, 238], "comput": 1, "synthesi": [1, 277, 278], "model": [1, 3, 236, 238, 240, 241, 242, 276], "simplif": [1, 238], "tool": 1, "nonlinear": [1, 4, 5, 6, 281], "support": 1, "stochast": [1, 284], "util": [1, 238, 269], "convers": [1, 2, 238], "librari": [2, 231, 244, 256], "convent": 2, "lti": [2, 17], "represent": 2, "state": [2, 3, 234, 238, 239, 271, 273], "space": [2, 3, 238], "transfer": [2, 281], "respons": [2, 3, 269, 284], "data": [2, 269], "frd": [2, 68, 113], "discret": [2, 236], "between": 2, "seri": [2, 140, 206], "packag": [2, 247, 259], "configur": 2, "paramet": [2, 3, 237], "cruis": [3, 4], "process": [3, 234, 247, 259], "vehicl": [3, 281, 282, 283], "dynam": [3, 232, 238, 281], "engin": 3, "input": [3, 234], "ouput": 3, "pole": [3, 136, 193, 269], "zero": [3, 149, 229, 269], "cancel": 3, "pi": 3, "design": [3, 4, 238, 239, 270, 271, 272, 273, 281], "through": 3, "placement": [3, 281], "robust": [3, 274, 275], "chang": [3, 244, 256, 281, 283], "mass": [3, 7], "antiwindup": 3, "protect": 3, "small": 3, "hill": 3, "effect": 3, "windup": 3, "anti": 3, "compens": [3, 238, 281], "exampl": [4, 7, 8, 9, 234, 267, 268, 274, 275, 276, 277, 278, 279, 281], "i": [4, 282], "o": [4, 282], "code": [4, 7, 235, 237, 241, 242, 268, 270, 272, 274, 275, 276, 277, 278, 279, 282, 283], "note": [4, 7, 235, 237, 241, 242, 247, 259, 268, 270, 272, 274, 275, 276, 277, 278, 279, 282, 283], "describ": [5, 6], "modul": [5, 9, 234, 238, 267, 279], "usag": [5, 9, 234, 267], "pre": 5, "defin": [5, 6], "built": 6, "satur": 6, "backlash": 6, "user": 6, "static": 6, "stabil": 6, "us": [6, 234, 247, 259, 271, 273], "limit": [6, 281], "cycl": 6, "posit": 6, "third": 6, "order": [6, 279], "predict": [6, 240], "delai": [6, 238, 280], "era": [7, 110], "spring": 7, "damper": 7, "python": [8, 231, 254, 266], "script": 8, "jupyt": 8, "notebook": 8, "googl": 8, "colab": 8, "differenti": [9, 235], "flat": [9, 235], "overview": [9, 233], "controlplot": 10, "describingfunctionnonlinear": 11, "describingfunctionrespons": 12, "frequencyresponsedata": 13, "frequencyresponselist": 14, "inputoutputsystem": 15, "interconnectedsystem": 16, "linearicsystem": 18, "nonlineariosystem": 19, "nyquistresponsedata": 20, "polezerodata": 21, "statespac": [22, 23], "__call__": [23, 27], "timeresponsedata": 24, "timeresponselist": 25, "transferfunct": [26, 27], "acker": 28, "append": [29, 95], "augw": 30, "balanced_reduct": 31, "bdschur": 32, "bode_plot": 33, "canonical_form": 34, "care": [35, 99], "combine_time_respons": 36, "connect": [37, 100, 234], "connection_t": 38, "correl": 39, "create_estimator_iosystem": 40, "create_statefbk_iosystem": 41, "ctrb": [42, 101], "damp": [43, 102], "dare": [44, 103], "db2mag": [45, 104], "dcgain": [46, 105], "describing_funct": 47, "describing_function_plot": 48, "describing_function_respons": 49, "dlqe": [50, 106], "dlqr": [51, 107], "dlyap": [52, 108], "drss": [53, 109], "eigensys_r": 54, "feedback": [55, 112, 234, 271, 273, 281], "find_eqpt": 56, "flatsi": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "bsplinefamili": 57, "basisfamili": 58, "bezierfamili": 59, "flatsystem": 60, "linearflatsystem": 61, "polyfamili": 62, "systemtrajectori": 63, "point_to_point": 65, "solve_flat_ocp": 66, "forced_respons": 67, "frequency_respons": 69, "todo": [69, 97, 111, 114], "friction_backlash_nonlinear": 70, "gangof4_plot": 71, "gangof4_respons": 72, "get_input_ff_index": 73, "get_output_fb_index": 74, "gram": [75, 116], "h2syn": 76, "hankel_singular_valu": 77, "hinfsyn": 78, "impulse_respons": 79, "initial_respons": 80, "input_output_respons": 81, "isctim": 83, "isdtim": 84, "ispass": 85, "issiso": 86, "issi": 87, "linear": [88, 236, 238, 281], "lqe": [89, 120], "lqr": [90, 121, 270, 271, 273], "lyap": [91, 123], "mag2db": [92, 124], "margin": [93, 125], "markov": [94, 126], "matlab": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 233, 238, 279], "balr": 96, "bode": 97, "c2d": 98, "evalfr": 111, "freqresp": 114, "gangof4": 115, "hsvd": 117, "impuls": 118, "initi": 119, "lsim": 122, "minreal": 127, "modr": 128, "negat": [129, 154], "nichol": 130, "nyquist": 131, "obsv": [132, 162], "pade": [133, 178], "parallel": [134, 179], "place": [135, 188], "pzmap": [137, 194], "rlocu": 138, "rss": [139, 203], "sisotool": [141, 211], "ss": [142, 212, 238], "ss2tf": [143, 213], "step": 144, "tf": [145, 219], "tf2ss": [146, 220], "tfdata": [147, 221], "unwrap": [148, 224], "minimal_r": 150, "mixsyn": 151, "modal_form": 152, "model_reduct": 153, "nichols_grid": 155, "nichols_plot": 156, "nlsy": 157, "norm": 158, "nyquist_plot": 159, "nyquist_respons": 160, "observable_form": 161, "optim": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 247, 259, 267, 283], "optimalcontrolproblem": 163, "optimalcontrolresult": 164, "optimalestimationproblem": 165, "optimalestimationresult": 166, "create_mpc_iosystem": 167, "disturbance_range_constraint": 168, "gaussian_likelihood_cost": 169, "input_poly_constraint": 170, "input_range_constraint": 171, "output_poly_constraint": 172, "output_range_constraint": 173, "quadratic_cost": 174, "solve_ocp": 175, "state_poly_constraint": 176, "state_range_constraint": 177, "phase_crossover_frequ": 180, "phase_plane_plot": 181, "phase_plot": 182, "phaseplot": [183, 184, 185, 186, 187], "boxgrid": 183, "equilpoint": 184, "separatric": 185, "streamlin": 186, "vectorfield": 187, "place_varga": 189, "pole_zero_map": 190, "pole_zero_plot": 191, "pole_zero_subplot": 192, "reachable_form": 195, "relay_hysteresis_nonlinear": 196, "reset_default": 197, "reset_rcparam": 198, "root_locu": 199, "root_locus_map": 200, "root_locus_plot": 201, "rootlocus_pid_design": 202, "sample_system": 204, "saturation_nonlinear": 205, "set_default": 207, "similarity_transform": 208, "singular_values_plot": 209, "singular_values_respons": 210, "ssdata": 214, "stability_margin": 215, "step_info": 216, "step_respons": 217, "summing_junct": 218, "time_response_plot": 222, "timebas": 223, "use_fbs_default": 225, "use_legacy_default": 226, "use_matlab_default": 227, "white_nois": 228, "zpk": 230, "tutori": 232, "goal": 232, "creat": [232, 238, 280], "singl": 232, "implement": 232, "complic": 232, "ie": 232, "realist": 232, "follow": 232, "imag": 232, "png": 232, "preliminari": 232, "auto": 232, "split": 232, "sum": [232, 234], "junction": [232, 234], "construct": 232, "depict": 232, "abov": 232, "introduct": 233, "toolbox": 233, "some": 233, "differ": [233, 247, 259], "from": [233, 238], "instal": 233, "get": 233, "start": 233, "output": [234, 273, 281], "featur": [234, 247, 259], "vector": 234, "element": 234, "automat": 234, "signal": 234, "name": 234, "advanc": 234, "specif": 234, "autom": 234, "kinemat": 235, "car": 235, "sensor": 236, "fusion": 236, "definit": [236, 273], "continu": 236, "quadrat": 236, "estim": [236, 237, 239, 267], "thing": 236, "try": 236, "predictor": 236, "corrector": 236, "form": 236, "makrov": 237, "compat": 238, "gain": [238, 282], "equat": 238, "solver": 238, "algebra": 238, "import": 238, "other": 238, "move": 239, "horizon": 239, "descript": [239, 271], "extend": [239, 273], "kalman": [239, 273], "filter": [239, 273], "bound": 239, "disturb": 239, "mhe": 239, "aircraft": [240, 270, 271, 272], "adapt": [241, 242], "mrac": [241, 242], "siso": [241, 242, 275], "direct": [241, 242], "lyapunov": 241, "rule": [241, 242], "mit": [242, 246, 258], "vendor": [244, 256], "polici": [244, 256], "ad": [244, 256, 281], "updat": [244, 256], "review": [244, 256], "involv": [244, 256], "remov": [244, 256], "unvendor": [244, 256], "credit": [245, 257], "patch": [245, 257], "suggest": [245, 257], "The": [246, 258], "licens": [246, 258], "A": [247, 259], "guid": [247, 259], "mask": [247, 259], "arrai": [247, 259], "numpi": [247, 259], "content": [247, 259], "histori": [247, 259], "main": [247, 259], "new": [247, 259], "core": [247, 259], "ma": [247, 259], "maskedarrai": [247, 259], "matplotlib": [247, 259], "record": [247, 259], "should": [247, 259], "fill": [247, 259], "befor": [247, 259], "thank": [247, 259], "revis": [247, 259], "numpydoc_test_modul": [249, 261], "author": [250, 262], "creator": [250, 262], "contributor": [250, 262], "webencod": [254, 266], "base": [267, 277, 278], "problem": 267, "setup": 267, "tip": 267, "phase": [268, 269], "plane": 269, "custom": 269, "vertic": [270, 271, 272], "takeoff": [270, 271, 272], "land": [270, 271, 272], "later": [271, 281], "inner": [271, 272], "outer": [271, 272], "loop": [271, 280], "ekf": 273, "full": 273, "mimo": 274, "sp96": [274, 275], "3": [274, 281], "8": [274, 281], "2": 275, "1": 275, "balanc": 276, "reduct": 276, "h2": 277, "scherer": [277, 278], "et": [277, 278], "al": [277, 278], "1997": [277, 278], "7": [277, 278, 281], "hinf": 278, "secord": 279, "close": 280, "now": 280, "steer": [281, 283], "11": 281, "drive": 281, "curvi": 281, "road": 281, "figur": 281, "6a": 281, "6": 281, "13": 281, "eigenvalu": 281, "4": 281, "observ": 281, "appli": 281, "trajectori": 281, "gener": 281, "basi": 281, "cost": 281, "forward": 281, "revers": 281, "10": 281, "feedforward": 281, "12": 281, "fundament": 281, "14": 281, "schedul": 282, "steeer": 282, "lane": 283}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Control system classes": [[0, "control-system-classes"]], "Additional classes": [[0, "additional-classes"]], "Function reference": [[1, "function-reference"]], "Available subpackages": [[1, "available-subpackages"]], "System creation": [[1, "system-creation"]], "System interconnections": [[1, "system-interconnections"], [238, "system-interconnections"]], "Frequency domain plotting": [[1, "frequency-domain-plotting"]], "Time domain simulation": [[1, "time-domain-simulation"]], "Control system analysis": [[1, "control-system-analysis"]], "Matrix computations": [[1, "matrix-computations"]], "Control system synthesis": [[1, "control-system-synthesis"]], "Model simplification tools": [[1, "model-simplification-tools"]], "Nonlinear system support": [[1, "nonlinear-system-support"]], "Stochastic system support": [[1, "stochastic-system-support"]], "Utility functions and conversions": [[1, "utility-functions-and-conversions"], [238, "utility-functions-and-conversions"]], "Library conventions": [[2, "library-conventions"]], "LTI system representation": [[2, "lti-system-representation"]], "State space systems": [[2, "state-space-systems"]], "Transfer functions": [[2, "transfer-functions"]], "Frequency response data (FRD) systems": [[2, "frequency-response-data-frd-systems"]], "Discrete time systems": [[2, "discrete-time-systems"]], "Conversion between representations": [[2, "conversion-between-representations"]], "Simulating LTI systems": [[2, "simulating-lti-systems"]], "Time series data": [[2, "time-series-data"]], "Package configuration parameters": [[2, "package-configuration-parameters"]], "Cruise control": [[3, "Cruise-control"]], "Process Model": [[3, "Process-Model"]], "Vehicle Dynamics": [[3, "Vehicle-Dynamics"]], "Engine model": [[3, "Engine-model"]], "Input/ouput model for the vehicle system": [[3, "Input/ouput-model-for-the-vehicle-system"]], "State space controller": [[3, "State-space-controller"]], "Pole/zero cancellation": [[3, "Pole/zero-cancellation"]], "PI Controller": [[3, "PI-Controller"]], "Parameter design through pole placement": [[3, "Parameter-design-through-pole-placement"]], "Robustness to change in mass": [[3, "Robustness-to-change-in-mass"]], "PI controller with antiwindup protection": [[3, "PI-controller-with-antiwindup-protection"]], "Response to a small hill": [[3, "Response-to-a-small-hill"]], "Effect of Windup": [[3, "Effect-of-Windup"]], "PI controller with anti-windup compensation": [[3, "PI-controller-with-anti-windup-compensation"]], "Cruise control design example (as a nonlinear I/O system)": [[4, "cruise-control-design-example-as-a-nonlinear-i-o-system"]], "Code": [[4, "code"], [7, "code"], [235, "code"], [237, "code"], [241, "code"], [242, "code"], [268, "code"], [270, "code"], [272, "code"], [274, "code"], [275, "code"], [276, "code"], [277, "code"], [278, "code"], [279, "code"], [282, "code"], [283, "code"]], "Notes": [[4, "notes"], [7, "notes"], [235, "notes"], [237, "notes"], [241, "notes"], [242, "notes"], [268, "notes"], [270, "notes"], [272, "notes"], [274, "notes"], [275, "notes"], [276, "notes"], [277, "notes"], [278, "notes"], [279, "notes"], [282, "notes"], [283, "notes"]], "Describing functions": [[5, "describing-functions"]], "Module usage": [[5, "module-usage"], [9, "module-usage"], [234, "module-usage"], [267, "module-usage"]], "Pre-defined nonlinearities": [[5, "pre-defined-nonlinearities"]], "Module classes and functions": [[5, "module-classes-and-functions"], [9, "module-classes-and-functions"], [234, "module-classes-and-functions"], [267, "module-classes-and-functions"]], "Describing function analysis": [[6, "Describing-function-analysis"]], "Built-in describing functions": [[6, "Built-in-describing-functions"]], "Saturation nonlinearity": [[6, "Saturation-nonlinearity"]], "Backlash nonlinearity": [[6, "Backlash-nonlinearity"]], "User-defined, static nonlinearities": [[6, "User-defined,-static-nonlinearities"]], "Stability analysis using describing functions": [[6, "Stability-analysis-using-describing-functions"]], "Limit cycle position for a third order system with saturation nonlinearity": [[6, "Limit-cycle-position-for-a-third-order-system-with-saturation-nonlinearity"]], "Limit cycle prediction with for a time-delay system with backlash": [[6, "Limit-cycle-prediction-with-for-a-time-delay-system-with-backlash"]], "ERA example, mass spring damper system": [[7, "era-example-mass-spring-damper-system"]], "Examples": [[8, "examples"]], "Python scripts": [[8, "python-scripts"]], "Jupyter notebooks": [[8, "jupyter-notebooks"]], "Google Colab Notebooks": [[8, "google-colab-notebooks"]], "Differentially flat systems": [[9, "module-control.flatsys"]], "Overview of differential flatness": [[9, "overview-of-differential-flatness"]], "Example": [[9, "example"], [234, "example"], [267, "example"]], "control.ControlPlot": [[10, "control-controlplot"]], "control.DescribingFunctionNonlinearity": [[11, "control-describingfunctionnonlinearity"]], "control.DescribingFunctionResponse": [[12, "control-describingfunctionresponse"]], "control.FrequencyResponseData": [[13, "control-frequencyresponsedata"]], "control.FrequencyResponseList": [[14, "control-frequencyresponselist"]], "control.InputOutputSystem": [[15, "control-inputoutputsystem"]], "control.InterconnectedSystem": [[16, "control-interconnectedsystem"]], "control.LTI": [[17, "control-lti"]], "control.LinearICSystem": [[18, "control-linearicsystem"]], "control.NonlinearIOSystem": [[19, "control-nonlineariosystem"]], "control.NyquistResponseData": [[20, "control-nyquistresponsedata"]], "control.PoleZeroData": [[21, "control-polezerodata"]], "control.StateSpace": [[22, "control-statespace"]], "control.StateSpace.__call__": [[23, "control-statespace-call"]], "control.TimeResponseData": [[24, "control-timeresponsedata"]], "control.TimeResponseList": [[25, "control-timeresponselist"]], "control.TransferFunction": [[26, "control-transferfunction"]], "control.TransferFunction.__call__": [[27, "control-transferfunction-call"]], "control.acker": [[28, "control-acker"]], "control.append": [[29, "control-append"]], "control.augw": [[30, "control-augw"]], "control.balanced_reduction": [[31, "control-balanced-reduction"]], "control.bdschur": [[32, "control-bdschur"]], "control.bode_plot": [[33, "control-bode-plot"]], "control.canonical_form": [[34, "control-canonical-form"]], "control.care": [[35, "control-care"]], "control.combine_time_responses": [[36, "control-combine-time-responses"]], "control.connect": [[37, "control-connect"]], "control.connection_table": [[38, "control-connection-table"]], "control.correlation": [[39, "control-correlation"]], "control.create_estimator_iosystem": [[40, "control-create-estimator-iosystem"]], "control.create_statefbk_iosystem": [[41, "control-create-statefbk-iosystem"]], "control.ctrb": [[42, "control-ctrb"]], "control.damp": [[43, "control-damp"]], "control.dare": [[44, "control-dare"]], "control.db2mag": [[45, "control-db2mag"]], "control.dcgain": [[46, "control-dcgain"]], "control.describing_function": [[47, "control-describing-function"]], "control.describing_function_plot": [[48, "control-describing-function-plot"]], "control.describing_function_response": [[49, "control-describing-function-response"]], "control.dlqe": [[50, "control-dlqe"]], "control.dlqr": [[51, "control-dlqr"]], "control.dlyap": [[52, "control-dlyap"]], "control.drss": [[53, "control-drss"]], "control.eigensys_realization": [[54, "control-eigensys-realization"]], "control.feedback": [[55, "control-feedback"]], "control.find_eqpt": [[56, "control-find-eqpt"]], "control.flatsys.BSplineFamily": [[57, "control-flatsys-bsplinefamily"]], "control.flatsys.BasisFamily": [[58, "control-flatsys-basisfamily"]], "control.flatsys.BezierFamily": [[59, "control-flatsys-bezierfamily"]], "control.flatsys.FlatSystem": [[60, "control-flatsys-flatsystem"]], "control.flatsys.LinearFlatSystem": [[61, "control-flatsys-linearflatsystem"]], "control.flatsys.PolyFamily": [[62, "control-flatsys-polyfamily"]], "control.flatsys.SystemTrajectory": [[63, "control-flatsys-systemtrajectory"]], "control.flatsys.flatsys": [[64, "control-flatsys-flatsys"]], "control.flatsys.point_to_point": [[65, "control-flatsys-point-to-point"]], "control.flatsys.solve_flat_ocp": [[66, "control-flatsys-solve-flat-ocp"]], "control.forced_response": [[67, "control-forced-response"]], "control.frd": [[68, "control-frd"]], "control.frequency_response": [[69, "control-frequency-response"]], "Todo": [[69, "id1"], [97, "id1"], [111, "id1"], [114, "id1"]], "control.friction_backlash_nonlinearity": [[70, "control-friction-backlash-nonlinearity"]], "control.gangof4_plot": [[71, "control-gangof4-plot"]], "control.gangof4_response": [[72, "control-gangof4-response"]], "control.get_input_ff_index": [[73, "control-get-input-ff-index"]], "control.get_output_fb_index": [[74, "control-get-output-fb-index"]], "control.gram": [[75, "control-gram"]], "control.h2syn": [[76, "control-h2syn"]], "control.hankel_singular_values": [[77, "control-hankel-singular-values"]], "control.hinfsyn": [[78, "control-hinfsyn"]], "control.impulse_response": [[79, "control-impulse-response"]], "control.initial_response": [[80, "control-initial-response"]], "control.input_output_response": [[81, "control-input-output-response"]], "control.interconnect": [[82, "control-interconnect"]], "control.isctime": [[83, "control-isctime"]], "control.isdtime": [[84, "control-isdtime"]], "control.ispassive": [[85, "control-ispassive"]], "control.issiso": [[86, "control-issiso"]], "control.issys": [[87, "control-issys"]], "control.linearize": [[88, "control-linearize"]], "control.lqe": [[89, "control-lqe"]], "control.lqr": [[90, "control-lqr"]], "control.lyap": [[91, "control-lyap"]], "control.mag2db": [[92, "control-mag2db"]], "control.margin": [[93, "control-margin"]], "control.markov": [[94, "control-markov"]], "control.matlab.append": [[95, "control-matlab-append"]], "control.matlab.balred": [[96, "control-matlab-balred"]], "control.matlab.bode": [[97, "control-matlab-bode"]], "control.matlab.c2d": [[98, "control-matlab-c2d"]], "control.matlab.care": [[99, "control-matlab-care"]], "control.matlab.connect": [[100, "control-matlab-connect"]], "control.matlab.ctrb": [[101, "control-matlab-ctrb"]], "control.matlab.damp": [[102, "control-matlab-damp"]], "control.matlab.dare": [[103, "control-matlab-dare"]], "control.matlab.db2mag": [[104, "control-matlab-db2mag"]], "control.matlab.dcgain": [[105, "control-matlab-dcgain"]], "control.matlab.dlqe": [[106, "control-matlab-dlqe"]], "control.matlab.dlqr": [[107, "control-matlab-dlqr"]], "control.matlab.dlyap": [[108, "control-matlab-dlyap"]], "control.matlab.drss": [[109, "control-matlab-drss"]], "control.matlab.era": [[110, "control-matlab-era"]], "control.matlab.evalfr": [[111, "control-matlab-evalfr"]], "control.matlab.feedback": [[112, "control-matlab-feedback"]], "control.matlab.frd": [[113, "control-matlab-frd"]], "control.matlab.freqresp": [[114, "control-matlab-freqresp"]], "control.matlab.gangof4": [[115, "control-matlab-gangof4"]], "control.matlab.gram": [[116, "control-matlab-gram"]], "control.matlab.hsvd": [[117, "control-matlab-hsvd"]], "control.matlab.impulse": [[118, "control-matlab-impulse"]], "control.matlab.initial": [[119, "control-matlab-initial"]], "control.matlab.lqe": [[120, "control-matlab-lqe"]], "control.matlab.lqr": [[121, "control-matlab-lqr"]], "control.matlab.lsim": [[122, "control-matlab-lsim"]], "control.matlab.lyap": [[123, "control-matlab-lyap"]], "control.matlab.mag2db": [[124, "control-matlab-mag2db"]], "control.matlab.margin": [[125, "control-matlab-margin"]], "control.matlab.markov": [[126, "control-matlab-markov"]], "control.matlab.minreal": [[127, "control-matlab-minreal"]], "control.matlab.modred": [[128, "control-matlab-modred"]], "control.matlab.negate": [[129, "control-matlab-negate"]], "control.matlab.nichols": [[130, "control-matlab-nichols"]], "control.matlab.nyquist": [[131, "control-matlab-nyquist"]], "control.matlab.obsv": [[132, "control-matlab-obsv"]], "control.matlab.pade": [[133, "control-matlab-pade"]], "control.matlab.parallel": [[134, "control-matlab-parallel"]], "control.matlab.place": [[135, "control-matlab-place"]], "control.matlab.pole": [[136, "control-matlab-pole"]], "control.matlab.pzmap": [[137, "control-matlab-pzmap"]], "control.matlab.rlocus": [[138, "control-matlab-rlocus"]], "control.matlab.rss": [[139, "control-matlab-rss"]], "control.matlab.series": [[140, "control-matlab-series"]], "control.matlab.sisotool": [[141, "control-matlab-sisotool"]], "control.matlab.ss": [[142, "control-matlab-ss"]], "control.matlab.ss2tf": [[143, "control-matlab-ss2tf"]], "control.matlab.step": [[144, "control-matlab-step"]], "control.matlab.tf": [[145, "control-matlab-tf"]], "control.matlab.tf2ss": [[146, "control-matlab-tf2ss"]], "control.matlab.tfdata": [[147, "control-matlab-tfdata"]], "control.matlab.unwrap": [[148, "control-matlab-unwrap"]], "control.matlab.zero": [[149, "control-matlab-zero"]], "control.minimal_realization": [[150, "control-minimal-realization"]], "control.mixsyn": [[151, "control-mixsyn"]], "control.modal_form": [[152, "control-modal-form"]], "control.model_reduction": [[153, "control-model-reduction"]], "control.negate": [[154, "control-negate"]], "control.nichols_grid": [[155, "control-nichols-grid"]], "control.nichols_plot": [[156, "control-nichols-plot"]], "control.nlsys": [[157, "control-nlsys"]], "control.norm": [[158, "control-norm"]], "control.nyquist_plot": [[159, "control-nyquist-plot"]], "control.nyquist_response": [[160, "control-nyquist-response"]], "control.observable_form": [[161, "control-observable-form"]], "control.obsv": [[162, "control-obsv"]], "control.optimal.OptimalControlProblem": [[163, "control-optimal-optimalcontrolproblem"]], "control.optimal.OptimalControlResult": [[164, "control-optimal-optimalcontrolresult"]], "control.optimal.OptimalEstimationProblem": [[165, "control-optimal-optimalestimationproblem"]], "control.optimal.OptimalEstimationResult": [[166, "control-optimal-optimalestimationresult"]], "control.optimal.create_mpc_iosystem": [[167, "control-optimal-create-mpc-iosystem"]], "control.optimal.disturbance_range_constraint": [[168, "control-optimal-disturbance-range-constraint"]], "control.optimal.gaussian_likelihood_cost": [[169, "control-optimal-gaussian-likelihood-cost"]], "control.optimal.input_poly_constraint": [[170, "control-optimal-input-poly-constraint"]], "control.optimal.input_range_constraint": [[171, "control-optimal-input-range-constraint"]], "control.optimal.output_poly_constraint": [[172, "control-optimal-output-poly-constraint"]], "control.optimal.output_range_constraint": [[173, "control-optimal-output-range-constraint"]], "control.optimal.quadratic_cost": [[174, "control-optimal-quadratic-cost"]], "control.optimal.solve_ocp": [[175, "control-optimal-solve-ocp"]], "control.optimal.state_poly_constraint": [[176, "control-optimal-state-poly-constraint"]], "control.optimal.state_range_constraint": [[177, "control-optimal-state-range-constraint"]], "control.pade": [[178, "control-pade"]], "control.parallel": [[179, "control-parallel"]], "control.phase_crossover_frequencies": [[180, "control-phase-crossover-frequencies"]], "control.phase_plane_plot": [[181, "control-phase-plane-plot"]], "control.phase_plot": [[182, "control-phase-plot"]], "control.phaseplot.boxgrid": [[183, "control-phaseplot-boxgrid"]], "control.phaseplot.equilpoints": [[184, "control-phaseplot-equilpoints"]], "control.phaseplot.separatrices": [[185, "control-phaseplot-separatrices"]], "control.phaseplot.streamlines": [[186, "control-phaseplot-streamlines"]], "control.phaseplot.vectorfield": [[187, "control-phaseplot-vectorfield"]], "control.place": [[188, "control-place"]], "control.place_varga": [[189, "control-place-varga"]], "control.pole_zero_map": [[190, "control-pole-zero-map"]], "control.pole_zero_plot": [[191, "control-pole-zero-plot"]], "control.pole_zero_subplots": [[192, "control-pole-zero-subplots"]], "control.poles": [[193, "control-poles"]], "control.pzmap": [[194, "control-pzmap"]], "control.reachable_form": [[195, "control-reachable-form"]], "control.relay_hysteresis_nonlinearity": [[196, "control-relay-hysteresis-nonlinearity"]], "control.reset_defaults": [[197, "control-reset-defaults"]], "control.reset_rcParams": [[198, "control-reset-rcparams"]], "control.root_locus": [[199, "control-root-locus"]], "control.root_locus_map": [[200, "control-root-locus-map"]], "control.root_locus_plot": [[201, "control-root-locus-plot"]], "control.rootlocus_pid_designer": [[202, "control-rootlocus-pid-designer"]], "control.rss": [[203, "control-rss"]], "control.sample_system": [[204, "control-sample-system"]], "control.saturation_nonlinearity": [[205, "control-saturation-nonlinearity"]], "control.series": [[206, "control-series"]], "control.set_defaults": [[207, "control-set-defaults"]], "control.similarity_transform": [[208, "control-similarity-transform"]], "control.singular_values_plot": [[209, "control-singular-values-plot"]], "control.singular_values_response": [[210, "control-singular-values-response"]], "control.sisotool": [[211, "control-sisotool"]], "control.ss": [[212, "control-ss"]], "control.ss2tf": [[213, "control-ss2tf"]], "control.ssdata": [[214, "control-ssdata"]], "control.stability_margins": [[215, "control-stability-margins"]], "control.step_info": [[216, "control-step-info"]], "control.step_response": [[217, "control-step-response"]], "control.summing_junction": [[218, "control-summing-junction"]], "control.tf": [[219, "control-tf"]], "control.tf2ss": [[220, "control-tf2ss"]], "control.tfdata": [[221, "control-tfdata"]], "control.time_response_plot": [[222, "control-time-response-plot"]], "control.timebase": [[223, "control-timebase"]], "control.unwrap": [[224, "control-unwrap"]], "control.use_fbs_defaults": [[225, "control-use-fbs-defaults"]], "control.use_legacy_defaults": [[226, "control-use-legacy-defaults"]], "control.use_matlab_defaults": [[227, "control-use-matlab-defaults"]], "control.white_noise": [[228, "control-white-noise"]], "control.zeros": [[229, "control-zeros"]], "control.zpk": [[230, "control-zpk"]], "Python Control Systems Library": [[231, "python-control-systems-library"]], "Interconnect Tutorial": [[232, "Interconnect-Tutorial"]], "Goal: Create a single dynamic system that implements a complicated interconnected (ie, realistic) system such as the following:image.png": [[232, "Goal:-Create-a-single-dynamic-system-that-implements-a-complicated-interconnected-(ie,-realistic)-system-such-as-the-following:image.png"]], "preliminaries": [[232, "preliminaries"]], "auto-splitting": [[232, "auto-splitting"]], "auto-summing": [[232, "auto-summing"]], "summing junctions": [[232, "summing-junctions"]], "constructing the goal system depicted above": [[232, "constructing-the-goal-system-depicted-above"]], "Introduction": [[233, "introduction"]], "Overview of the toolbox": [[233, "overview-of-the-toolbox"]], "Some differences from MATLAB": [[233, "some-differences-from-matlab"]], "Installation": [[233, "installation"]], "Getting started": [[233, "getting-started"]], "Input/output systems": [[234, "input-output-systems"]], "Additional features": [[234, "additional-features"]], "Vector elements processing": [[234, "vector-elements-processing"]], "Summing junction": [[234, "summing-junction"]], "Automatic connections using signal names": [[234, "automatic-connections-using-signal-names"]], "Advanced specification of signal names": [[234, "advanced-specification-of-signal-names"]], "Automated creation of state feedback systems": [[234, "automated-creation-of-state-feedback-systems"]], "Differentially flat system - kinematic car": [[235, "differentially-flat-system-kinematic-car"]], "Discrete Time Sensor Fusion": [[236, "Discrete-Time-Sensor-Fusion"]], "System definition": [[236, "System-definition"], [273, "System-definition"]], "Continuous time model": [[236, "Continuous-time-model"]], "Discrete time system model": [[236, "Discrete-time-system-model"]], "Sensor model": [[236, "Sensor-model"]], "Linear Quadratic Estimator": [[236, "Linear-Quadratic-Estimator"]], "Things to try": [[236, "Things-to-try"]], "Predictor-corrector form": [[236, "Predictor-corrector-form"]], "Estimation of Makrov parameters": [[237, "estimation-of-makrov-parameters"]], "MATLAB compatibility module": [[238, "module-control.matlab"]], "Creating linear models": [[238, "creating-linear-models"]], "System gain and dynamics": [[238, "system-gain-and-dynamics"]], "Time-domain analysis": [[238, "time-domain-analysis"]], "Frequency-domain analysis": [[238, "frequency-domain-analysis"]], "Compensator design": [[238, "compensator-design"]], "State-space (SS) models": [[238, "state-space-ss-models"]], "Model simplification": [[238, "model-simplification"]], "Time delays": [[238, "time-delays"]], "Matrix equation solvers and linear algebra": [[238, "matrix-equation-solvers-and-linear-algebra"]], "Additional functions": [[238, "additional-functions"]], "Functions imported from other modules": [[238, "functions-imported-from-other-modules"]], "Moving Horizon Estimation": [[239, "Moving-Horizon-Estimation"]], "System Description": [[239, "System-Description"], [271, "System-Description"]], "Control Design": [[239, "Control-Design"]], "State Estimation": [[239, "State-Estimation"]], "Extended Kalman filter": [[239, "Extended-Kalman-filter"]], "Bounded disturbances": [[239, "Bounded-disturbances"]], "Moving Horizon Estimation (MHE)": [[239, "Moving-Horizon-Estimation-(MHE)"]], "Model Predictive Control: Aircraft Model": [[240, "Model-Predictive-Control:-Aircraft-Model"]], "Model-Reference Adaptive Control (MRAC) SISO, direct Lyapunov rule": [[241, "model-reference-adaptive-control-mrac-siso-direct-lyapunov-rule"]], "Model-Reference Adaptive Control (MRAC) SISO, direct MIT rule": [[242, "model-reference-adaptive-control-mrac-siso-direct-mit-rule"]], "Vendored library policy": [[244, "vendored-library-policy"], [256, "vendored-library-policy"]], "Adding/Updating a vendored library": [[244, "adding-updating-a-vendored-library"], [256, "adding-updating-a-vendored-library"]], "Reviewing a change involving a vendored library": [[244, "reviewing-a-change-involving-a-vendored-library"], [256, "reviewing-a-change-involving-a-vendored-library"]], "Removing/Unvendoring a vendored library": [[244, "removing-unvendoring-a-vendored-library"], [256, "removing-unvendoring-a-vendored-library"]], "Credits": [[245, "credits"], [257, "credits"]], "Patches and suggestions": [[245, "patches-and-suggestions"], [257, "patches-and-suggestions"]], "The MIT License (MIT)": [[246, "the-mit-license-mit"], [258, "the-mit-license-mit"]], "A guide to masked arrays in NumPy": [[247, "a-guide-to-masked-arrays-in-numpy"], [259, "a-guide-to-masked-arrays-in-numpy"]], "Contents": [[247, "contents"], [259, "contents"]], "History": [[247, "history"], [259, "history"]], "Main differences": [[247, "main-differences"], [259, "main-differences"]], "New features": [[247, "new-features"], [259, "new-features"]], "Using the new package with numpy.core.ma": [[247, "using-the-new-package-with-numpy-core-ma"], [259, "using-the-new-package-with-numpy-core-ma"]], "Using maskedarray with matplotlib": [[247, "using-maskedarray-with-matplotlib"], [259, "using-maskedarray-with-matplotlib"]], "Masked records": [[247, "masked-records"], [259, "masked-records"]], "Optimizing maskedarray": [[247, "optimizing-maskedarray"], [259, "optimizing-maskedarray"]], "Should masked arrays be filled before processing or not?": [[247, "should-masked-arrays-be-filled-before-processing-or-not"], [259, "should-masked-arrays-be-filled-before-processing-or-not"]], "Thanks": [[247, "thanks"], [259, "thanks"]], "Revision notes": [[247, "revision-notes"], [259, "revision-notes"]], "numpydoc_test_module": [[249, "numpydoc-test-module"], [261, "numpydoc-test-module"]], "Authors": [[250, "authors"], [262, "authors"]], "Creator": [[250, "creator"], [262, "creator"]], "Contributors": [[250, "contributors"], [262, "contributors"]], "python-webencodings": [[254, "python-webencodings"], [266, "python-webencodings"]], "Optimization-based control": [[267, "module-control.optimal"]], "Optimal control problem setup": [[267, "optimal-control-problem-setup"]], "Optimal estimation problem setup": [[267, "optimal-estimation-problem-setup"]], "Optimization Tips": [[267, "optimization-tips"]], "Phase  plot examples": [[268, "phase-plot-examples"]], "Plotting data": [[269, "plotting-data"]], "Time response data": [[269, "time-response-data"]], "Frequency response data": [[269, "frequency-response-data"]], "Pole/zero data": [[269, "pole-zero-data"]], "Phase plane plots": [[269, "phase-plane-plots"]], "Customizing control plots": [[269, "customizing-control-plots"]], "Response and plotting functions": [[269, "response-and-plotting-functions"]], "Response functions": [[269, "response-functions"]], "Plotting functions": [[269, "plotting-functions"]], "Utility functions": [[269, "utility-functions"]], "Response and plotting classes": [[269, "response-and-plotting-classes"]], "LQR control design for vertical takeoff and landing aircraft": [[270, "lqr-control-design-for-vertical-takeoff-and-landing-aircraft"]], "Vertical takeoff and landing aircraft": [[271, "Vertical-takeoff-and-landing-aircraft"]], "LQR state feedback controller": [[271, "LQR-state-feedback-controller"]], "Lateral control using inner/outer loop design": [[271, "Lateral-control-using-inner/outer-loop-design"]], "Inner/outer control design for vertical takeoff and landing aircraft": [[272, "inner-outer-control-design-for-vertical-takeoff-and-landing-aircraft"]], "Output feedback control using LQR and extended Kalman filtering": [[273, "Output-feedback-control-using-LQR-and-extended-Kalman-filtering"]], "Control system design": [[273, "Control-system-design"]], "Simulations": [[273, "Simulations"]], "LQR with EKF": [[273, "LQR-with-EKF"]], "Full state feedback": [[273, "Full-state-feedback"]], "MIMO robust control example (SP96, Example 3.8)": [[274, "mimo-robust-control-example-sp96-example-3-8"]], "SISO robust control example (SP96, Example 2.1)": [[275, "siso-robust-control-example-sp96-example-2-1"]], "Balanced model reduction examples": [[276, "balanced-model-reduction-examples"]], "H2 synthesis, based on Scherer et al. 1997 example 7": [[277, "h2-synthesis-based-on-scherer-et-al-1997-example-7"]], "Hinf synthesis, based on Scherer et al. 1997 example 7": [[278, "hinf-synthesis-based-on-scherer-et-al-1997-example-7"]], "Secord order system (MATLAB module example)": [[279, "secord-order-system-matlab-module-example"]], "Simulating interconnections of systems": [[280, "Simulating-interconnections-of-systems"]], "simulating a closed-loop system": [[280, "simulating-a-closed-loop-system"]], "time delays": [[280, "time-delays"]], "now create a closed-loop system.": [[280, "now-create-a-closed-loop-system."]], "Vehicle steering": [[281, "Vehicle-steering"]], "Vehicle steering dynamics (Example 3.11)": [[281, "Vehicle-steering-dynamics-(Example-3.11)"]], "Vehicle driving on a curvy road (Figure 8.6a)": [[281, "Vehicle-driving-on-a-curvy-road-(Figure-8.6a)"]], "Linearization of lateral steering dynamics (Example 6.13)": [[281, "Linearization-of-lateral-steering-dynamics-(Example-6.13)"]], "Eigenvalue placement controller design (Example 7.4)": [[281, "Eigenvalue-placement-controller-design-(Example-7.4)"]], "Eigenvalue placement observer design (Example 8.3)": [[281, "Eigenvalue-placement-observer-design-(Example-8.3)"]], "Linear observer applied to nonlinear system output": [[281, "Linear-observer-applied-to-nonlinear-system-output"]], "Output Feedback Controller (Example 8.4)": [[281, "Output-Feedback-Controller-(Example-8.4)"]], "Trajectory Generation (Example 8.8)": [[281, "Trajectory-Generation-(Example-8.8)"]], "Change of basis function": [[281, "Change-of-basis-function"]], "Added cost function": [[281, "Added-cost-function"]], "Vehicle transfer functions for forward and reverse driving (Example 10.11)": [[281, "Vehicle-transfer-functions-for-forward-and-reverse-driving-(Example-10.11)"]], "Feedforward Compensation (Example 12.6)": [[281, "Feedforward-Compensation-(Example-12.6)"]], "Fundamental Limits (Example 14.13)": [[281, "Fundamental-Limits-(Example-14.13)"]], "Gain scheduled control for vehicle steeering (I/O system)": [[282, "gain-scheduled-control-for-vehicle-steeering-i-o-system"]], "Optimal control for vehicle steering (lane change)": [[283, "optimal-control-for-vehicle-steering-lane-change"]], "Stochastic Response": [[284, "Stochastic-Response"]]}, "indexentries": {"control": [[1, "module-control"]], "module": [[1, "module-control"], [9, "module-control.flatsys"], [238, "module-control.matlab"], [267, "module-control.optimal"]], "control.flatsys": [[9, "module-control.flatsys"]], "controlplot (class in control)": [[10, "control.ControlPlot"]], "__init__() (control.controlplot method)": [[10, "control.ControlPlot.__init__"]], "axes (control.controlplot attribute)": [[10, "control.ControlPlot.axes"]], "figure (control.controlplot attribute)": [[10, "control.ControlPlot.figure"]], "legend (control.controlplot attribute)": [[10, "control.ControlPlot.legend"]], "lines (control.controlplot attribute)": [[10, "control.ControlPlot.lines"]], "set_plot_title() (control.controlplot method)": [[10, "control.ControlPlot.set_plot_title"]], "describingfunctionnonlinearity (class in control)": [[11, "control.DescribingFunctionNonlinearity"]], "__call__() (control.describingfunctionnonlinearity method)": [[11, "control.DescribingFunctionNonlinearity.__call__"]], "describing_function() (control.describingfunctionnonlinearity method)": [[11, "control.DescribingFunctionNonlinearity.describing_function"]], "describingfunctionresponse (class in control)": [[12, "control.DescribingFunctionResponse"]], "n_vals (control.describingfunctionresponse attribute)": [[12, "control.DescribingFunctionResponse.N_vals"]], "__init__() (control.describingfunctionresponse method)": [[12, "control.DescribingFunctionResponse.__init__"]], "intersections (control.describingfunctionresponse attribute)": [[12, "control.DescribingFunctionResponse.intersections"]], "plot() (control.describingfunctionresponse method)": [[12, "control.DescribingFunctionResponse.plot"]], "positions (control.describingfunctionresponse attribute)": [[12, "control.DescribingFunctionResponse.positions"]], "response (control.describingfunctionresponse attribute)": [[12, "control.DescribingFunctionResponse.response"]], "frequencyresponsedata (class in control)": [[13, "control.FrequencyResponseData"]], "__init__() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.__init__"]], "bandwidth() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.bandwidth"]], "copy() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.copy"]], "damp() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.damp"]], "dcgain() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.dcgain"]], "dt (control.frequencyresponsedata attribute)": [[13, "control.FrequencyResponseData.dt"]], "eval() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.eval"]], "feedback() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.feedback"]], "find_input() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.find_input"]], "find_inputs() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.find_inputs"]], "find_output() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.find_output"]], "find_outputs() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.find_outputs"]], "find_state() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.find_state"]], "find_states() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.find_states"]], "freqresp() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.freqresp"]], "frequency_response() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.frequency_response"]], "fresp (control.frequencyresponsedata attribute)": [[13, "control.FrequencyResponseData.fresp"]], "isctime() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.isctime"]], "isdtime() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.isdtime"]], "issiso() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.issiso"]], "ninputs (control.frequencyresponsedata attribute)": [[13, "control.FrequencyResponseData.ninputs"]], "noutputs (control.frequencyresponsedata attribute)": [[13, "control.FrequencyResponseData.noutputs"]], "nstates (control.frequencyresponsedata attribute)": [[13, "control.FrequencyResponseData.nstates"]], "omega (control.frequencyresponsedata attribute)": [[13, "control.FrequencyResponseData.omega"]], "plot() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.plot"]], "set_inputs() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.set_inputs"]], "set_outputs() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.set_outputs"]], "set_states() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.set_states"]], "to_pandas() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.to_pandas"]], "update_names() (control.frequencyresponsedata method)": [[13, "control.FrequencyResponseData.update_names"]], "frequencyresponselist (class in control)": [[14, "control.FrequencyResponseList"]], "__init__() (control.frequencyresponselist method)": [[14, "control.FrequencyResponseList.__init__"]], "append() (control.frequencyresponselist method)": [[14, "control.FrequencyResponseList.append"]], "clear() (control.frequencyresponselist method)": [[14, "control.FrequencyResponseList.clear"]], "copy() (control.frequencyresponselist method)": [[14, "control.FrequencyResponseList.copy"]], "count() (control.frequencyresponselist method)": [[14, "control.FrequencyResponseList.count"]], "extend() (control.frequencyresponselist method)": [[14, "control.FrequencyResponseList.extend"]], "index() (control.frequencyresponselist method)": [[14, "control.FrequencyResponseList.index"]], "insert() (control.frequencyresponselist method)": [[14, "control.FrequencyResponseList.insert"]], "pop() (control.frequencyresponselist method)": [[14, "control.FrequencyResponseList.pop"]], "remove() (control.frequencyresponselist method)": [[14, "control.FrequencyResponseList.remove"]], "reverse() (control.frequencyresponselist method)": [[14, "control.FrequencyResponseList.reverse"]], "sort() (control.frequencyresponselist method)": [[14, "control.FrequencyResponseList.sort"]], "inputoutputsystem (class in control)": [[15, "control.InputOutputSystem"]], "copy() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.copy"]], "dt (control.inputoutputsystem attribute)": [[15, "control.InputOutputSystem.dt"]], "find_input() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.find_input"]], "find_inputs() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.find_inputs"]], "find_output() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.find_output"]], "find_outputs() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.find_outputs"]], "find_state() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.find_state"]], "find_states() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.find_states"]], "isctime() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.isctime"]], "isdtime() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.isdtime"]], "issiso() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.issiso"]], "name (control.inputoutputsystem attribute)": [[15, "control.InputOutputSystem.name"]], "ninputs (control.inputoutputsystem attribute)": [[15, "control.InputOutputSystem.ninputs"]], "noutputs (control.inputoutputsystem attribute)": [[15, "control.InputOutputSystem.noutputs"]], "nstates (control.inputoutputsystem attribute)": [[15, "control.InputOutputSystem.nstates"]], "params (control.inputoutputsystem attribute)": [[15, "control.InputOutputSystem.params"]], "set_inputs() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.set_inputs"]], "set_outputs() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.set_outputs"]], "set_states() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.set_states"]], "update_names() (control.inputoutputsystem method)": [[15, "control.InputOutputSystem.update_names"]], "interconnectedsystem (class in control)": [[16, "control.InterconnectedSystem"]], "__add__() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.__add__"]], "__call__() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.__call__"]], "__mul__() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.__mul__"]], "__neg__() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.__neg__"]], "__radd__() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.__radd__"]], "__rmul__() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.__rmul__"]], "__rsub__() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.__rsub__"]], "__sub__() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.__sub__"]], "__truediv__() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.__truediv__"]], "check_unused_signals() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.check_unused_signals"]], "connection_table() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.connection_table"]], "copy() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.copy"]], "dynamics() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.dynamics"]], "feedback() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.feedback"]], "find_input() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.find_input"]], "find_inputs() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.find_inputs"]], "find_output() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.find_output"]], "find_outputs() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.find_outputs"]], "find_state() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.find_state"]], "find_states() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.find_states"]], "isctime() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.isctime"]], "isdtime() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.isdtime"]], "issiso() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.issiso"]], "linearize() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.linearize"]], "ninputs (control.interconnectedsystem attribute)": [[16, "control.InterconnectedSystem.ninputs"]], "noutputs (control.interconnectedsystem attribute)": [[16, "control.InterconnectedSystem.noutputs"]], "nstates (control.interconnectedsystem attribute)": [[16, "control.InterconnectedSystem.nstates"]], "output() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.output"]], "set_connect_map() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.set_connect_map"]], "set_input_map() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.set_input_map"]], "set_inputs() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.set_inputs"]], "set_output_map() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.set_output_map"]], "set_outputs() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.set_outputs"]], "set_states() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.set_states"]], "unused_signals() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.unused_signals"]], "update_names() (control.interconnectedsystem method)": [[16, "control.InterconnectedSystem.update_names"]], "lti (class in control)": [[17, "control.LTI"]], "bandwidth() (control.lti method)": [[17, "control.LTI.bandwidth"]], "copy() (control.lti method)": [[17, "control.LTI.copy"]], "damp() (control.lti method)": [[17, "control.LTI.damp"]], "dcgain() (control.lti method)": [[17, "control.LTI.dcgain"]], "find_input() (control.lti method)": [[17, "control.LTI.find_input"]], "find_inputs() (control.lti method)": [[17, "control.LTI.find_inputs"]], "find_output() (control.lti method)": [[17, "control.LTI.find_output"]], "find_outputs() (control.lti method)": [[17, "control.LTI.find_outputs"]], "find_state() (control.lti method)": [[17, "control.LTI.find_state"]], "find_states() (control.lti method)": [[17, "control.LTI.find_states"]], "frequency_response() (control.lti method)": [[17, "control.LTI.frequency_response"]], "isctime() (control.lti method)": [[17, "control.LTI.isctime"]], "isdtime() (control.lti method)": [[17, "control.LTI.isdtime"]], "issiso() (control.lti method)": [[17, "control.LTI.issiso"]], "ninputs (control.lti attribute)": [[17, "control.LTI.ninputs"]], "noutputs (control.lti attribute)": [[17, "control.LTI.noutputs"]], "nstates (control.lti attribute)": [[17, "control.LTI.nstates"]], "set_inputs() (control.lti method)": [[17, "control.LTI.set_inputs"]], "set_outputs() (control.lti method)": [[17, "control.LTI.set_outputs"]], "set_states() (control.lti method)": [[17, "control.LTI.set_states"]], "update_names() (control.lti method)": [[17, "control.LTI.update_names"]], "a (control.linearicsystem attribute)": [[18, "control.LinearICSystem.A"]], "b (control.linearicsystem attribute)": [[18, "control.LinearICSystem.B"]], "c (control.linearicsystem attribute)": [[18, "control.LinearICSystem.C"]], "d (control.linearicsystem attribute)": [[18, "control.LinearICSystem.D"]], "linearicsystem (class in control)": [[18, "control.LinearICSystem"]], "__add__() (control.linearicsystem method)": [[18, "control.LinearICSystem.__add__"]], "__call__() (control.linearicsystem method)": [[18, "control.LinearICSystem.__call__"]], "__getitem__() (control.linearicsystem method)": [[18, "control.LinearICSystem.__getitem__"]], "__mul__() (control.linearicsystem method)": [[18, "control.LinearICSystem.__mul__"]], "__neg__() (control.linearicsystem method)": [[18, "control.LinearICSystem.__neg__"]], "__radd__() (control.linearicsystem method)": [[18, "control.LinearICSystem.__radd__"]], "__rmul__() (control.linearicsystem method)": [[18, "control.LinearICSystem.__rmul__"]], "__rsub__() (control.linearicsystem method)": [[18, "control.LinearICSystem.__rsub__"]], "__sub__() (control.linearicsystem method)": [[18, "control.LinearICSystem.__sub__"]], "__truediv__() (control.linearicsystem method)": [[18, "control.LinearICSystem.__truediv__"]], "append() (control.linearicsystem method)": [[18, "control.LinearICSystem.append"]], "bandwidth() (control.linearicsystem method)": [[18, "control.LinearICSystem.bandwidth"]], "check_unused_signals() (control.linearicsystem method)": [[18, "control.LinearICSystem.check_unused_signals"]], "connection_table() (control.linearicsystem method)": [[18, "control.LinearICSystem.connection_table"]], "copy() (control.linearicsystem method)": [[18, "control.LinearICSystem.copy"]], "damp() (control.linearicsystem method)": [[18, "control.LinearICSystem.damp"]], "dcgain() (control.linearicsystem method)": [[18, "control.LinearICSystem.dcgain"]], "dynamics() (control.linearicsystem method)": [[18, "control.LinearICSystem.dynamics"]], "feedback() (control.linearicsystem method)": [[18, "control.LinearICSystem.feedback"]], "find_input() (control.linearicsystem method)": [[18, "control.LinearICSystem.find_input"]], "find_inputs() (control.linearicsystem method)": [[18, "control.LinearICSystem.find_inputs"]], "find_output() (control.linearicsystem method)": [[18, "control.LinearICSystem.find_output"]], "find_outputs() (control.linearicsystem method)": [[18, "control.LinearICSystem.find_outputs"]], "find_state() (control.linearicsystem method)": [[18, "control.LinearICSystem.find_state"]], "find_states() (control.linearicsystem method)": [[18, "control.LinearICSystem.find_states"]], "freqresp() (control.linearicsystem method)": [[18, "control.LinearICSystem.freqresp"]], "frequency_response() (control.linearicsystem method)": [[18, "control.LinearICSystem.frequency_response"]], "horner() (control.linearicsystem method)": [[18, "control.LinearICSystem.horner"]], "isctime() (control.linearicsystem method)": [[18, "control.LinearICSystem.isctime"]], "isdtime() (control.linearicsystem method)": [[18, "control.LinearICSystem.isdtime"]], "issiso() (control.linearicsystem method)": [[18, "control.LinearICSystem.issiso"]], "lft() (control.linearicsystem method)": [[18, "control.LinearICSystem.lft"]], "linearize() (control.linearicsystem method)": [[18, "control.LinearICSystem.linearize"]], "minreal() (control.linearicsystem method)": [[18, "control.LinearICSystem.minreal"]], "ninputs (control.linearicsystem attribute)": [[18, "control.LinearICSystem.ninputs"]], "noutputs (control.linearicsystem attribute)": [[18, "control.LinearICSystem.noutputs"]], "nstates (control.linearicsystem attribute)": [[18, "control.LinearICSystem.nstates"]], "output() (control.linearicsystem method)": [[18, "control.LinearICSystem.output"]], "poles() (control.linearicsystem method)": [[18, "control.LinearICSystem.poles"]], "returnscipysignallti() (control.linearicsystem method)": [[18, "control.LinearICSystem.returnScipySignalLTI"]], "sample() (control.linearicsystem method)": [[18, "control.LinearICSystem.sample"]], "set_connect_map() (control.linearicsystem method)": [[18, "control.LinearICSystem.set_connect_map"]], "set_input_map() (control.linearicsystem method)": [[18, "control.LinearICSystem.set_input_map"]], "set_inputs() (control.linearicsystem method)": [[18, "control.LinearICSystem.set_inputs"]], "set_output_map() (control.linearicsystem method)": [[18, "control.LinearICSystem.set_output_map"]], "set_outputs() (control.linearicsystem method)": [[18, "control.LinearICSystem.set_outputs"]], "set_states() (control.linearicsystem method)": [[18, "control.LinearICSystem.set_states"]], "slycot_laub() (control.linearicsystem method)": [[18, "control.LinearICSystem.slycot_laub"]], "states (control.linearicsystem property)": [[18, "control.LinearICSystem.states"]], "unused_signals() (control.linearicsystem method)": [[18, "control.LinearICSystem.unused_signals"]], "update_names() (control.linearicsystem method)": [[18, "control.LinearICSystem.update_names"]], "zeros() (control.linearicsystem method)": [[18, "control.LinearICSystem.zeros"]], "nonlineariosystem (class in control)": [[19, "control.NonlinearIOSystem"]], "__add__() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.__add__"]], "__call__() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.__call__"]], "__mul__() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.__mul__"]], "__neg__() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.__neg__"]], "__radd__() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.__radd__"]], "__rmul__() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.__rmul__"]], "__rsub__() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.__rsub__"]], "__sub__() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.__sub__"]], "__truediv__() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.__truediv__"]], "copy() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.copy"]], "dynamics() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.dynamics"]], "feedback() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.feedback"]], "find_input() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.find_input"]], "find_inputs() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.find_inputs"]], "find_output() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.find_output"]], "find_outputs() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.find_outputs"]], "find_state() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.find_state"]], "find_states() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.find_states"]], "isctime() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.isctime"]], "isdtime() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.isdtime"]], "issiso() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.issiso"]], "linearize() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.linearize"]], "ninputs (control.nonlineariosystem attribute)": [[19, "control.NonlinearIOSystem.ninputs"]], "noutputs (control.nonlineariosystem attribute)": [[19, "control.NonlinearIOSystem.noutputs"]], "nstates (control.nonlineariosystem attribute)": [[19, "control.NonlinearIOSystem.nstates"]], "output() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.output"]], "set_inputs() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.set_inputs"]], "set_outputs() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.set_outputs"]], "set_states() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.set_states"]], "update_names() (control.nonlineariosystem method)": [[19, "control.NonlinearIOSystem.update_names"]], "nyquistresponsedata (class in control)": [[20, "control.NyquistResponseData"]], "__init__() (control.nyquistresponsedata method)": [[20, "control.NyquistResponseData.__init__"]], "contour (control.nyquistresponsedata attribute)": [[20, "control.NyquistResponseData.contour"]], "count (control.nyquistresponsedata attribute)": [[20, "control.NyquistResponseData.count"]], "dt (control.nyquistresponsedata attribute)": [[20, "control.NyquistResponseData.dt"]], "response (control.nyquistresponsedata attribute)": [[20, "control.NyquistResponseData.response"]], "return_contour (control.nyquistresponsedata attribute)": [[20, "control.NyquistResponseData.return_contour"]], "sysname (control.nyquistresponsedata attribute)": [[20, "control.NyquistResponseData.sysname"]], "polezerodata (class in control)": [[21, "control.PoleZeroData"]], "__init__() (control.polezerodata method)": [[21, "control.PoleZeroData.__init__"]], "gains (control.polezerodata attribute)": [[21, "control.PoleZeroData.gains"]], "loci (control.polezerodata attribute)": [[21, "control.PoleZeroData.loci"]], "plot() (control.polezerodata method)": [[21, "control.PoleZeroData.plot"]], "poles (control.polezerodata attribute)": [[21, "control.PoleZeroData.poles"]], "sys (control.polezerodata attribute)": [[21, "control.PoleZeroData.sys"]], "sysname (control.polezerodata attribute)": [[21, "control.PoleZeroData.sysname"]], "zeros (control.polezerodata attribute)": [[21, "control.PoleZeroData.zeros"]], "a (control.statespace attribute)": [[22, "control.StateSpace.A"]], "b (control.statespace attribute)": [[22, "control.StateSpace.B"]], "c (control.statespace attribute)": [[22, "control.StateSpace.C"]], "d (control.statespace attribute)": [[22, "control.StateSpace.D"]], "statespace (class in control)": [[22, "control.StateSpace"]], "__add__() (control.statespace method)": [[22, "control.StateSpace.__add__"]], "__call__() (control.statespace method)": [[22, "control.StateSpace.__call__"], [23, "control.StateSpace.__call__"]], "__getitem__() (control.statespace method)": [[22, "control.StateSpace.__getitem__"]], "__mul__() (control.statespace method)": [[22, "control.StateSpace.__mul__"]], "__neg__() (control.statespace method)": [[22, "control.StateSpace.__neg__"]], "__radd__() (control.statespace method)": [[22, "control.StateSpace.__radd__"]], "__rmul__() (control.statespace method)": [[22, "control.StateSpace.__rmul__"]], "__rsub__() (control.statespace method)": [[22, "control.StateSpace.__rsub__"]], "__sub__() (control.statespace method)": [[22, "control.StateSpace.__sub__"]], "__truediv__() (control.statespace method)": [[22, "control.StateSpace.__truediv__"]], "append() (control.statespace method)": [[22, "control.StateSpace.append"]], "bandwidth() (control.statespace method)": [[22, "control.StateSpace.bandwidth"]], "copy() (control.statespace method)": [[22, "control.StateSpace.copy"]], "damp() (control.statespace method)": [[22, "control.StateSpace.damp"]], "dcgain() (control.statespace method)": [[22, "control.StateSpace.dcgain"]], "dt (control.statespace attribute)": [[22, "control.StateSpace.dt"]], "dynamics() (control.statespace method)": [[22, "control.StateSpace.dynamics"]], "feedback() (control.statespace method)": [[22, "control.StateSpace.feedback"]], "find_input() (control.statespace method)": [[22, "control.StateSpace.find_input"]], "find_inputs() (control.statespace method)": [[22, "control.StateSpace.find_inputs"]], "find_output() (control.statespace method)": [[22, "control.StateSpace.find_output"]], "find_outputs() (control.statespace method)": [[22, "control.StateSpace.find_outputs"]], "find_state() (control.statespace method)": [[22, "control.StateSpace.find_state"]], "find_states() (control.statespace method)": [[22, "control.StateSpace.find_states"]], "freqresp() (control.statespace method)": [[22, "control.StateSpace.freqresp"]], "frequency_response() (control.statespace method)": [[22, "control.StateSpace.frequency_response"]], "horner() (control.statespace method)": [[22, "control.StateSpace.horner"]], "isctime() (control.statespace method)": [[22, "control.StateSpace.isctime"]], "isdtime() (control.statespace method)": [[22, "control.StateSpace.isdtime"]], "issiso() (control.statespace method)": [[22, "control.StateSpace.issiso"]], "lft() (control.statespace method)": [[22, "control.StateSpace.lft"]], "linearize() (control.statespace method)": [[22, "control.StateSpace.linearize"]], "minreal() (control.statespace method)": [[22, "control.StateSpace.minreal"]], "ninputs (control.statespace attribute)": [[22, "control.StateSpace.ninputs"]], "noutputs (control.statespace attribute)": [[22, "control.StateSpace.noutputs"]], "nstates (control.statespace attribute)": [[22, "control.StateSpace.nstates"]], "output() (control.statespace method)": [[22, "control.StateSpace.output"]], "poles() (control.statespace method)": [[22, "control.StateSpace.poles"]], "returnscipysignallti() (control.statespace method)": [[22, "control.StateSpace.returnScipySignalLTI"]], "sample() (control.statespace method)": [[22, "control.StateSpace.sample"]], "set_inputs() (control.statespace method)": [[22, "control.StateSpace.set_inputs"]], "set_outputs() (control.statespace method)": [[22, "control.StateSpace.set_outputs"]], "set_states() (control.statespace method)": [[22, "control.StateSpace.set_states"]], "slycot_laub() (control.statespace method)": [[22, "control.StateSpace.slycot_laub"]], "states (control.statespace property)": [[22, "control.StateSpace.states"]], "update_names() (control.statespace method)": [[22, "control.StateSpace.update_names"]], "zeros() (control.statespace method)": [[22, "control.StateSpace.zeros"]], "timeresponsedata (class in control)": [[24, "control.TimeResponseData"]], "__init__() (control.timeresponsedata method)": [[24, "control.TimeResponseData.__init__"]], "inputs (control.timeresponsedata property)": [[24, "control.TimeResponseData.inputs"]], "issiso (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.issiso"]], "message (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.message"]], "ntraces (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.ntraces"]], "outputs (control.timeresponsedata property)": [[24, "control.TimeResponseData.outputs"]], "params (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.params"]], "plot() (control.timeresponsedata method)": [[24, "control.TimeResponseData.plot"]], "plot_inputs (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.plot_inputs"]], "squeeze (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.squeeze"]], "states (control.timeresponsedata property)": [[24, "control.TimeResponseData.states"]], "success (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.success"]], "sysname (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.sysname"]], "t (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.t"]], "time (control.timeresponsedata property)": [[24, "control.TimeResponseData.time"]], "title (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.title"]], "to_pandas() (control.timeresponsedata method)": [[24, "control.TimeResponseData.to_pandas"]], "trace_labels (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.trace_labels"]], "trace_types (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.trace_types"]], "transpose (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.transpose"]], "u (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.u"]], "x (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.x"]], "y (control.timeresponsedata attribute)": [[24, "control.TimeResponseData.y"]], "timeresponselist (class in control)": [[25, "control.TimeResponseList"]], "__init__() (control.timeresponselist method)": [[25, "control.TimeResponseList.__init__"]], "append() (control.timeresponselist method)": [[25, "control.TimeResponseList.append"]], "clear() (control.timeresponselist method)": [[25, "control.TimeResponseList.clear"]], "copy() (control.timeresponselist method)": [[25, "control.TimeResponseList.copy"]], "count() (control.timeresponselist method)": [[25, "control.TimeResponseList.count"]], "extend() (control.timeresponselist method)": [[25, "control.TimeResponseList.extend"]], "index() (control.timeresponselist method)": [[25, "control.TimeResponseList.index"]], "insert() (control.timeresponselist method)": [[25, "control.TimeResponseList.insert"]], "pop() (control.timeresponselist method)": [[25, "control.TimeResponseList.pop"]], "remove() (control.timeresponselist method)": [[25, "control.TimeResponseList.remove"]], "reverse() (control.timeresponselist method)": [[25, "control.TimeResponseList.reverse"]], "sort() (control.timeresponselist method)": [[25, "control.TimeResponseList.sort"]], "transferfunction (class in control)": [[26, "control.TransferFunction"]], "__add__() (control.transferfunction method)": [[26, "control.TransferFunction.__add__"]], "__call__() (control.transferfunction method)": [[26, "control.TransferFunction.__call__"], [27, "control.TransferFunction.__call__"]], "__mul__() (control.transferfunction method)": [[26, "control.TransferFunction.__mul__"]], "__neg__() (control.transferfunction method)": [[26, "control.TransferFunction.__neg__"]], "__radd__() (control.transferfunction method)": [[26, "control.TransferFunction.__radd__"]], "__rmul__() (control.transferfunction method)": [[26, "control.TransferFunction.__rmul__"]], "__rsub__() (control.transferfunction method)": [[26, "control.TransferFunction.__rsub__"]], "__rtruediv__() (control.transferfunction method)": [[26, "control.TransferFunction.__rtruediv__"]], "__sub__() (control.transferfunction method)": [[26, "control.TransferFunction.__sub__"]], "__truediv__() (control.transferfunction method)": [[26, "control.TransferFunction.__truediv__"]], "bandwidth() (control.transferfunction method)": [[26, "control.TransferFunction.bandwidth"]], "copy() (control.transferfunction method)": [[26, "control.TransferFunction.copy"]], "damp() (control.transferfunction method)": [[26, "control.TransferFunction.damp"]], "dcgain() (control.transferfunction method)": [[26, "control.TransferFunction.dcgain"]], "den (control.transferfunction attribute)": [[26, "control.TransferFunction.den"]], "dt (control.transferfunction attribute)": [[26, "control.TransferFunction.dt"]], "feedback() (control.transferfunction method)": [[26, "control.TransferFunction.feedback"]], "find_input() (control.transferfunction method)": [[26, "control.TransferFunction.find_input"]], "find_inputs() (control.transferfunction method)": [[26, "control.TransferFunction.find_inputs"]], "find_output() (control.transferfunction method)": [[26, "control.TransferFunction.find_output"]], "find_outputs() (control.transferfunction method)": [[26, "control.TransferFunction.find_outputs"]], "find_state() (control.transferfunction method)": [[26, "control.TransferFunction.find_state"]], "find_states() (control.transferfunction method)": [[26, "control.TransferFunction.find_states"]], "freqresp() (control.transferfunction method)": [[26, "control.TransferFunction.freqresp"]], "frequency_response() (control.transferfunction method)": [[26, "control.TransferFunction.frequency_response"]], "horner() (control.transferfunction method)": [[26, "control.TransferFunction.horner"]], "isctime() (control.transferfunction method)": [[26, "control.TransferFunction.isctime"]], "isdtime() (control.transferfunction method)": [[26, "control.TransferFunction.isdtime"]], "issiso() (control.transferfunction method)": [[26, "control.TransferFunction.issiso"]], "minreal() (control.transferfunction method)": [[26, "control.TransferFunction.minreal"]], "ninputs (control.transferfunction attribute)": [[26, "control.TransferFunction.ninputs"]], "noutputs (control.transferfunction attribute)": [[26, "control.TransferFunction.noutputs"]], "nstates (control.transferfunction attribute)": [[26, "control.TransferFunction.nstates"]], "num (control.transferfunction attribute)": [[26, "control.TransferFunction.num"]], "poles() (control.transferfunction method)": [[26, "control.TransferFunction.poles"]], "returnscipysignallti() (control.transferfunction method)": [[26, "control.TransferFunction.returnScipySignalLTI"]], "s (control.transferfunction attribute)": [[26, "control.TransferFunction.s"]], "sample() (control.transferfunction method)": [[26, "control.TransferFunction.sample"]], "set_inputs() (control.transferfunction method)": [[26, "control.TransferFunction.set_inputs"]], "set_outputs() (control.transferfunction method)": [[26, "control.TransferFunction.set_outputs"]], "set_states() (control.transferfunction method)": [[26, "control.TransferFunction.set_states"]], "update_names() (control.transferfunction method)": [[26, "control.TransferFunction.update_names"]], "z (control.transferfunction attribute)": [[26, "control.TransferFunction.z"]], "zeros() (control.transferfunction method)": [[26, "control.TransferFunction.zeros"]], "acker() (in module control)": [[28, "control.acker"]], "append() (in module control)": [[29, "control.append"]], "augw() (in module control)": [[30, "control.augw"]], "balanced_reduction() (in module control)": [[31, "control.balanced_reduction"]], "bdschur() (in module control)": [[32, "control.bdschur"]], "bode_plot() (in module control)": [[33, "control.bode_plot"]], "canonical_form() (in module control)": [[34, "control.canonical_form"]], "care() (in module control)": [[35, "control.care"]], "combine_time_responses() (in module control)": [[36, "control.combine_time_responses"]], "connect() (in module control)": [[37, "control.connect"]], "connection_table() (in module control)": [[38, "control.connection_table"]], "correlation() (in module control)": [[39, "control.correlation"]], "create_estimator_iosystem() (in module control)": [[40, "control.create_estimator_iosystem"]], "create_statefbk_iosystem() (in module control)": [[41, "control.create_statefbk_iosystem"]], "ctrb() (in module control)": [[42, "control.ctrb"]], "damp() (in module control)": [[43, "control.damp"]], "dare() (in module control)": [[44, "control.dare"]], "db2mag() (in module control)": [[45, "control.db2mag"]], "dcgain() (in module control)": [[46, "control.dcgain"]], "describing_function() (in module control)": [[47, "control.describing_function"]], "describing_function_plot() (in module control)": [[48, "control.describing_function_plot"]], "describing_function_response() (in module control)": [[49, "control.describing_function_response"]], "dlqe() (in module control)": [[50, "control.dlqe"]], "dlqr() (in module control)": [[51, "control.dlqr"]], "dlyap() (in module control)": [[52, "control.dlyap"]], "drss() (in module control)": [[53, "control.drss"]], "eigensys_realization() (in module control)": [[54, "control.eigensys_realization"]], "feedback() (in module control)": [[55, "control.feedback"]], "find_eqpt() (in module control)": [[56, "control.find_eqpt"]], "bsplinefamily (class in control.flatsys)": [[57, "control.flatsys.BSplineFamily"]], "__call__() (control.flatsys.bsplinefamily method)": [[57, "control.flatsys.BSplineFamily.__call__"]], "eval() (control.flatsys.bsplinefamily method)": [[57, "control.flatsys.BSplineFamily.eval"]], "eval_deriv() (control.flatsys.bsplinefamily method)": [[57, "control.flatsys.BSplineFamily.eval_deriv"]], "var_ncoefs() (control.flatsys.bsplinefamily method)": [[57, "control.flatsys.BSplineFamily.var_ncoefs"]], "basisfamily (class in control.flatsys)": [[58, "control.flatsys.BasisFamily"]], "n (control.flatsys.basisfamily attribute)": [[58, "control.flatsys.BasisFamily.N"]], "__call__() (control.flatsys.basisfamily method)": [[58, "control.flatsys.BasisFamily.__call__"]], "eval() (control.flatsys.basisfamily method)": [[58, "control.flatsys.BasisFamily.eval"]], "eval_deriv() (control.flatsys.basisfamily method)": [[58, "control.flatsys.BasisFamily.eval_deriv"]], "var_ncoefs() (control.flatsys.basisfamily method)": [[58, "control.flatsys.BasisFamily.var_ncoefs"]], "bezierfamily (class in control.flatsys)": [[59, "control.flatsys.BezierFamily"]], "__call__() (control.flatsys.bezierfamily method)": [[59, "control.flatsys.BezierFamily.__call__"]], "eval() (control.flatsys.bezierfamily method)": [[59, "control.flatsys.BezierFamily.eval"]], "eval_deriv() (control.flatsys.bezierfamily method)": [[59, "control.flatsys.BezierFamily.eval_deriv"]], "var_ncoefs() (control.flatsys.bezierfamily method)": [[59, "control.flatsys.BezierFamily.var_ncoefs"]], "flatsystem (class in control.flatsys)": [[60, "control.flatsys.FlatSystem"]], "__add__() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.__add__"]], "__call__() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.__call__"]], "__mul__() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.__mul__"]], "__neg__() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.__neg__"]], "__radd__() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.__radd__"]], "__rmul__() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.__rmul__"]], "__rsub__() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.__rsub__"]], "__sub__() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.__sub__"]], "__truediv__() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.__truediv__"]], "copy() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.copy"]], "dynamics() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.dynamics"]], "feedback() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.feedback"]], "find_input() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.find_input"]], "find_inputs() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.find_inputs"]], "find_output() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.find_output"]], "find_outputs() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.find_outputs"]], "find_state() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.find_state"]], "find_states() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.find_states"]], "forward() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.forward"]], "isctime() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.isctime"]], "isdtime() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.isdtime"]], "issiso() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.issiso"]], "linearize() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.linearize"]], "ninputs (control.flatsys.flatsystem attribute)": [[60, "control.flatsys.FlatSystem.ninputs"]], "noutputs (control.flatsys.flatsystem attribute)": [[60, "control.flatsys.FlatSystem.noutputs"]], "nstates (control.flatsys.flatsystem attribute)": [[60, "control.flatsys.FlatSystem.nstates"]], "output() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.output"]], "reverse() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.reverse"]], "set_inputs() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.set_inputs"]], "set_outputs() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.set_outputs"]], "set_states() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.set_states"]], "update_names() (control.flatsys.flatsystem method)": [[60, "control.flatsys.FlatSystem.update_names"]], "a (control.flatsys.linearflatsystem attribute)": [[61, "control.flatsys.LinearFlatSystem.A"]], "b (control.flatsys.linearflatsystem attribute)": [[61, "control.flatsys.LinearFlatSystem.B"]], "c (control.flatsys.linearflatsystem attribute)": [[61, "control.flatsys.LinearFlatSystem.C"]], "d (control.flatsys.linearflatsystem attribute)": [[61, "control.flatsys.LinearFlatSystem.D"]], "linearflatsystem (class in control.flatsys)": [[61, "control.flatsys.LinearFlatSystem"]], "__add__() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.__add__"]], "__call__() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.__call__"]], "__getitem__() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.__getitem__"]], "__mul__() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.__mul__"]], "__neg__() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.__neg__"]], "__radd__() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.__radd__"]], "__rmul__() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.__rmul__"]], "__rsub__() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.__rsub__"]], "__sub__() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.__sub__"]], "__truediv__() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.__truediv__"]], "append() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.append"]], "bandwidth() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.bandwidth"]], "copy() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.copy"]], "damp() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.damp"]], "dcgain() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.dcgain"]], "dynamics() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.dynamics"]], "feedback() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.feedback"]], "find_input() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.find_input"]], "find_inputs() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.find_inputs"]], "find_output() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.find_output"]], "find_outputs() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.find_outputs"]], "find_state() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.find_state"]], "find_states() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.find_states"]], "forward() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.forward"]], "freqresp() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.freqresp"]], "frequency_response() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.frequency_response"]], "horner() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.horner"]], "isctime() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.isctime"]], "isdtime() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.isdtime"]], "issiso() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.issiso"]], "lft() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.lft"]], "linearize() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.linearize"]], "minreal() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.minreal"]], "ninputs (control.flatsys.linearflatsystem attribute)": [[61, "control.flatsys.LinearFlatSystem.ninputs"]], "noutputs (control.flatsys.linearflatsystem attribute)": [[61, "control.flatsys.LinearFlatSystem.noutputs"]], "nstates (control.flatsys.linearflatsystem attribute)": [[61, "control.flatsys.LinearFlatSystem.nstates"]], "output() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.output"]], "poles() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.poles"]], "returnscipysignallti() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.returnScipySignalLTI"]], "reverse() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.reverse"]], "sample() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.sample"]], "set_inputs() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.set_inputs"]], "set_outputs() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.set_outputs"]], "set_states() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.set_states"]], "slycot_laub() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.slycot_laub"]], "states (control.flatsys.linearflatsystem property)": [[61, "control.flatsys.LinearFlatSystem.states"]], "update_names() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.update_names"]], "zeros() (control.flatsys.linearflatsystem method)": [[61, "control.flatsys.LinearFlatSystem.zeros"]], "polyfamily (class in control.flatsys)": [[62, "control.flatsys.PolyFamily"]], "__call__() (control.flatsys.polyfamily method)": [[62, "control.flatsys.PolyFamily.__call__"]], "eval() (control.flatsys.polyfamily method)": [[62, "control.flatsys.PolyFamily.eval"]], "eval_deriv() (control.flatsys.polyfamily method)": [[62, "control.flatsys.PolyFamily.eval_deriv"]], "var_ncoefs() (control.flatsys.polyfamily method)": [[62, "control.flatsys.PolyFamily.var_ncoefs"]], "systemtrajectory (class in control.flatsys)": [[63, "control.flatsys.SystemTrajectory"]], "eval() (control.flatsys.systemtrajectory method)": [[63, "control.flatsys.SystemTrajectory.eval"]], "response() (control.flatsys.systemtrajectory method)": [[63, "control.flatsys.SystemTrajectory.response"]], "flatsys() (in module control.flatsys)": [[64, "control.flatsys.flatsys"]], "point_to_point() (in module control.flatsys)": [[65, "control.flatsys.point_to_point"]], "solve_flat_ocp() (in module control.flatsys)": [[66, "control.flatsys.solve_flat_ocp"]], "forced_response() (in module control)": [[67, "control.forced_response"]], "frd() (in module control)": [[68, "control.frd"]], "frequency_response() (in module control)": [[69, "control.frequency_response"]], "__call__() (control.friction_backlash_nonlinearity method)": [[70, "control.friction_backlash_nonlinearity.__call__"]], "describing_function() (control.friction_backlash_nonlinearity method)": [[70, "control.friction_backlash_nonlinearity.describing_function"]], "friction_backlash_nonlinearity (class in control)": [[70, "control.friction_backlash_nonlinearity"]], "gangof4_plot() (in module control)": [[71, "control.gangof4_plot"]], "gangof4_response() (in module control)": [[72, "control.gangof4_response"]], "get_input_ff_index() (in module control)": [[73, "control.get_input_ff_index"]], "get_output_fb_index() (in module control)": [[74, "control.get_output_fb_index"]], "gram() (in module control)": [[75, "control.gram"]], "h2syn() (in module control)": [[76, "control.h2syn"]], "hankel_singular_values() (in module control)": [[77, "control.hankel_singular_values"]], "hinfsyn() (in module control)": [[78, "control.hinfsyn"]], "impulse_response() (in module control)": [[79, "control.impulse_response"]], "initial_response() (in module control)": [[80, "control.initial_response"]], "input_output_response() (in module control)": [[81, "control.input_output_response"]], "interconnect() (in module control)": [[82, "control.interconnect"]], "isctime() (in module control)": [[83, "control.isctime"]], "isdtime() (in module control)": [[84, "control.isdtime"]], "ispassive() (in module control)": [[85, "control.ispassive"]], "issiso() (in module control)": [[86, "control.issiso"]], "issys() (in module control)": [[87, "control.issys"]], "linearize() (in module control)": [[88, "control.linearize"]], "lqe() (in module control)": [[89, "control.lqe"]], "lqr() (in module control)": [[90, "control.lqr"]], "lyap() (in module control)": [[91, "control.lyap"]], "mag2db() (in module control)": [[92, "control.mag2db"]], "margin() (in module control)": [[93, "control.margin"]], "markov() (in module control)": [[94, "control.markov"]], "append() (in module control.matlab)": [[95, "control.matlab.append"]], "balred() (in module control.matlab)": [[96, "control.matlab.balred"]], "bode() (in module control.matlab)": [[97, "control.matlab.bode"]], "c2d() (in module control.matlab)": [[98, "control.matlab.c2d"]], "care() (in module control.matlab)": [[99, "control.matlab.care"]], "connect() (in module control.matlab)": [[100, "control.matlab.connect"]], "ctrb() (in module control.matlab)": [[101, "control.matlab.ctrb"]], "damp() (in module control.matlab)": [[102, "control.matlab.damp"]], "dare() (in module control.matlab)": [[103, "control.matlab.dare"]], "db2mag() (in module control.matlab)": [[104, "control.matlab.db2mag"]], "dcgain() (in module control.matlab)": [[105, "control.matlab.dcgain"]], "dlqe() (in module control.matlab)": [[106, "control.matlab.dlqe"]], "dlqr() (in module control.matlab)": [[107, "control.matlab.dlqr"]], "dlyap() (in module control.matlab)": [[108, "control.matlab.dlyap"]], "drss() (in module control.matlab)": [[109, "control.matlab.drss"]], "era() (in module control.matlab)": [[110, "control.matlab.era"]], "evalfr() (in module control.matlab)": [[111, "control.matlab.evalfr"]], "feedback() (in module control.matlab)": [[112, "control.matlab.feedback"]], "frd() (in module control.matlab)": [[113, "control.matlab.frd"]], "freqresp() (in module control.matlab)": [[114, "control.matlab.freqresp"]], "gangof4() (in module control.matlab)": [[115, "control.matlab.gangof4"]], "gram() (in module control.matlab)": [[116, "control.matlab.gram"]], "hsvd() (in module control.matlab)": [[117, "control.matlab.hsvd"]], "impulse() (in module control.matlab)": [[118, "control.matlab.impulse"]], "initial() (in module control.matlab)": [[119, "control.matlab.initial"]], "lqe() (in module control.matlab)": [[120, "control.matlab.lqe"]], "lqr() (in module control.matlab)": [[121, "control.matlab.lqr"]], "lsim() (in module control.matlab)": [[122, "control.matlab.lsim"]], "lyap() (in module control.matlab)": [[123, "control.matlab.lyap"]], "mag2db() (in module control.matlab)": [[124, "control.matlab.mag2db"]], "margin() (in module control.matlab)": [[125, "control.matlab.margin"]], "markov() (in module control.matlab)": [[126, "control.matlab.markov"]], "minreal() (in module control.matlab)": [[127, "control.matlab.minreal"]], "modred() (in module control.matlab)": [[128, "control.matlab.modred"]], "negate() (in module control.matlab)": [[129, "control.matlab.negate"]], "nichols() (in module control.matlab)": [[130, "control.matlab.nichols"]], "nyquist() (in module control.matlab)": [[131, "control.matlab.nyquist"]], "obsv() (in module control.matlab)": [[132, "control.matlab.obsv"]], "pade() (in module control.matlab)": [[133, "control.matlab.pade"]], "parallel() (in module control.matlab)": [[134, "control.matlab.parallel"]], "place() (in module control.matlab)": [[135, "control.matlab.place"]], "pole() (in module control.matlab)": [[136, "control.matlab.pole"]], "pzmap() (in module control.matlab)": [[137, "control.matlab.pzmap"]], "rlocus() (in module control.matlab)": [[138, "control.matlab.rlocus"]], "rss() (in module control.matlab)": [[139, "control.matlab.rss"]], "series() (in module control.matlab)": [[140, "control.matlab.series"]], "sisotool() (in module control.matlab)": [[141, "control.matlab.sisotool"]], "ss() (in module control.matlab)": [[142, "control.matlab.ss"]], "ss2tf() (in module control.matlab)": [[143, "control.matlab.ss2tf"]], "step() (in module control.matlab)": [[144, "control.matlab.step"]], "tf() (in module control.matlab)": [[145, "control.matlab.tf"]], "tf2ss() (in module control.matlab)": [[146, "control.matlab.tf2ss"]], "tfdata() (in module control.matlab)": [[147, "control.matlab.tfdata"]], "unwrap() (in module control.matlab)": [[148, "control.matlab.unwrap"]], "zero() (in module control.matlab)": [[149, "control.matlab.zero"]], "minimal_realization() (in module control)": [[150, "control.minimal_realization"]], "mixsyn() (in module control)": [[151, "control.mixsyn"]], "modal_form() (in module control)": [[152, "control.modal_form"]], "model_reduction() (in module control)": [[153, "control.model_reduction"]], "negate() (in module control)": [[154, "control.negate"]], "nichols_grid() (in module control)": [[155, "control.nichols_grid"]], "nichols_plot() (in module control)": [[156, "control.nichols_plot"]], "nlsys() (in module control)": [[157, "control.nlsys"]], "norm() (in module control)": [[158, "control.norm"]], "nyquist_plot() (in module control)": [[159, "control.nyquist_plot"]], "nyquist_response() (in module control)": [[160, "control.nyquist_response"]], "observable_form() (in module control)": [[161, "control.observable_form"]], "obsv() (in module control)": [[162, "control.obsv"]], "optimalcontrolproblem (class in control.optimal)": [[163, "control.optimal.OptimalControlProblem"]], "compute_mpc() (control.optimal.optimalcontrolproblem method)": [[163, "control.optimal.OptimalControlProblem.compute_mpc"]], "compute_trajectory() (control.optimal.optimalcontrolproblem method)": [[163, "control.optimal.OptimalControlProblem.compute_trajectory"]], "create_mpc_iosystem() (control.optimal.optimalcontrolproblem method)": [[163, "control.optimal.OptimalControlProblem.create_mpc_iosystem"]], "optimalcontrolresult (class in control.optimal)": [[164, "control.optimal.OptimalControlResult"]], "__class_getitem__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__class_getitem__"]], "__contains__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__contains__"]], "__delattr__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__delattr__"]], "__delitem__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__delitem__"]], "__dir__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__dir__"]], "__eq__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__eq__"]], "__ge__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__ge__"]], "__getattribute__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__getattribute__"]], "__getitem__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__getitem__"]], "__gt__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__gt__"]], "__hash__ (control.optimal.optimalcontrolresult attribute)": [[164, "control.optimal.OptimalControlResult.__hash__"]], "__ior__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__ior__"]], "__iter__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__iter__"]], "__le__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__le__"]], "__len__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__len__"]], "__lt__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__lt__"]], "__ne__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__ne__"]], "__new__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__new__"]], "__or__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__or__"]], "__reversed__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__reversed__"]], "__ror__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__ror__"]], "__setattr__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__setattr__"]], "__setitem__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__setitem__"]], "__sizeof__() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.__sizeof__"]], "clear() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.clear"]], "copy() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.copy"]], "cost (control.optimal.optimalcontrolresult attribute)": [[164, "control.optimal.OptimalControlResult.cost"]], "fromkeys() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.fromkeys"]], "get() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.get"]], "inputs (control.optimal.optimalcontrolresult attribute)": [[164, "control.optimal.OptimalControlResult.inputs"]], "items() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.items"]], "keys() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.keys"]], "pop() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.pop"]], "popitem() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.popitem"]], "problem (control.optimal.optimalcontrolresult attribute)": [[164, "control.optimal.OptimalControlResult.problem"]], "setdefault() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.setdefault"]], "states (control.optimal.optimalcontrolresult attribute)": [[164, "control.optimal.OptimalControlResult.states"]], "success (control.optimal.optimalcontrolresult attribute)": [[164, "control.optimal.OptimalControlResult.success"]], "update() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.update"]], "values() (control.optimal.optimalcontrolresult method)": [[164, "control.optimal.OptimalControlResult.values"]], "optimalestimationproblem (class in control.optimal)": [[165, "control.optimal.OptimalEstimationProblem"]], "compute_estimate() (control.optimal.optimalestimationproblem method)": [[165, "control.optimal.OptimalEstimationProblem.compute_estimate"]], "create_mhe_iosystem() (control.optimal.optimalestimationproblem method)": [[165, "control.optimal.OptimalEstimationProblem.create_mhe_iosystem"]], "optimalestimationresult (class in control.optimal)": [[166, "control.optimal.OptimalEstimationResult"]], "__class_getitem__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__class_getitem__"]], "__contains__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__contains__"]], "__delattr__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__delattr__"]], "__delitem__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__delitem__"]], "__dir__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__dir__"]], "__eq__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__eq__"]], "__ge__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__ge__"]], "__getattribute__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__getattribute__"]], "__getitem__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__getitem__"]], "__gt__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__gt__"]], "__hash__ (control.optimal.optimalestimationresult attribute)": [[166, "control.optimal.OptimalEstimationResult.__hash__"]], "__ior__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__ior__"]], "__iter__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__iter__"]], "__le__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__le__"]], "__len__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__len__"]], "__lt__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__lt__"]], "__ne__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__ne__"]], "__new__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__new__"]], "__or__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__or__"]], "__reversed__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__reversed__"]], "__ror__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__ror__"]], "__setattr__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__setattr__"]], "__setitem__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__setitem__"]], "__sizeof__() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.__sizeof__"]], "clear() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.clear"]], "copy() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.copy"]], "cost (control.optimal.optimalestimationresult attribute)": [[166, "control.optimal.OptimalEstimationResult.cost"]], "fromkeys() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.fromkeys"]], "get() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.get"]], "inputs (control.optimal.optimalestimationresult attribute)": [[166, "control.optimal.OptimalEstimationResult.inputs"]], "items() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.items"]], "keys() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.keys"]], "outputs (control.optimal.optimalestimationresult attribute)": [[166, "control.optimal.OptimalEstimationResult.outputs"]], "pop() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.pop"]], "popitem() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.popitem"]], "problem (control.optimal.optimalestimationresult attribute)": [[166, "control.optimal.OptimalEstimationResult.problem"]], "setdefault() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.setdefault"]], "states (control.optimal.optimalestimationresult attribute)": [[166, "control.optimal.OptimalEstimationResult.states"]], "success (control.optimal.optimalestimationresult attribute)": [[166, "control.optimal.OptimalEstimationResult.success"]], "update() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.update"]], "values() (control.optimal.optimalestimationresult method)": [[166, "control.optimal.OptimalEstimationResult.values"]], "create_mpc_iosystem() (in module control.optimal)": [[167, "control.optimal.create_mpc_iosystem"]], "disturbance_range_constraint() (in module control.optimal)": [[168, "control.optimal.disturbance_range_constraint"]], "gaussian_likelihood_cost() (in module control.optimal)": [[169, "control.optimal.gaussian_likelihood_cost"]], "input_poly_constraint() (in module control.optimal)": [[170, "control.optimal.input_poly_constraint"]], "input_range_constraint() (in module control.optimal)": [[171, "control.optimal.input_range_constraint"]], "output_poly_constraint() (in module control.optimal)": [[172, "control.optimal.output_poly_constraint"]], "output_range_constraint() (in module control.optimal)": [[173, "control.optimal.output_range_constraint"]], "quadratic_cost() (in module control.optimal)": [[174, "control.optimal.quadratic_cost"]], "solve_ocp() (in module control.optimal)": [[175, "control.optimal.solve_ocp"]], "state_poly_constraint() (in module control.optimal)": [[176, "control.optimal.state_poly_constraint"]], "state_range_constraint() (in module control.optimal)": [[177, "control.optimal.state_range_constraint"]], "pade() (in module control)": [[178, "control.pade"]], "parallel() (in module control)": [[179, "control.parallel"]], "phase_crossover_frequencies() (in module control)": [[180, "control.phase_crossover_frequencies"]], "phase_plane_plot() (in module control)": [[181, "control.phase_plane_plot"]], "phase_plot() (in module control)": [[182, "control.phase_plot"]], "boxgrid() (in module control.phaseplot)": [[183, "control.phaseplot.boxgrid"]], "equilpoints() (in module control.phaseplot)": [[184, "control.phaseplot.equilpoints"]], "separatrices() (in module control.phaseplot)": [[185, "control.phaseplot.separatrices"]], "streamlines() (in module control.phaseplot)": [[186, "control.phaseplot.streamlines"]], "vectorfield() (in module control.phaseplot)": [[187, "control.phaseplot.vectorfield"]], "place() (in module control)": [[188, "control.place"]], "place_varga() (in module control)": [[189, "control.place_varga"]], "pole_zero_map() (in module control)": [[190, "control.pole_zero_map"]], "pole_zero_plot() (in module control)": [[191, "control.pole_zero_plot"]], "pole_zero_subplots() (in module control)": [[192, "control.pole_zero_subplots"]], "poles() (in module control)": [[193, "control.poles"]], "pzmap() (in module control)": [[194, "control.pzmap"]], "reachable_form() (in module control)": [[195, "control.reachable_form"]], "__call__() (control.relay_hysteresis_nonlinearity method)": [[196, "control.relay_hysteresis_nonlinearity.__call__"]], "describing_function() (control.relay_hysteresis_nonlinearity method)": [[196, "control.relay_hysteresis_nonlinearity.describing_function"]], "relay_hysteresis_nonlinearity (class in control)": [[196, "control.relay_hysteresis_nonlinearity"]], "reset_defaults() (in module control)": [[197, "control.reset_defaults"]], "reset_rcparams() (in module control)": [[198, "control.reset_rcParams"]], "root_locus() (in module control)": [[199, "control.root_locus"]], "root_locus_map() (in module control)": [[200, "control.root_locus_map"]], "root_locus_plot() (in module control)": [[201, "control.root_locus_plot"]], "rootlocus_pid_designer() (in module control)": [[202, "control.rootlocus_pid_designer"]], "rss() (in module control)": [[203, "control.rss"]], "sample_system() (in module control)": [[204, "control.sample_system"]], "__call__() (control.saturation_nonlinearity method)": [[205, "control.saturation_nonlinearity.__call__"]], "describing_function() (control.saturation_nonlinearity method)": [[205, "control.saturation_nonlinearity.describing_function"]], "saturation_nonlinearity (class in control)": [[205, "control.saturation_nonlinearity"]], "series() (in module control)": [[206, "control.series"]], "set_defaults() (in module control)": [[207, "control.set_defaults"]], "similarity_transform() (in module control)": [[208, "control.similarity_transform"]], "singular_values_plot() (in module control)": [[209, "control.singular_values_plot"]], "singular_values_response() (in module control)": [[210, "control.singular_values_response"]], "sisotool() (in module control)": [[211, "control.sisotool"]], "ss() (in module control)": [[212, "control.ss"]], "ss2tf() (in module control)": [[213, "control.ss2tf"]], "ssdata() (in module control)": [[214, "control.ssdata"]], "stability_margins() (in module control)": [[215, "control.stability_margins"]], "step_info() (in module control)": [[216, "control.step_info"]], "step_response() (in module control)": [[217, "control.step_response"]], "summing_junction() (in module control)": [[218, "control.summing_junction"]], "tf() (in module control)": [[219, "control.tf"]], "tf2ss() (in module control)": [[220, "control.tf2ss"]], "tfdata() (in module control)": [[221, "control.tfdata"]], "time_response_plot() (in module control)": [[222, "control.time_response_plot"]], "timebase() (in module control)": [[223, "control.timebase"]], "unwrap() (in module control)": [[224, "control.unwrap"]], "use_fbs_defaults() (in module control)": [[225, "control.use_fbs_defaults"]], "use_legacy_defaults() (in module control)": [[226, "control.use_legacy_defaults"]], "use_matlab_defaults() (in module control)": [[227, "control.use_matlab_defaults"]], "white_noise() (in module control)": [[228, "control.white_noise"]], "zeros() (in module control)": [[229, "control.zeros"]], "zpk() (in module control)": [[230, "control.zpk"]], "control.matlab": [[238, "module-control.matlab"]], "control.optimal": [[267, "module-control.optimal"]]}})